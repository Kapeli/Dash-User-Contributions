(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9754],{12370:function(a,e){"use strict";e.Z="/_next/static/media/card.16a69957a5b5ca1ded1fd8e6aafbe5de.jpg"},59102:function(a,e,t){"use strict";t.r(e),t.d(e,{__N_SSG:function(){return u},default:function(){return d}});var n=t(159),s=t(10219),p=(t(67294),t(3905)),o=(t(41664),t(49485)),r=t(34304),l=t(29852),m=t(6953),c=t(12370);const i=["components"],k={meta:{title:"Tailwind CSS v2.2",description:"An all-new high-performance CLI tool, ::before and ::after support, sibling selectors, selected text variants, and tons more.",date:"2021-06-17T14:00:00.000Z",authors:[m.Oq],image:c.Z},slug:"tailwindcss-2-2",tableOfContents:[{title:"All-new high-performance Tailwind CLI",slug:"all-new-high-performance-tailwind-cli",children:[]},{title:"Before and after pseudo-element variants",slug:"before-and-after-pseudo-element-variants",children:[]},{title:"First-letter/line variants",slug:"first-letter-line-variants",children:[]},{title:"Selected text variants",slug:"selected-text-variants",children:[]},{title:"List marker variants",slug:"list-marker-variants",children:[]},{title:"Sibling selector variants",slug:"sibling-selector-variants",children:[]},{title:"Exhaustive pseudo-class support",slug:"exhaustive-pseudo-class-support",children:[]},{title:"Shorthand color opacity syntax",slug:"shorthand-color-opacity-syntax",children:[]},{title:"Extended arbitrary value support",slug:"extended-arbitrary-value-support",children:[]},{title:"Improved nesting support",slug:"improved-nesting-support",children:[]},{title:"Caret color utilities",slug:"caret-color-utilities",children:[]},{title:"Background origin utilities",slug:"background-origin-utilities",children:[]},{title:"Simplified transform and filter composition",slug:"simplified-transform-and-filter-composition",children:[]},{title:"Per-side border color utilities",slug:"per-side-border-color-utilities",children:[]},{title:"Built-in safelist, transform, and extract support",slug:"built-in-safelist-transform-and-extract-support",children:[]},{title:"Upgrading",slug:"upgrading",children:[]}]},N=l.B;var u=!0;function d(a){let{components:e}=a,t=(0,s.Z)(a,i);return(0,p.kt)(N,(0,n.Z)({},k,t,{components:e,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"Well I can\u2019t say we were really planning on it but over the last few weeks we\u2019ve been having a ton of fun dumping new and exciting features into Tailwind and now feels like the right time to cut a release, so here it is \u2014 Tailwind CSS v2.2!"),(0,p.kt)("div",{className:"aspect-w-16 aspect-h-9 my-12"},(0,p.kt)("iframe",{src:"https://www.youtube.com/embed/DxcJbrs6rKk",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})),(0,p.kt)("p",null,"This has to be one of the most feature-rich Tailwind releases of all-time. Introducing ",(0,p.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/just-in-time-mode"},"Just-in-Time mode")," back in v2.1 has opened the doors to a lot of cool features we couldn\u2019t have easily added otherwise, and this release is loaded with great examples of that."),(0,p.kt)("p",null,"Here are the highlights:"),(0,p.kt)("ul",{role:"list"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#all-new-high-performance-tailwind-cli"},"All-new high-performance Tailwind CLI")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#before-and-after-variants"},"Before and after variants")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#first-letter-line-variants"},"First-letter/line variants")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#selected-text-variants"},"Selected text variants")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#list-marker-variants"},"List marker variants")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#sibling-selector-variants"},"Sibling selector variants")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#exhaustive-pseudo-class-support"},"Exhaustive pseudo-class support")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#shorthand-color-opacity-syntax"},"Shorthand color opacity syntax")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#extended-arbitrary-value-support"},"Extended arbitrary value support")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#improved-nesting-support"},"Improved nesting support")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#caret-color-utilities"},"Caret color utilities")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#background-origin-utilities"},"Background origin utilities")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#simplified-transform-and-filter-composition"},"Simplified transform and filter composition")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#per-side-border-color-utilities"},"Per-side border color utilities")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#built-in-safelist-transform-and-extract-support"},"Built-in safelist, transform, and extract support"))),(0,p.kt)("p",null,"For the full details, ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/tailwindlabs/tailwindcss/releases/tag/v2.2.0"},"check out the release notes")," on GitHub."),(0,p.kt)("p",null,"It\u2019s important to note that although this is a minor release and there are no breaking changes in the classic engine, ",(0,p.kt)("strong",{parentName:"p"},"Just-in-Time mode is still in preview and v2.2 introduces a few very small changes that might impact you"),", so make sure you read through the ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/tailwindlabs/tailwindcss/releases/tag/v2.2.0#changes-and-deprecations"},"changes and deprecations")," in the release notes when upgrading."),(0,p.kt)("p",null,"When you\u2019re ready to upgrade, just install the latest version from npm and you\u2019re off to the races:"),(0,p.kt)("pre",{className:"language-shell"},(0,p.kt)("code",{parentName:"pre",className:"language-shell"},(0,p.kt)("span",{parentName:"code",className:"token function"},"npm")," ",(0,p.kt)("span",{parentName:"code",className:"token function"},"install")," -D tailwindcss@latest")),(0,p.kt)("hr",null),(0,p.kt)("a",{name:"all-new-high-performance-tailwind-cli"}),(0,p.kt)(r.X,{level:2,id:"all-new-high-performance-tailwind-cli",nextElement:{type:"paragraph"}},"All-new high-performance Tailwind CLI"),(0,p.kt)("p",null,"We\u2019ve rewritten the Tailwind CLI tool from the ground-up with a performance-first mindset, while also adding support for a bunch of new features."),(0,p.kt)("pre",{className:"language-shell"},(0,p.kt)("code",{parentName:"pre",className:"language-shell"},"npx tailwindcss -o dist/tailwind.css --watch --jit --purge",(0,p.kt)("span",{parentName:"code",className:"token operator"},"="),(0,p.kt)("span",{parentName:"code",className:"token string"},'"./src/**/*.html"'))),(0,p.kt)("p",null,"Here are some of the highlights:"),(0,p.kt)("ul",{role:"list"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"No installation or configuration necessary")," \u2014 simply ",(0,p.kt)("inlineCode",{parentName:"li"},"npx tailwindcss -o output.css")," to compile Tailwind from anywhere. You can even enable JIT mode with the ",(0,p.kt)("inlineCode",{parentName:"li"},"--jit")," flag and pass in your content files using the ",(0,p.kt)("inlineCode",{parentName:"li"},"--purge")," option, all without creating a config file."),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"Watch mode")," \u2014 so you can automatically rebuild your CSS whenever you make any changes."),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"JIT performance optimizations")," \u2014 since our CLI is Tailwind-specific we\u2019ve been able to make tons of optimizations that make it the absolute fastest build tool for compiling your CSS in JIT mode."),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"Minification support")," \u2014 now you can minify your CSS with ",(0,p.kt)("a",{parentName:"li",href:"https://cssnano.co/"},"cssnano")," just by adding the ",(0,p.kt)("inlineCode",{parentName:"li"},"--minify")," flag."),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"PostCSS plugin support")," \u2014 the new CLI will read and respect any extra plugins you configure using a ",(0,p.kt)("inlineCode",{parentName:"li"},"postcss.config.js")," file.")),(0,p.kt)("p",null,"It\u2019s fully backwards-compatible with the previous CLI, so if you\u2019ve got any scripts set up already you should be able to upgrade to v2.2 without making any changes to your scripts."),(0,p.kt)("p",null,"Check out our ",(0,p.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/installation#using-tailwind-cli"},"updated Tailwind CLI documentation")," to learn more."),(0,p.kt)("p",null,(0,p.kt)("em",{parentName:"p"},"Note that if you were using the ",(0,p.kt)("inlineCode",{parentName:"em"},"tailwindcss-cli")," wrapper package, you can safely switch to ",(0,p.kt)("inlineCode",{parentName:"em"},"tailwindcss")," as we\u2019ve managed to resolve the peer-dependency issues that forced us to create the wrapper package in the first place.")),(0,p.kt)("a",{name:"before-and-after-pseudo-element-variants"}),(0,p.kt)(r.X,{level:2,id:"before-and-after-pseudo-element-variants",nextElement:{type:"paragraph"}},"Before and after pseudo-element variants"),(0,p.kt)("p",null,(0,p.kt)("em",{parentName:"p"},"This feature is only available in ",(0,p.kt)("a",{parentName:"em",href:"https://tailwindcss.com/docs/just-in-time-mode"},"Just-in-Time mode")),"."),(0,p.kt)("p",null,"People have been asking for this for years and it\u2019s finally here! We\u2019ve added first-party support for styling pseudo-elements like ",(0,p.kt)("inlineCode",{parentName:"p"},"before")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"after"),":"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"div")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"before:block before:bg-blue-500 after:flex after:bg-pink-300",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"div"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("p",null,"We set ",(0,p.kt)("inlineCode",{parentName:"p"},'content: ""')," automatically any time you use a ",(0,p.kt)("inlineCode",{parentName:"p"},"before")," or ",(0,p.kt)("inlineCode",{parentName:"p"},"after")," variant to make sure the elements are rendered, but you can override it using the new ",(0,p.kt)("inlineCode",{parentName:"p"},"content")," utilities which have full arbitrary value support:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"div")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"before:content-[",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"'"),"hello",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"'"),"] before:block ...",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"div"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("p",null,"You can even grab the content from an attribute using the CSS ",(0,p.kt)("inlineCode",{parentName:"p"},"attr()")," function:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"div"),"\n  ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"before"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"hello world",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),"\n  ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"before:content-[attr(before)] before:block ...",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),"\n",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"div"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("p",null,"This can be super helpful when your content has spaces in it, since spaces can\u2019t be used in CSS class names."),(0,p.kt)("a",{name:"first-letter-line-variants"}),(0,p.kt)(r.X,{level:2,id:"first-letter-line-variants",nextElement:{type:"paragraph"}},"First-letter/line variants"),(0,p.kt)("p",null,(0,p.kt)("em",{parentName:"p"},"This feature is only available in ",(0,p.kt)("a",{parentName:"em",href:"https://tailwindcss.com/docs/just-in-time-mode"},"Just-in-Time mode")),"."),(0,p.kt)("p",null,"We\u2019ve added variants for the ",(0,p.kt)("inlineCode",{parentName:"p"},"first-letter")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"first-line")," pseudo-elements, so you can do stuff like drop caps:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"p")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"first-letter:text-4xl first-letter:font-bold first-letter:float-left",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  The night was March 31, 1996, and it was finally time for Bret Hart to face\n  off against Shawn Michaels in the long anticipated Iron Man match \u2014 a 60\n  minute war of endurance where the man who scored the most number of falls\n  would walk away as the WWF World Heavyweight Champion.\n",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"p"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("a",{name:"selected-text-variants"}),(0,p.kt)(r.X,{level:2,id:"selected-text-variants",nextElement:{type:"paragraph"}},"Selected text variants"),(0,p.kt)("p",null,(0,p.kt)("em",{parentName:"p"},"This feature is only available in ",(0,p.kt)("a",{parentName:"em",href:"https://tailwindcss.com/docs/just-in-time-mode"},"Just-in-Time mode")),"."),(0,p.kt)("p",null,"We\u2019ve added a new ",(0,p.kt)("inlineCode",{parentName:"p"},"selection")," variant that makes it super easy to style highlighted to match your design:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"p")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"selection:bg-pink-200",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  After nearly a grueling hour of warfare with neither man scoring a fall, Hart\n  locked in the Sharpshooter, his signature submission hold. As Michaels\n  screamed in pain, the crowd were certain that Hart was about to walk away from\n  WrestleMania XII as the still-World Heavyweight Champion.\n",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"p"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("p",null,"We\u2019ve even built this feature in such a way that it can be applied to a parent element and cascade down, so you can set a highlight color for your whole site by applying a utility to the body:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"body")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"selection:bg-pink-200",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token comment"},"\x3c!-- ... --\x3e"),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"p"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n    But Michaels didn't give up \u2014 he held on until the bell rang and the\n    designated 60 minutes was up. Hart walked away content, thinking that\n    without a clear winner, the title was his to hold. He was not prepared for\n    what would happen next, when Gorilla Monsoon declared the match would\n    continue under sudden death rules.\n  ",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"p"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"body"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("a",{name:"list-marker-variants"}),(0,p.kt)(r.X,{level:2,id:"list-marker-variants",nextElement:{type:"paragraph"}},"List marker variants"),(0,p.kt)("p",null,(0,p.kt)("em",{parentName:"p"},"This feature is only available in ",(0,p.kt)("a",{parentName:"em",href:"https://tailwindcss.com/docs/just-in-time-mode"},"Just-in-Time mode")),"."),(0,p.kt)("p",null,"You can use the new ",(0,p.kt)("inlineCode",{parentName:"p"},"marker")," variant to style the bullets or numbers at the beginning of a list:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"h1"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"WrestleMania XII Results",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"h1"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n\n",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"ol")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"marker:text-gray-500 marker:font-medium",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"li"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n    The British Bulldog, Owen Hart, and Vader defeated Ahmed Johnson, Jake\n    Roberts, and Yokozuna\n  ",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"li"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"li"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"Roddy Piper defeated Goldust",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"li"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"li"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"Stone Cold Steve Austin defeated Savio Vega",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"li"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"li"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"The Ultimate Warrior defeated Hunter Hearst Helmsley",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"li"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"li"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"The Undertaker defeated Diesel",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"li"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"li"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"Shawn Michaels defeated Bret Hart",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"li"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"ol"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("p",null,"Like the ",(0,p.kt)("inlineCode",{parentName:"p"},"selection")," variant, we\u2019ve implemented this in a way that it cascades from the parent, so you don\u2019t have to repeat it for each list item."),(0,p.kt)("a",{name:"sibling-selector-variants"}),(0,p.kt)(r.X,{level:2,id:"sibling-selector-variants",nextElement:{type:"paragraph"}},"Sibling selector variants"),(0,p.kt)("p",null,(0,p.kt)("em",{parentName:"p"},"This feature is only available in ",(0,p.kt)("a",{parentName:"em",href:"https://tailwindcss.com/docs/just-in-time-mode"},"Just-in-Time mode")),"."),(0,p.kt)("p",null,"Tailwind CSS v2.2 adds new ",(0,p.kt)("inlineCode",{parentName:"p"},"peer-*")," variants that behave much like the ",(0,p.kt)("inlineCode",{parentName:"p"},"group-*")," variants, but for targeting sibling elements instead of parent elements."),(0,p.kt)("p",null,"This is useful for things like styling an element when a preceding checkbox is checked, doing things like floating labels, and lots more:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"label"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"input")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"type"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"checkbox",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'))," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"peer sr-only",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"span")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"h-4 w-4 bg-gray-200 peer-checked:bg-blue-500",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token comment"},"\x3c!-- ... --\x3e"),"\n",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"label"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("p",null,"Just like ",(0,p.kt)("inlineCode",{parentName:"p"},"group")," can be combined with any other variant, ",(0,p.kt)("inlineCode",{parentName:"p"},"peer")," can as well, so you have variants like ",(0,p.kt)("inlineCode",{parentName:"p"},"peer-hover"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"peer-focus"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"peer-disabled"),", and loads more at your fingertips."),(0,p.kt)("p",null,"The generated CSS uses the ",(0,p.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/General_sibling_combinator"},"general sibling combinator")," and looks like this:"),(0,p.kt)("pre",{className:"language-css"},(0,p.kt)("code",{parentName:"pre",className:"language-css"},(0,p.kt)("span",{parentName:"code",className:"token selector"},(0,p.kt)("span",{parentName:"span",className:"token class"},".peer"),(0,p.kt)("span",{parentName:"span",className:"token pseudo-class"},":checked")," ",(0,p.kt)("span",{parentName:"span",className:"token combinator"},"~")," ",(0,p.kt)("span",{parentName:"span",className:"token class"},".peer-checked"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"\\"),(0,p.kt)("span",{parentName:"span",className:"token class"},":bg-blue-500"))," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token property"},"background-color"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},":")," ",(0,p.kt)("span",{parentName:"code",className:"token hexcode color"},"#3b82f6"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},";"),"\n",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}"))),(0,p.kt)("p",null,"So just like in vanilla CSS, it will only work for targeting ",(0,p.kt)("em",{parentName:"p"},"previous")," siblings, not siblings that appear later in the DOM."),(0,p.kt)("a",{name:"exhaustive-pseudo-class-support"}),(0,p.kt)(r.X,{level:2,id:"exhaustive-pseudo-class-support",nextElement:{type:"paragraph"}},"Exhaustive pseudo-class support"),(0,p.kt)("p",null,(0,p.kt)("em",{parentName:"p"},"This feature is only available in ",(0,p.kt)("a",{parentName:"em",href:"https://tailwindcss.com/docs/just-in-time-mode"},"Just-in-Time mode")),"."),(0,p.kt)("p",null,"We\u2019ve added variants for basically every single missing pseudo-class we could think of in this release:"),(0,p.kt)("ul",{role:"list"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"only")," ",(0,p.kt)("em",{parentName:"li"},"(only-child)")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"first-of-type")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"last-of-type")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"only-of-type")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"target")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"default")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"indeterminate")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"placeholder-shown")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"autofill")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"required")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"valid")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"invalid")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"in-range")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"out-of-range"))),(0,p.kt)("p",null,"Personal favorite in the list is ",(0,p.kt)("inlineCode",{parentName:"p"},"placeholder-shown")," \u2014 when combined with the new sibling selector variants it makes it possible to do cool stuff like floating labels:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"div")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"relative",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"input")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"id"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"name",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'))," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"peer ...",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"label")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"for"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"name",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'))," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"peer-placeholder-shown:top-4 peer-focus:top-0 ...",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"div"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("a",{name:"shorthand-color-opacity-syntax"}),(0,p.kt)(r.X,{level:2,id:"shorthand-color-opacity-syntax",nextElement:{type:"paragraph"}},"Shorthand color opacity syntax"),(0,p.kt)("p",null,(0,p.kt)("em",{parentName:"p"},"This feature is only available in ",(0,p.kt)("a",{parentName:"em",href:"https://tailwindcss.com/docs/just-in-time-mode"},"Just-in-Time mode")),"."),(0,p.kt)("p",null,"Instead of using utilities like ",(0,p.kt)("inlineCode",{parentName:"p"},"bg-opacity-50"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"text-opacity-25"),", or ",(0,p.kt)("inlineCode",{parentName:"p"},"placeholder-opacity-40"),", Tailwind CSS v2.2 gives you a new color opacity shorthand you can use to tweak the alpha channel of a color directly in the color utility itself:"),(0,p.kt)("pre",{className:"language-diff-html"},(0,p.kt)("code",{parentName:"pre",className:"language-diff-html"},(0,p.kt)("span",{parentName:"code",className:"token language-html deleted"},(0,p.kt)("span",{parentName:"span",className:"token tag punctuation"},"<"),(0,p.kt)("span",{parentName:"span",className:"token tag"},"div"),(0,p.kt)("span",{parentName:"span",className:"token tag"}," "),(0,p.kt)("span",{parentName:"span",className:"token tag attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value"},"bg-red-500 bg-opacity-25"),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token tag punctuation"},">"),(0,p.kt)("span",{parentName:"span",className:"token plain"}),"\n"),(0,p.kt)("span",{parentName:"code",className:"token language-html inserted"},(0,p.kt)("span",{parentName:"span",className:"token plain"}),(0,p.kt)("span",{parentName:"span",className:"token tag punctuation"},"<"),(0,p.kt)("span",{parentName:"span",className:"token tag"},"div"),(0,p.kt)("span",{parentName:"span",className:"token tag"}," "),(0,p.kt)("span",{parentName:"span",className:"token tag attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value"},"bg-red-500/25"),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token tag punctuation"},">"),"\n"))),(0,p.kt)("p",null,"This means you can now change the opacity of colors anywhere in Tailwind, even where we previously didn\u2019t have specific opacity utilities, like in gradients for example:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"div")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"bg-gradient-to-r from-red-500/50",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"div"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("p",null,"The opacity values are taken from your ",(0,p.kt)("inlineCode",{parentName:"p"},"opacity")," scale, but you can also use arbitrary opacity values using square bracket notation:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"div")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"bg-red-500/[0.31]",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"div"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("p",null,"If I\u2019m being honest, I am more excited about never having to create another core plugin like ",(0,p.kt)("inlineCode",{parentName:"p"},"placeholderOpacity.js")," for you people again than I am about actually using the feature. And I\u2019m really excited about the feature, so that says something."),(0,p.kt)("a",{name:"extended-arbitrary-value-support"}),(0,p.kt)(r.X,{level:2,id:"extended-arbitrary-value-support",nextElement:{type:"paragraph"}},"Extended arbitrary value support"),(0,p.kt)("p",null,(0,p.kt)("em",{parentName:"p"},"This feature is only available in ",(0,p.kt)("a",{parentName:"em",href:"https://tailwindcss.com/docs/just-in-time-mode"},"Just-in-Time mode")),"."),(0,p.kt)("p",null,"We\u2019ve gone over every core plugin in Tailwind to try and add the most flexible arbitrary value support we possibly could, and I think we\u2019ve covered pretty much everything at this point."),(0,p.kt)("p",null,"You should be able to whatever arbitrary values you want, just about wherever you want:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"div")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"col-start-[73] placeholder-[#aabbcc] object-[50%] ...",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"div"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("p",null,"If you find one we missed, open an issue and we\u2019ll sort it out."),(0,p.kt)("p",null,"In addition to making arbitrary value support more comprehensive, we\u2019ve also added a new type-hint syntax to handle ambiguous situations. For example, if you are using a CSS variable as an arbitrary value, it\u2019s not always clear what the generated CSS should be:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token comment"},"\x3c!-- Is this a font size utility, or a text color utility? --\x3e"),"\n",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"div")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"text-[var(--mystery-var)]",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"div"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("p",null,"Now you can provide a hint to the engine by prefixing the arbitrary value with the type name:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"div")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"text-[color:var(--mystery-var)]",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"div"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("p",null,"Currently, the supported types are:"),(0,p.kt)("ul",{role:"list"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"length")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"color")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"angle")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"list"))),(0,p.kt)("p",null,"We\u2019ll probably flesh this out even more over time as people discover new edge cases but this should get you very far."),(0,p.kt)("a",{name:"improved-nesting-support"}),(0,p.kt)(r.X,{level:2,id:"improved-nesting-support",nextElement:{type:"paragraph"}},"Improved nesting support"),(0,p.kt)("p",null,"Since Tailwind introduces a lot of non-standard CSS at-rules like ",(0,p.kt)("inlineCode",{parentName:"p"},"@tailwind")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"@apply"),", you can often run into weird output when combining it with a PostCSS nesting plugin like ",(0,p.kt)("inlineCode",{parentName:"p"},"postcss-nested")," or ",(0,p.kt)("inlineCode",{parentName:"p"},"postcss-nesting"),"."),(0,p.kt)("p",null,"To ease the pain here, we\u2019ve included a new PostCSS plugin in the ",(0,p.kt)("inlineCode",{parentName:"p"},"tailwindcss")," package that acts as a lightweight compatibility layer between existing nesting plugins and Tailwind itself."),(0,p.kt)("p",null,"So if you need nesting support in your project, use our plugin, and stick it before Tailwind in your PostCSS plugin list:"),(0,p.kt)("pre",{className:"language-js"},(0,p.kt)("code",{parentName:"pre",className:"language-js"},(0,p.kt)("span",{parentName:"code",className:"token comment"},"// postcss.config.js"),"\nmodule",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"."),(0,p.kt)("span",{parentName:"code",className:"token property-access"},"exports")," ",(0,p.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token literal-property property"},"plugins"),(0,p.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"["),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token comment"},"// ..."),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token function"},"require"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,p.kt)("span",{parentName:"code",className:"token string"},"'tailwindcss/nesting'"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},")"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token function"},"require"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,p.kt)("span",{parentName:"code",className:"token string"},"'tailwindcss'"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},")"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token comment"},"// ..."),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"]"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}"))),(0,p.kt)("p",null,"By default, it uses ",(0,p.kt)("inlineCode",{parentName:"p"},"postcss-nested")," under the hood ",(0,p.kt)("em",{parentName:"p"},"(since that\u2019s what we use to support nesting in Tailwind plugins)"),", but if you\u2019d like to use ",(0,p.kt)("inlineCode",{parentName:"p"},"postcss-nesting")," instead, just call our plugin as a function and pass through the ",(0,p.kt)("inlineCode",{parentName:"p"},"postcss-nesting")," plugin:"),(0,p.kt)("pre",{className:"language-js"},(0,p.kt)("code",{parentName:"pre",className:"language-js"},(0,p.kt)("span",{parentName:"code",className:"token comment"},"// postcss.config.js"),"\nmodule",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"."),(0,p.kt)("span",{parentName:"code",className:"token property-access"},"exports")," ",(0,p.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token literal-property property"},"plugins"),(0,p.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"["),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token comment"},"// ..."),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token function"},"require"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,p.kt)("span",{parentName:"code",className:"token string"},"'tailwindcss/nesting'"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},")"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,p.kt)("span",{parentName:"code",className:"token function"},"require"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,p.kt)("span",{parentName:"code",className:"token string"},"'postcss-nesting'"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},")"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},")"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token function"},"require"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,p.kt)("span",{parentName:"code",className:"token string"},"'tailwindcss'"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},")"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token comment"},"// ..."),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"]"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}"))),(0,p.kt)("p",null,"Under the hood, this uses a new ",(0,p.kt)("inlineCode",{parentName:"p"},"screen()")," function we\u2019ve introduced that you can use to get the expanded media expression from any of your configured breakpoints:"),(0,p.kt)("pre",{className:"language-css"},(0,p.kt)("code",{parentName:"pre",className:"language-css"},(0,p.kt)("span",{parentName:"code",className:"token comment"},"/* Input */"),"\n",(0,p.kt)("span",{parentName:"code",className:"token atrule"},(0,p.kt)("span",{parentName:"span",className:"token rule"},"@media")," ",(0,p.kt)("span",{parentName:"span",className:"token function"},"screen"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"("),"sm",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},")"))," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token comment"},"/* ... */"),"\n",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",(0,p.kt)("span",{parentName:"code",className:"token comment"},"/* Output */"),"\n",(0,p.kt)("span",{parentName:"code",className:"token atrule"},(0,p.kt)("span",{parentName:"span",className:"token rule"},"@media")," ",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"("),(0,p.kt)("span",{parentName:"span",className:"token property"},"min-width"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},":")," ",(0,p.kt)("span",{parentName:"span",className:"token number"},"640"),(0,p.kt)("span",{parentName:"span",className:"token unit"},"px"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},")"))," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token comment"},"/* ... */"),"\n",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}"))),(0,p.kt)("p",null,"You probably won\u2019t need to use this yourself but it could be helpful if you\u2019re ever integrating Tailwind with another tool that understands ",(0,p.kt)("inlineCode",{parentName:"p"},"@media")," but doesn\u2019t handle ",(0,p.kt)("inlineCode",{parentName:"p"},"@screen")," properly."),(0,p.kt)("pre",{className:"language-diff-css"},(0,p.kt)("code",{parentName:"pre",className:"language-diff-css"},(0,p.kt)("span",{parentName:"code",className:"token language-css deleted"},(0,p.kt)("span",{parentName:"span",className:"token atrule rule"},"@screen"),(0,p.kt)("span",{parentName:"span",className:"token atrule"}," sm"),(0,p.kt)("span",{parentName:"span",className:"token plain"}," "),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"{"),(0,p.kt)("span",{parentName:"span",className:"token plain"}," "),(0,p.kt)("span",{parentName:"span",className:"token comment"},"/* ... */"),(0,p.kt)("span",{parentName:"span",className:"token plain"}," "),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"}"),(0,p.kt)("span",{parentName:"span",className:"token plain"}),"\n"),(0,p.kt)("span",{parentName:"code",className:"token language-css inserted"},(0,p.kt)("span",{parentName:"span",className:"token plain"}),(0,p.kt)("span",{parentName:"span",className:"token atrule rule"},"@media"),(0,p.kt)("span",{parentName:"span",className:"token atrule"}," "),(0,p.kt)("span",{parentName:"span",className:"token atrule function"},"screen"),(0,p.kt)("span",{parentName:"span",className:"token atrule punctuation"},"("),(0,p.kt)("span",{parentName:"span",className:"token atrule"},"sm"),(0,p.kt)("span",{parentName:"span",className:"token atrule punctuation"},")"),(0,p.kt)("span",{parentName:"span",className:"token plain"}," "),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"{"),(0,p.kt)("span",{parentName:"span",className:"token plain"}," "),(0,p.kt)("span",{parentName:"span",className:"token comment"},"/* ... */"),(0,p.kt)("span",{parentName:"span",className:"token plain"}," "),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"}"),"\n"))),(0,p.kt)("a",{name:"caret-color-utilities"}),(0,p.kt)(r.X,{level:2,id:"caret-color-utilities",nextElement:{type:"paragraph"}},"Caret color utilities"),(0,p.kt)("p",null,(0,p.kt)("em",{parentName:"p"},"This feature is only available in ",(0,p.kt)("a",{parentName:"em",href:"https://tailwindcss.com/docs/just-in-time-mode"},"Just-in-Time mode")),"."),(0,p.kt)("p",null,"You can now set the color of the cursor in form fields using the new ",(0,p.kt)("inlineCode",{parentName:"p"},"caret-{color}")," utilities:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"input")," ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"caret-red-500",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'))," ",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"/>")))),(0,p.kt)("p",null,"These are customizable using the ",(0,p.kt)("inlineCode",{parentName:"p"},"caretColor")," key in the ",(0,p.kt)("inlineCode",{parentName:"p"},"theme")," section of your ",(0,p.kt)("inlineCode",{parentName:"p"},"tailwind.config.js")," file."),(0,p.kt)("a",{name:"background-origin-utilities"}),(0,p.kt)(r.X,{level:2,id:"background-origin-utilities",nextElement:{type:"paragraph"}},"Background origin utilities"),(0,p.kt)("p",null,"We\u2019ve added new utilities for the ",(0,p.kt)("inlineCode",{parentName:"p"},"background-origin")," property, which let you control where an element\u2019s background is positioned relative to the element\u2019s border, padding box, or content:"),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"div"),"\n  ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"bg-origin-border p-4 border-4 border-dashed ...",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),"\n  ",(0,p.kt)("span",{parentName:"span",className:"token special-attr"},(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"style"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token value css language-css"},(0,p.kt)("span",{parentName:"span",className:"token property"},"background-image"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},":")," ",(0,p.kt)("span",{parentName:"span",className:"token url"},(0,p.kt)("span",{parentName:"span",className:"token function"},"url"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"("),"...",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},")"))),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'))),"\n",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  Background is rendered under the border\n",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"div"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n\n",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"div"),"\n  ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"bg-origin-padding p-4 border-4 border-dashed ...",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),"\n  ",(0,p.kt)("span",{parentName:"span",className:"token special-attr"},(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"style"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token value css language-css"},(0,p.kt)("span",{parentName:"span",className:"token property"},"background-image"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},":")," ",(0,p.kt)("span",{parentName:"span",className:"token url"},(0,p.kt)("span",{parentName:"span",className:"token function"},"url"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"("),"...",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},")"))),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'))),"\n",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  Background is rendered within the border but on top of any padding\n",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"div"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n\n",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"div"),"\n  ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"bg-origin-content p-4 border-4 border-dashed ...",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),"\n  ",(0,p.kt)("span",{parentName:"span",className:"token special-attr"},(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"style"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token value css language-css"},(0,p.kt)("span",{parentName:"span",className:"token property"},"background-image"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},":")," ",(0,p.kt)("span",{parentName:"span",className:"token url"},(0,p.kt)("span",{parentName:"span",className:"token function"},"url"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"("),"...",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},")"))),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'))),"\n",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  Background is rendered within any padding and under the content\n",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"div"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("p",null,"Learn more in the ",(0,p.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/background-origin"},"background origin documentation"),"."),(0,p.kt)("a",{name:"simplified-transform-and-filter-composition"}),(0,p.kt)(r.X,{level:2,id:"simplified-transform-and-filter-composition",nextElement:{type:"paragraph"}},"Simplified transform and filter composition"),(0,p.kt)("p",null,(0,p.kt)("em",{parentName:"p"},"This feature is only available in ",(0,p.kt)("a",{parentName:"em",href:"https://tailwindcss.com/docs/just-in-time-mode"},"Just-in-Time mode")),"."),(0,p.kt)("p",null,"The ",(0,p.kt)("inlineCode",{parentName:"p"},"transform"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"filter"),", and ",(0,p.kt)("inlineCode",{parentName:"p"},"backdrop-filter")," classes are no longer necessary to \u201cenable\u201d their respective set of composable utilities."),(0,p.kt)("pre",{className:"language-diff-html"},(0,p.kt)("code",{parentName:"pre",className:"language-diff-html"},(0,p.kt)("span",{parentName:"code",className:"token language-html deleted"},(0,p.kt)("span",{parentName:"span",className:"token tag punctuation"},"<"),(0,p.kt)("span",{parentName:"span",className:"token tag"},"div"),(0,p.kt)("span",{parentName:"span",className:"token tag"}," "),(0,p.kt)("span",{parentName:"span",className:"token tag attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value"},"transform scale-50 filter grayscale backdrop-filter backdrop-blur-sm"),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token tag punctuation"},">"),(0,p.kt)("span",{parentName:"span",className:"token plain"}),"\n"),(0,p.kt)("span",{parentName:"code",className:"token language-html inserted"},(0,p.kt)("span",{parentName:"span",className:"token plain"}),(0,p.kt)("span",{parentName:"span",className:"token tag punctuation"},"<"),(0,p.kt)("span",{parentName:"span",className:"token tag"},"div"),(0,p.kt)("span",{parentName:"span",className:"token tag"}," "),(0,p.kt)("span",{parentName:"span",className:"token tag attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value"},"scale-50 grayscale backdrop-blur-sm"),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token tag punctuation"},">"),"\n"))),(0,p.kt)("p",null,"Now those features are automatically enabled any time you use any of the relevant sub-utilities."),(0,p.kt)("p",null,"It\u2019s important to understand though that because these utilities aren\u2019t needed anymore, you can no longer expect transforms and filters to be \u201cdormant\u201d by default. If you were relying on conditionally \u201cactivating\u201d transforms or filters by toggling these classes, you will want to make sure you are toggling the sub-utilities themselves instead:"),(0,p.kt)("pre",{className:"language-diff-html"},(0,p.kt)("code",{parentName:"pre",className:"language-diff-html"},(0,p.kt)("span",{parentName:"code",className:"token language-html deleted"},(0,p.kt)("span",{parentName:"span",className:"token tag punctuation"},"<"),(0,p.kt)("span",{parentName:"span",className:"token tag"},"div"),(0,p.kt)("span",{parentName:"span",className:"token tag"}," "),(0,p.kt)("span",{parentName:"span",className:"token tag attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value"},"scale-105 -translate-y-1 hover:transform"),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token tag punctuation"},">"),(0,p.kt)("span",{parentName:"span",className:"token plain"}),"\n"),(0,p.kt)("span",{parentName:"code",className:"token language-html inserted"},(0,p.kt)("span",{parentName:"span",className:"token plain"}),(0,p.kt)("span",{parentName:"span",className:"token tag punctuation"},"<"),(0,p.kt)("span",{parentName:"span",className:"token tag"},"div"),(0,p.kt)("span",{parentName:"span",className:"token tag"}," "),(0,p.kt)("span",{parentName:"span",className:"token tag attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value"},"hover:scale-105 hover:-translate-y-1"),(0,p.kt)("span",{parentName:"span",className:"token tag attr-value punctuation"},'"'),(0,p.kt)("span",{parentName:"span",className:"token tag punctuation"},">"),"\n"))),(0,p.kt)("p",null,"I don\u2019t expect this will be a real problem for most people, but it\u2019s technically a breaking change which is why we\u2019ve limited this improvement to the JIT engine only."),(0,p.kt)("a",{name:"per-side-border-color-utilities"}),(0,p.kt)(r.X,{level:2,id:"per-side-border-color-utilities",nextElement:{type:"paragraph"}},"Per-side border color utilities"),(0,p.kt)("p",null,(0,p.kt)("em",{parentName:"p"},"This feature is only available in ",(0,p.kt)("a",{parentName:"em",href:"https://tailwindcss.com/docs/just-in-time-mode"},"Just-in-Time mode")),"."),(0,p.kt)("p",null,"Requested at least once a month for the last four years, I\u2019m excited to share that we\u2019ve finally added per-side border color support now that we don\u2019t have to sweat the development stylesheet size."),(0,p.kt)("pre",{className:"language-html"},(0,p.kt)("code",{parentName:"pre",className:"language-html"},(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"div"),"\n  ",(0,p.kt)("span",{parentName:"span",className:"token attr-name"},"class"),(0,p.kt)("span",{parentName:"span",className:"token attr-value"},(0,p.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"border-2 border-t-blue-500 border-r-pink-500 border-b-green-500 border-l-yellow-500",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},'"')),"\n",(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token comment"},"\x3c!-- ... --\x3e"),"\n",(0,p.kt)("span",{parentName:"code",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token tag"},(0,p.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"div"),(0,p.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,p.kt)("p",null,"Go forth and build ugly websites! ",(0,p.kt)("em",{parentName:"p"},"(Kidding, kidding, I know they are useful settle the hell down.)")),(0,p.kt)("a",{name:"built-in-safelist-transform-and-extract-support"}),(0,p.kt)(r.X,{level:2,id:"built-in-safelist-transform-and-extract-support",nextElement:{type:"paragraph"}},"Built-in safelist, transform, and extract support"),(0,p.kt)("p",null,"We\u2019ve added first-class support for a bunch of important PurgeCSS features and made them work in the JIT engine as well, which doesn\u2019t actually even use PurgeCSS."),(0,p.kt)("p",null,"First is ",(0,p.kt)("inlineCode",{parentName:"p"},"safelist"),", which is super useful if you need to protect specific classes from being removed from your production CSS, perhaps because they are used in content that comes from a database or similar:"),(0,p.kt)(o.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",{className:"language-js"},(0,p.kt)("code",{parentName:"pre",className:"language-js"},"module",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"."),(0,p.kt)("span",{parentName:"code",className:"token property-access"},"exports")," ",(0,p.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token literal-property property"},"purge"),(0,p.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token literal-property property"},"content"),(0,p.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"["),(0,p.kt)("span",{parentName:"code",className:"token string"},"'./src/**/*.html'"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"]"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token literal-property property"},"safelist"),(0,p.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"["),"\n      ",(0,p.kt)("span",{parentName:"code",className:"token string"},"'bg-blue-500'"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",(0,p.kt)("span",{parentName:"code",className:"token string"},"'text-center'"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",(0,p.kt)("span",{parentName:"code",className:"token string"},"'hover:opacity-100'"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",(0,p.kt)("span",{parentName:"code",className:"token comment"},"// ..."),"\n      ",(0,p.kt)("span",{parentName:"code",className:"token string"},"'lg:text-right'"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"]"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token comment"},"// ..."),"\n",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Note that while the classic engine will accept regular expressions here, the JIT engine will not"),". That\u2019s because when we\u2019re generating classes on demand, the class doesn\u2019t exist until it\u2019s used so we have nothing to match the expression against. So if you\u2019re using just-in-time mode, make sure you\u2019re providing complete class names to get the expected result."),(0,p.kt)("p",null,"Next is ",(0,p.kt)("inlineCode",{parentName:"p"},"transform"),", which lets you transform content for different file extensions before scanning it for potential class names:"),(0,p.kt)(o.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",{className:"language-js"},(0,p.kt)("code",{parentName:"pre",className:"language-js"},(0,p.kt)("span",{parentName:"code",className:"token keyword"},"let")," remark ",(0,p.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,p.kt)("span",{parentName:"code",className:"token function"},"require"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,p.kt)("span",{parentName:"code",className:"token string"},"'remark'"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},")"),"\n\nmodule",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"."),(0,p.kt)("span",{parentName:"code",className:"token property-access"},"exports")," ",(0,p.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token literal-property property"},"purge"),(0,p.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token literal-property property"},"content"),(0,p.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"["),(0,p.kt)("span",{parentName:"code",className:"token string"},"'./src/**/*.{html,md}'"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"]"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token literal-property property"},"transform"),(0,p.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",(0,p.kt)("span",{parentName:"code",className:"token function-variable function"},"md"),(0,p.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,p.kt)("span",{parentName:"code",className:"token parameter"},"content"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},")")," ",(0,p.kt)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",(0,p.kt)("span",{parentName:"code",className:"token keyword control-flow"},"return")," ",(0,p.kt)("span",{parentName:"code",className:"token function"},"remark"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},")"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"."),(0,p.kt)("span",{parentName:"code",className:"token method function property-access"},"process"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"("),"content",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},")"),"\n      ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token comment"},"// ..."),"\n",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}")))),(0,p.kt)("p",null,"This is really useful if you have templates that are written in a language that compiles to HTML, like Markdown."),(0,p.kt)("p",null,"Finally we have ",(0,p.kt)("inlineCode",{parentName:"p"},"extract"),", which lets you customize the logic that Tailwind uses to detect class names in specific file types:"),(0,p.kt)(o.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",{className:"language-js"},(0,p.kt)("code",{parentName:"pre",className:"language-js"},"module",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"."),(0,p.kt)("span",{parentName:"code",className:"token property-access"},"exports")," ",(0,p.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token literal-property property"},"purge"),(0,p.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token literal-property property"},"content"),(0,p.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"["),(0,p.kt)("span",{parentName:"code",className:"token string"},"'./src/**/*.{html,md}'"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"]"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token literal-property property"},"extract"),(0,p.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",(0,p.kt)("span",{parentName:"code",className:"token function-variable function"},"pug"),(0,p.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,p.kt)("span",{parentName:"code",className:"token parameter"},"content"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},")")," ",(0,p.kt)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",(0,p.kt)("span",{parentName:"code",className:"token keyword control-flow"},"return")," ",(0,p.kt)("span",{parentName:"code",className:"token regex"},(0,p.kt)("span",{parentName:"span",className:"token regex-delimiter"},"/"),(0,p.kt)("span",{parentName:"span",className:"token regex-source language-regex"},(0,p.kt)("span",{parentName:"span",className:"token char-class"},(0,p.kt)("span",{parentName:"span",className:"token char-class-punctuation punctuation"},"["),(0,p.kt)("span",{parentName:"span",className:"token char-class-negation operator"},"^"),"<>\"'`",(0,p.kt)("span",{parentName:"span",className:"token char-set class-name"},"\\s"),(0,p.kt)("span",{parentName:"span",className:"token char-class-punctuation punctuation"},"]")),(0,p.kt)("span",{parentName:"span",className:"token quantifier number"},"*")),(0,p.kt)("span",{parentName:"span",className:"token regex-delimiter"},"/")),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"."),(0,p.kt)("span",{parentName:"code",className:"token method function property-access"},"match"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"("),"content",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},")"),"\n      ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,p.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,p.kt)("span",{parentName:"code",className:"token comment"},"// ..."),"\n",(0,p.kt)("span",{parentName:"code",className:"token punctuation"},"}")))),(0,p.kt)("p",null,"This is an advanced feature and most users won\u2019t need it. The default extraction logic in Tailwind works extremely well for almost all projects."),(0,p.kt)("p",null,"For more information on these features, check out our ",(0,p.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/optimizing-for-production"},"optimizing for production documentation"),"."),(0,p.kt)("hr",null),(0,p.kt)(r.X,{level:2,id:"upgrading",nextElement:{type:"paragraph"}},"Upgrading"),(0,p.kt)("p",null,"To upgrade to Tailwind CSS v2.2, install the latest release from npm:"),(0,p.kt)("pre",{className:"language-bash"},(0,p.kt)("code",{parentName:"pre",className:"language-bash"},(0,p.kt)("span",{parentName:"code",className:"token function"},"npm")," ",(0,p.kt)("span",{parentName:"code",className:"token function"},"install")," -D tailwindcss@latest")),(0,p.kt)("p",null,"If you are using the Just-in-Time mode preview, you\u2019ll also want to read through the ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/tailwindlabs/tailwindcss/releases/tag/v2.2.0#changes-and-deprecations"},"changes and deprecations")," in the release notes."),(0,p.kt)("p",null,"Ready to upgrade? ",(0,p.kt)("a",{href:"https://npmjs.com/tailwindcss"},"Get it from npm \u2192")))}d.isMDXComponent=!0,d.layoutProps=k},49485:function(a,e,t){"use strict";t.d(e,{M:function(){return p}});var n=t(79836),s=t(85893);function p({filename:a,children:e}){return(0,s.jsxs)("div",{className:"mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-slate-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset",children:[(0,s.jsx)(n.n,{primary:{name:a},showTabMarkers:!1}),(0,s.jsx)("div",{className:"children:my-0 children:!shadow-none children:bg-transparent",children:e})]})}},79836:function(a,e,t){"use strict";t.d(e,{n:function(){return p}});var n=t(86010),s=t(85893);function p({primary:a,secondary:e=[],showTabMarkers:t=!0,side:p,translucent:o=!1,children:r}){return(0,s.jsxs)("div",{className:"flex text-slate-400 text-xs leading-6",children:[(0,s.jsxs)("div",{className:"flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center",children:[a.name,t&&(a.saved?(0,s.jsx)("svg",{viewBox:"0 0 4 4",className:"ml-2.5 flex-none w-1 h-1 text-slate-500 overflow-visible",children:(0,s.jsx)("path",{d:"M-1 -1L5 5M5 -1L-1 5",fill:"none",stroke:"currentColor",strokeLinecap:"round"})}):(0,s.jsx)("div",{className:"ml-2.5 flex-none w-1 h-1 rounded-full bg-current"}))]}),(0,s.jsxs)("div",{className:(0,n.Z)("flex-auto flex items-center bg-slate-700/50 border border-slate-500/30","left"===p?"rounded-tl lg:rounded-tr":"rounded-tl",o&&"dark:bg-slate-800/50"),children:[e.map((({name:a,open:e=!0,className:t})=>(0,s.jsx)("div",{className:(0,n.Z)("px-4 py-1 border-r border-slate-200/5",t,{italic:!e}),children:a},a))),r&&(0,s.jsx)("div",{className:"flex-auto flex items-center justify-end px-4 space-x-4",children:r})]})]})}},23416:function(a,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/tailwindcss-2-2",function(){return t(59102)}])}},function(a){a.O(0,[9774,184,4327,489,6183,2888,179],(function(){return e=23416,a(a.s=e);var e}));var e=a.O();_N_E=e}]);