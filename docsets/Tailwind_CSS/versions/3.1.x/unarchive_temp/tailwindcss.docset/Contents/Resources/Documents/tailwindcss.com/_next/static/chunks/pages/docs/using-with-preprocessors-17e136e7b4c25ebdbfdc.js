_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[186],{"6Lw0":function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return u}));var n=t("wx14"),c=t("Ff2n"),s=t("q1tI"),o=t.n(s),p=t("7ljp"),r=t("YFqc"),m=t.n(r),l=t("tc9R"),b=t("vRWG"),j=t("I6Nb"),i=t("UyA5"),O=(o.a.createElement,{Layout:b.DocumentationLayout,meta:{title:"Using with Preprocessors",description:"A guide to using Tailwind with common CSS preprocessors like Sass, Less, and Stylus."},tableOfContents:[{title:"Using PostCSS as your preprocessor",slug:"using-post-css-as-your-preprocessor",children:[{title:"Build-time imports",slug:"build-time-imports"},{title:"Nesting",slug:"nesting"},{title:"Variables",slug:"variables"},{title:"Future CSS features",slug:"future-css-features"}]},{title:"Using Sass, Less, or Stylus",slug:"using-sass-less-or-stylus",children:[{title:"Sass",slug:"sass"},{title:"Less",slug:"less"},{title:"Stylus",slug:"stylus"}]}]}),N=j.ContentsLayout;function u(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(p.a)(N,Object(n.a)({},O,t,{components:a,mdxType:"MDXLayout"}),Object(p.a)("div",{className:"prose"},Object(p.a)("p",null,"Since Tailwind is a PostCSS plugin, there's nothing stopping you from using it with Sass, Less, Stylus, or other preprocessors, just like you can with other PostCSS plugins like ",Object(p.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/postcss/autoprefixer"}),"Autoprefixer"),"."),Object(p.a)("p",null,"It's important to note that ",Object(p.a)("strong",{parentName:"p"},"you don't need to use a preprocessor with Tailwind")," \u2014 you typically write very little CSS on a Tailwind project anyways so using a preprocessor just isn't as beneficial as it would be in a project where you write a lot of custom CSS."),Object(p.a)("p",null,"This guide only exists as a reference for people who need to or would like to integrate Tailwind with a preprocessor for one reason or another."),Object(p.a)("hr",null),Object(p.a)(l.a,{level:2,id:"using-post-css-as-your-preprocessor",toc:!0},"Using PostCSS as your preprocessor"),Object(p.a)("p",null,"If you're using Tailwind for a brand new project and don't need to integrate it with any existing Sass/Less/Stylus stylesheets, you should highly consider relying on other PostCSS plugins to add the preprocessor features you use instead of using a separate preprocessor."),Object(p.a)("p",null,"This has a few benefits:"),Object(p.a)("ul",null,Object(p.a)("li",{parentName:"ul"},Object(p.a)("strong",{parentName:"li"},"Your builds will be faster"),". Since your CSS doesn't have to be parsed and processed by multiple tools, your CSS will compile much quicker using only PostCSS."),Object(p.a)("li",{parentName:"ul"},Object(p.a)("strong",{parentName:"li"},"No quirks or workarounds.")," Because Tailwind adds some new non-standard keywords to CSS (like ",Object(p.a)("inlineCode",{parentName:"li"},"@tailwind"),", ",Object(p.a)("inlineCode",{parentName:"li"},"@apply"),", ",Object(p.a)("inlineCode",{parentName:"li"},"theme()"),", etc.), you often have to write your CSS in annoying, unintuitive ways to get a preprocessor to give you the expected output. Working exclusively with PostCSS avoids this.")),Object(p.a)("p",null,"For a fairly comprehensive list of available PostCSS plugins see the ",Object(p.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/postcss/postcss/blob/master/docs/plugins.md"}),"PostCSS GitHub repository"),", but here are a few important ones we use on our own projects and can recommend."),Object(p.a)(l.a,{level:3,id:"build-time-imports",toc:!0},"Build-time imports"),Object(p.a)("p",null,"One of the most useful features preprocessors offer is the ability to organize your CSS into multiple files and combine them at build time by processing ",Object(p.a)("inlineCode",{parentName:"p"},"@import")," statements in advance, instead of in the browser."),Object(p.a)("p",null,"The canonical plugin for handling this with PostCSS is ",Object(p.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/postcss/postcss-import"}),"postcss-import"),"."),Object(p.a)("p",null,"To use it, install the plugin via npm:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-shell"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# npm"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"npm")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"install")," postcss-import\n\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# yarn"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"yarn")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"add")," postcss-import"))),Object(p.a)("p",null,"Then add it as the very first plugin in your PostCSS configuration:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// postcss.config.js"),"\nmodule",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  plugins",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'postcss-import'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'tailwindcss'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'autoprefixer'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("p",null,"One important thing to note about ",Object(p.a)("inlineCode",{parentName:"p"},"postcss-import")," is that it strictly adheres to the CSS spec and disallows ",Object(p.a)("inlineCode",{parentName:"p"},"@import")," statements anywhere except at the very top of a file.")),Object(p.a)(i.a,{mdxType:"TipBad"},"Won't work, `@import` statements must come first"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"/* components.css */"),"\n\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".btn"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule atapply"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@apply")," px-4 py-2 rounded font-semibold bg-",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token color"}),"gray"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token number"}),"-200")," text-",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token color"}),"black"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"/* Will not work */"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@import")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"./components/card"'),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";"))))),Object(p.a)("p",null,"The easiest solution to this problem is to never mix regular CSS and imports in the same file. Instead, create one main entry-point file for your imports, and keep all of your actual CSS in separate files.")),Object(p.a)(i.c,{mdxType:"TipGood"},"Use separate files for imports and actual CSS"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"/* components.css */"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@import")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"./components/buttons.css"'),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@import")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"./components/card.css"'),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";"))))),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"/* components/buttons.css */"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".btn"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule atapply"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@apply")," px-4 py-2 rounded font-semibold bg-",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token color"}),"gray"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token number"}),"-200")," text-",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token color"}),"black"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"/* components/card.css */"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".card"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule atapply"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@apply")," p-4 bg-",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token color"}),"white")," shadow rounded",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("p",null,"The place you are most likely to run into this situation is in your main CSS file that includes your ",Object(p.a)("inlineCode",{parentName:"p"},"@tailwind")," declarations.")),Object(p.a)(i.a,{mdxType:"TipBad"},"Won't work, `@import` statements must come first"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," base",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@import")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"./custom-base-styles.css"'),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," components",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@import")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"./custom-components.css"'),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@import")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"./custom-utilities.css"'),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";"))))),Object(p.a)("p",null,"You can solve this by creating separate files for each ",Object(p.a)("inlineCode",{parentName:"p"},"@tailwind")," declaration, and then importing those files in your main stylesheet. To make this easy, we provide separate files for each ",Object(p.a)("inlineCode",{parentName:"p"},"@tailwind")," declaration out of the box that you can import directly from ",Object(p.a)("inlineCode",{parentName:"p"},"node_modules"),"."),Object(p.a)("p",null,"The ",Object(p.a)("inlineCode",{parentName:"p"},"postcss-import")," plugin is smart enough to look for files in the ",Object(p.a)("inlineCode",{parentName:"p"},"node_modules")," folder automatically, so you don't need to provide the entire path \u2014 ",Object(p.a)("inlineCode",{parentName:"p"},'"tailwindcss/base"')," for example is enough.")),Object(p.a)(i.c,{mdxType:"TipGood"},"Import our provided CSS files"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@import")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"tailwindcss/base"'),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@import")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"./custom-base-styles.css"'),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@import")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"tailwindcss/components"'),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@import")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"./custom-components.css"'),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@import")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"tailwindcss/utilities"'),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@import")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"./custom-utilities.css"'),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";"))))),Object(p.a)(l.a,{level:3,id:"nesting",toc:!0},"Nesting"),Object(p.a)("p",null,"To add support for nested declarations, you have two options:"),Object(p.a)("ul",null,Object(p.a)("li",{parentName:"ul"},Object(p.a)("p",{parentName:"li"},Object(p.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/postcss/postcss-nested"}),"postcss-nested"),", which uses a syntax much like Sass.")),Object(p.a)("li",{parentName:"ul"},Object(p.a)("p",{parentName:"li"},Object(p.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jonathantneal/postcss-nesting"}),"postcss-nesting"),", which follows the ",Object(p.a)("a",Object(n.a)({parentName:"p"},{href:"https://drafts.csswg.org/css-nesting-1/"}),"CSS Nesting")," specification that will hopefully be available directly in the browser in the future."))),Object(p.a)("p",null,"To use either of these plugins, install them via npm:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-shell"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# npm"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"npm")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"install")," postcss-nested  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# or postcss-nesting"),"\n\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# yarn"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"yarn")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"add")," postcss-nested  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# or postcss-nesting")))),Object(p.a)("p",null,"Then add them to your PostCSS configuration, somewhere after Tailwind itself but before Autoprefixer:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// postcss.config.js"),"\nmodule",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  plugins",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'postcss-import'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'tailwindcss'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'postcss-nested'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// or require('postcss-nesting')"),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'autoprefixer'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)(l.a,{level:3,id:"variables",toc:!0},"Variables"),Object(p.a)("p",null,"These days CSS variables (officially known as custom properties) have really good ",Object(p.a)("a",Object(n.a)({parentName:"p"},{href:"https://caniuse.com/#search=css%20custom%20properties"}),"browser support"),", so you may not actually need a plugin for variables at all."),Object(p.a)("p",null,"However if you need to support IE11, you can use the ",Object(p.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/postcss/postcss-custom-properties"}),"postcss-custom-properties")," plugin to automatically create fallbacks for your variables."),Object(p.a)("p",null,"To use it, install it via npm:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-shell"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# npm"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"npm")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"install")," postcss-custom-properties\n\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# yarn"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"yarn")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"add")," postcss-custom-properties"))),Object(p.a)("p",null,"Then add it to your PostCSS configuration, somewhere after Tailwind itself but before Autoprefixer:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// postcss.config.js"),"\nmodule",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  plugins",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'postcss-import'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'tailwindcss'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'postcss-nested'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'postcss-custom-properties'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'autoprefixer'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)(l.a,{level:3,id:"future-css-features",toc:!0},"Future CSS features"),Object(p.a)("p",null,"You can add support for dozens of upcoming CSS features to your project using the ",Object(p.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/csstools/postcss-preset-env"}),"postcss-preset-env")," plugin."),Object(p.a)("p",null,"To use it, install it via npm:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-shell"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# npm"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"npm")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"install")," postcss-preset-env\n\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# yarn"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"yarn")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"add")," postcss-preset-env"))),Object(p.a)("p",null,"Then add it to your PostCSS configuration somewhere after Tailwind itself:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// postcss.config.js"),"\nmodule",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  plugins",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'postcss-import'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'tailwindcss'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'postcss-preset-env'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{")," stage",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"1")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("p",null,Object(p.a)("strong",{parentName:"p"},"It's important to note that CSS variables, nesting, and autoprefixer are included out-of-the-box"),", so if you're using ",Object(p.a)("inlineCode",{parentName:"p"},"postcss-preset-env"),", you don't need to add separate plugins for those features."),Object(p.a)("hr",null),Object(p.a)(l.a,{level:2,id:"using-sass-less-or-stylus",toc:!0},"Using Sass, Less, or Stylus"),Object(p.a)("p",null,"To use Tailwind with a preprocessing tool like Sass, Less, or Stylus, you'll need to add an additional build step to your project that lets you run your preprocessed CSS through PostCSS. If you're using Autoprefixer in your project, you already have something like this set up."),Object(p.a)("p",null,"The exact instructions will be different depending on which build tool you are using, so see our ",Object(p.a)(m.a,{href:"/docs/installation#3-process-your-css-with-tailwind",passHref:!0},Object(p.a)("a",null,"installation documentation"))," to learn more about integrating Tailwind into your existing build process."),Object(p.a)("p",null,"The most important thing to understand about using Tailwind with a preprocessor is that ",Object(p.a)("strong",{parentName:"p"},"preprocessors like Sass, Less, and Stylus run separately, before Tailwind"),". This means that you can't feed output from Tailwind's ",Object(p.a)("inlineCode",{parentName:"p"},"theme()")," function into a Sass color function for example, because the ",Object(p.a)("inlineCode",{parentName:"p"},"theme()")," function isn't actually evaluated until your Sass has been compiled to CSS and fed into PostCSS.")),Object(p.a)(i.a,{mdxType:"TipBad"},"Won't work, Sass is processed first"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".alert"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"background-color"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"darken"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"theme"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'colors.red.500'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"10"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token unit"}),"%"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("p",null,"For the most cohesive development experience, it's recommended that you ",Object(p.a)("a",Object(n.a)({parentName:"p"},{href:"#using-post-css-as-your-preprocessor"}),"use PostCSS exclusively"),"."),Object(p.a)("p",null,"Aside from that, each preprocessor has its own quirk or two when used with Tailwind, which are outlined with workarounds below."),Object(p.a)(l.a,{level:3,id:"sass",toc:!0},"Sass"),Object(p.a)("p",null,"When using Tailwind with Sass, using ",Object(p.a)("inlineCode",{parentName:"p"},"!important")," with ",Object(p.a)("inlineCode",{parentName:"p"},"@apply")," requires you to use interpolation to compile properly.")),Object(p.a)(i.a,{mdxType:"TipBad"},"Won't work, Sass complains about !important"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".alert"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule atapply"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@apply")," bg-",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token color"}),"red"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token number"}),"-500")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token important"}),"!important"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"))))),Object(p.a)(i.c,{mdxType:"TipGood"},"Use interpolation as a workaround"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".alert"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule atapply"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@apply")," bg-",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token color"}),"red"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token number"}),"-500")," #"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token important"}),"!important"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)(l.a,{level:3,id:"less",toc:!0},"Less"),Object(p.a)("p",null,"When using Tailwind with Less, you cannot nest Tailwind's ",Object(p.a)("inlineCode",{parentName:"p"},"@screen")," directive.")),Object(p.a)(i.a,{mdxType:"TipBad"},"Won't work, Less doesn't realise it's a media query"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".card"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule atapply"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@apply")," rounded-none",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@screen")," sm")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule atapply"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@apply")," rounded-lg",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("p",null,"Instead, use a regular media query along with the ",Object(p.a)("inlineCode",{parentName:"p"},"theme()")," function to reference your screen sizes, or simply don't nest your ",Object(p.a)("inlineCode",{parentName:"p"},"@screen")," directives.")),Object(p.a)(i.c,{mdxType:"TipGood"},"Use a regular media query and theme()"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".card"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule atapply"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@apply")," rounded-none",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@media")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token property"}),"min-width"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token function"}),"theme"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),"'screens.sm'"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),")"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule atapply"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@apply")," rounded-lg",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"))))),Object(p.a)(i.c,{mdxType:"TipGood"},"Use the @screen directive at the top-level"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".card"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule atapply"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@apply")," rounded-none",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@screen")," sm")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".card"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule atapply"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@apply")," rounded-lg",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)(l.a,{level:3,id:"stylus",toc:!0},"Stylus"),Object(p.a)("p",null,"When using Tailwind with Stylus, you can't use Tailwind's ",Object(p.a)("inlineCode",{parentName:"p"},"@apply")," feature without wrapping the entire CSS rule in ",Object(p.a)("inlineCode",{parentName:"p"},"@css")," so that Stylus treats it as literal CSS:")),Object(p.a)(i.a,{mdxType:"TipBad"},"Won't work, Stylus complains about @apply"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".card"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  @apply rounded-lg bg-",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token color"}),"white")," p-4\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"))))),Object(p.a)(i.c,{mdxType:"TipGood"},"Use @css to avoid processing as Stylus"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@css"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".card"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    @apply rounded-lg bg-",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token color"}),"white")," p-4\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("p",null,"This comes with a significant cost however, which is that ",Object(p.a)("strong",{parentName:"p"},"you cannot use any Stylus features inside a ",Object(p.a)("inlineCode",{parentName:"strong"},"@css")," block"),"."),Object(p.a)("p",null,"Another option is to use the ",Object(p.a)("inlineCode",{parentName:"p"},"theme()")," function instead of ",Object(p.a)("inlineCode",{parentName:"p"},"@apply"),", and write out the actual CSS properties in long form:")),Object(p.a)(i.c,{mdxType:"TipGood"},"Use theme() instead of @apply"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".card"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"border-radius"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"theme"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'borderRadius.lg'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"background-color"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"theme"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'colors.white'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"padding"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"theme"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'spacing.4'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("p",null,"In addition to this, Stylus doesn't support nesting the ",Object(p.a)("inlineCode",{parentName:"p"},"@screen")," directive (just like Less).")),Object(p.a)(i.a,{mdxType:"TipBad"},"Won't work, Stylus doesn't realise it's a media query"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".card"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"border-radius"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"0"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@screen")," sm")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"border-radius"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"theme"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'borderRadius.lg'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("p",null,"Instead, use a regular media query along with the ",Object(p.a)("inlineCode",{parentName:"p"},"theme()")," function to reference your screen sizes, or simply don't nest your ",Object(p.a)("inlineCode",{parentName:"p"},"@screen")," directives.")),Object(p.a)(i.c,{mdxType:"TipGood"},"Use a regular media query and theme()"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".card"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"border-radius"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"0"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@media")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token property"}),"min-width"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token function"}),"theme"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),"'screens.sm'"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),")"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"border-radius"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"theme"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'borderRadius.lg'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"))))),Object(p.a)(i.c,{mdxType:"TipGood"},"Use the @screen directive at the top-level"),Object(p.a)("div",{className:"prose"},Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(n.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".card"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"border-radius"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"0"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@screen")," sm")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(n.a)({parentName:"span"},{className:"token class"}),".card"))," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"border-radius"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"theme"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'borderRadius.lg'"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"))))))}u.isMDXComponent=!0,u.layoutProps=O},M02q:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/using-with-preprocessors",function(){return t("6Lw0")}])},UyA5:function(e,a,t){"use strict";t.d(a,"c",(function(){return s})),t.d(a,"a",(function(){return o})),t.d(a,"b",(function(){return p})),t.d(a,"d",(function(){return r}));var n=t("q1tI"),c=t.n(n).a.createElement;function s(e){var a=e.children;return c("p",{className:"flex items-start mt-8 mb-4 space-x-2"},c("svg",{className:"w-6 h-6 flex-none mt-0.5",fill:"none"},c("circle",{cx:"12",cy:"12",r:"12",fill:"#A7F3D0"}),c("path",{d:"M18 8l-8 8-4-4",stroke:"#047857",strokeWidth:"2"})),c("strong",{className:"flex-1 text-base leading-7 font-semibold text-gray-900"},a))}function o(e){var a=e.children;return c("p",{className:"flex items-start mt-8 mb-4 space-x-2"},c("svg",{className:"w-6 h-6 flex-none mt-0.5",fill:"none"},c("circle",{cx:"12",cy:"12",r:"12",fill:"#FECDD3"}),c("path",{d:"M8 8l8 8M16 8l-8 8",stroke:"#B91C1C",strokeWidth:"2"})),c("strong",{className:"flex-1 text-base leading-7 font-semibold text-gray-900"},a))}function p(e){var a=e.children;return c("div",{className:"text-sm bg-light-blue-100 text-light-blue-800 font-medium px-4 py-3 mb-4 rounded-xl"},c("div",{className:"flex items-start space-x-3"},c("svg",{width:"20",height:"20",className:"text-light-blue-500",fill:"currentColor"},c("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M6.998 2a1 1 0 00-.707 1.707l.707.707v3.758a1 1 0 01-.293.707l-4 4C.815 14.769 2.154 18 4.826 18H15.17c2.672 0 4.01-3.231 2.12-5.121l-4-4a1 1 0 01-.292-.707V4.414l.707-.707A1 1 0 0012.998 2h-6zm2 6.172V4h2v4.172a3 3 0 00.879 2.12l1.027 1.028a4 4 0 00-2.171.102l-.47.156a4 4 0 01-2.53 0l-.563-.187a1.992 1.992 0 00-.114-.035l1.063-1.063a3 3 0 00.879-2.121z"})),c("p",{class:"flex-1"},a)))}function r(e){var a=e.children;return c("div",{className:"text-sm leading-6 bg-blue-50 text-blue-800 px-6 py-4 mb-8 rounded-lg"},c("div",{className:"flex items-start space-x-3"},c("svg",{className:"mt-1",height:"40",width:"40",fill:"none",viewBox:"0 0 40 40"},c("path",{fill:"#93C5FD",d:"M5 5a3 3 0 013-3h13.757a3 3 0 012.122.879L30.12 9.12a3 3 0 01.88 2.123V31a3 3 0 01-3 3H8a3 3 0 01-3-3V5z"}),c("path",{fill:"#DBEAFE",d:"M7 5a1 1 0 011-1h13a1 1 0 011 1v5a1 1 0 001 1h5a1 1 0 011 1v19a1 1 0 01-1 1H8a1 1 0 01-1-1V5z"}),c("path",{stroke:"#93C5FD",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"M17 18h7m-9 3h10m-8 3h7"}),c("path",{fill:"#60A5FA",fillRule:"evenodd",d:"M24.634 26.22a8.001 8.001 0 00-11.977-10.562A8 8 0 0023.22 27.635l2.872 2.872a1 1 0 000 1.414l5.657 5.657a1 1 0 001.414 0l1.414-1.414a1 1 0 000-1.415l-5.657-5.656a1 1 0 00-1.414 0l-2.872-2.873zm-2.078-.663a6 6 0 10-8.485-8.485 6 6 0 008.485 8.485z",clipRule:"evenodd"})),c("p",{class:"flex-1 min-w-0"},a)))}},ap0H:function(e,a,t){"use strict";t.d(a,"a",(function(){return r}));var n=t("q1tI"),c=t.n(n),s=t("8Kt/"),o=t.n(s),p=c.a.createElement;function r(e){var a=e.suffix,t=e.children+(a?" - ".concat(a):"");return p(o.a,null,p("title",{key:"title"},t),p("meta",{key:"twitter:title",name:"twitter:title",content:t}),p("meta",{key:"og:title",property:"og:title",content:t}))}},vRWG:function(e,a,t){"use strict";t.r(a),t.d(a,"DocumentationLayout",(function(){return i}));var n=t("wx14"),c=t("q1tI"),s=t.n(c),o=t("ekQu"),p=t("8Kt/"),r=t.n(p),m=t("nOHt"),l=t("ap0H"),b=t("1Q1k"),j=s.a.createElement;function i(e){var a=Object(m.useRouter)();return j(s.a.Fragment,null,j(l.a,{suffix:"/"===a.pathname?void 0:"Tailwind CSS"},e.layoutProps.meta.metaTitle||e.layoutProps.meta.title),j(r.a,null,j("meta",{key:"twitter:card",name:"twitter:card",content:"summary"}),j("meta",{key:"twitter:image",name:"twitter:image",content:"https://tailwindcss.com".concat("/_next/static/media/twitter-square.daf77586b35e90319725e742f6e069f9.jpg")})),j(o.b,Object(n.a)({nav:b.a},e)))}}},[["M02q",0,2,1,3,4,5]]]);