(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5701],{99383:function(e,n,i){"use strict";i.d(n,{_:function(){return l}});var s=i(79980),t=i(85893);function l({description:e,href:n,label:i}){return(0,t.jsxs)("p",{className:"flex flex-wrap sm:flex-nowrap lg:flex-wrap xl:flex-nowrap items-center py-6 px-4 sm:p-6 lg:p-10 ring-1 ring-slate-900/5 shadow rounded-lg dark:bg-slate-800 dark:shadow-none dark:ring-0 dark:highlight-white/5",children:[(0,t.jsxs)("span",{className:"flex-auto flex items-start mb-8 sm:mb-0 lg:mb-8 xl:mb-0",children:[(0,t.jsx)("svg",{viewBox:"0 -4 16 24",fill:"currentColor",className:"flex-none w-4 h-6 mr-4","aria-hidden":"true",children:(0,t.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M4 0a4 4 0 0 0-4 4v8a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4V4a4 4 0 0 0-4-4H4Zm5 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM7 7a2 2 0 0 1 2 2v2a1 1 0 1 1-2 0V7Z"})}),(0,t.jsx)("span",{className:"flex-auto text-sm leading-6 text-slate-600 xl:max-w-2xl dark:text-slate-400",children:e})]}),(0,t.jsx)("span",{className:"flex-none flex justify-center w-full sm:w-auto sm:ml-6 md:ml-8 lg:w-full lg:ml-0 xl:w-auto xl:ml-8",children:(0,t.jsx)(s.z,{href:n,darkColor:"sky",children:i})})]})}},18133:function(e,n,i){"use strict";i.r(n),i.d(n,{__N_SSG:function(){return d},default:function(){return c}});var s=i(27606),t=i(48600),l=i(99383),a=i(78917),o=i(85893);let r=[{title:"Install Tailwind CSS",body:()=>(0,o.jsxs)("p",{children:["Install ",(0,o.jsx)("code",{children:"tailwindcss"})," and its peer dependencies via npm, and create your"," ",(0,o.jsx)("code",{children:"tailwind.config.js"})," file."]}),code:{name:"Terminal",lang:"terminal",code:"npm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init"}},{title:"Add Tailwind to your PostCSS configuration",body:()=>(0,o.jsxs)("p",{children:["Add ",(0,o.jsx)("code",{children:"tailwindcss"})," and ",(0,o.jsx)("code",{children:"autoprefixer"})," to your"," ",(0,o.jsx)("code",{children:"postcss.config.js"})," file, or wherever PostCSS is configured in your project."]}),code:{name:"postcss.config.js",lang:"js",code:"  module.exports = {\n    plugins: {\n>     tailwindcss: {},\n>     autoprefixer: {},\n    }\n  }"}},{title:"Configure your template paths",body:()=>(0,o.jsxs)("p",{children:["Add the paths to all of your template files in your ",(0,o.jsx)("code",{children:"tailwind.config.js"})," file."]}),code:{name:"tailwind.config.js",lang:"js",code:'  module.exports = {\n>   content: ["./src/**/*.{html,js}"],\n    theme: {\n      extend: {},\n    },\n    plugins: [],\n  }'}},{title:"Add the Tailwind directives to your CSS",body:()=>(0,o.jsxs)("p",{children:["Add the ",(0,o.jsx)("code",{children:"@tailwind"})," directives for each of Tailwind\u2019s layers to your main CSS file."]}),code:{name:"main.css",lang:"css",code:"@tailwind base;\n@tailwind components;\n@tailwind utilities;"}},{title:"Start your build process",body:()=>(0,o.jsxs)("p",{children:["Run your build process with ",(0,o.jsx)("code",{children:"npm run dev"})," or whatever command is configured in your ",(0,o.jsx)("code",{children:"package.json"})," file."]}),code:{name:"Terminal",lang:"terminal",code:"npm run dev"}},{title:"Start using Tailwind in your HTML",body:()=>(0,o.jsxs)("p",{children:["Make sure your compiled CSS is included in the ",(0,o.jsx)("code",{children:"<head>"})," ",(0,o.jsx)("em",{children:"(your framework might handle this for you)"}),", then start using Tailwind\u2019s utility classes to style your content."]}),code:{name:"index.html",lang:"html",code:'  <!doctype html>\n  <html>\n  <head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <link href="/dist/main.css" rel="stylesheet">\n  </head>\n  <body>\n>   <h1 class="text-3xl font-bold underline">\n>     Hello world!\n>   </h1>\n  </body>\n  </html>'}}];var d=!0;function c({code:e}){return(0,o.jsxs)(t.l,{children:[(0,o.jsxs)("div",{id:"content-wrapper",className:"relative z-10 prose prose-slate mb-16 max-w-3xl dark:prose-dark",children:[(0,o.jsx)("h3",{className:"sr-only",children:"Installing Tailwind CSS as a PostCSS plugin"}),(0,o.jsx)("p",{children:"Installing Tailwind CSS as a PostCSS plugin is the most seamless way to integrate it with build tools like webpack, Rollup, Vite, and Parcel."})]}),(0,o.jsx)(a.R,{level:4,steps:r,code:e}),(0,o.jsx)(l._,{label:"Explore our framework guides",href:"/docs/installation/framework-guides",description:(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("strong",{className:"text-slate-900 font-semibold dark:text-slate-200",children:"Are you stuck?"})," ","Setting up Tailwind with PostCSS can be a bit different across different build tools. Check our framework guides to see if we have more specific instructions for your particular setup."]})})]})}c.layoutProps={meta:{title:"Installation: Using PostCSS",section:"Getting Started"},Layout:s.L,allowOverflow:!1}},31683:function(e,n,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/installation/using-postcss",function(){return i(18133)}])}},function(e){e.O(0,[9774,4327,946,2418,8600,2888,179],(function(){return n=31683,e(e.s=n);var n}));var n=e.O();_N_E=n}]);