<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Tailwind CSS Blog</title>
        <link>https://tailwindcss.com/blog</link>
        <description>All the latest Tailwind CSS news, straight from the team.</description>
        <lastBuildDate>Fri, 10 Dec 2021 14:34:26 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <image>
            <title>Tailwind CSS Blog</title>
            <url>https://tailwindcss.com/favicons/favicon-32x32.png?v=3</url>
            <link>https://tailwindcss.com/blog</link>
        </image>
        <copyright>All rights reserved 2021, Tailwind Labs</copyright>
        <atom:link href="https://tailwindcss.com/feeds/feed.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[Tailwind CSS v3.0]]></title>
            <link>https://tailwindcss.com/blog/tailwindcss-v3</link>
            <guid>Tailwind CSS v3.0</guid>
            <pubDate>Thu, 09 Dec 2021 16:00:00 GMT</pubDate>
            <description><![CDATA[Tailwind CSS v3.0 is here — bringing incredible performance gains, huge workflow improvements, and a seriously ridiculous number of new features.]]></description>
            <content:encoded><![CDATA[<p>Tailwind CSS v3.0 is here — bringing incredible performance gains, huge workflow improvements, and a seriously ridiculous number of new features.</p><p>Tailwind CSS v3.0 is here — bringing incredible performance gains, huge workflow improvements, and a seriously ridiculous number of new features.</p><div class="aspect-w-16 aspect-h-9 my-12"><iframe src="https://www.youtube.com/embed/TmWIrBPE6Bc" frameBorder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p>For a tour of some of the coolest new features, check out the <a href="https://www.youtube.com/watch?v=mSC6GwizOag">“What’s new in Tailwind CSS v3.0”</a> video on our YouTube channel.</p><p>Tailwind CSS v3.0 has got to be our most exciting release ever, including improvements like:</p><ul role="list"><li><a href="#just-in-time-all-the-time">Just-in-Time, all the time</a> — lightning fast build times, stackable variants, arbitrary value support, better browser performance, and more.</li><li><a href="#every-color-out-of-the-box">Every color out of the box</a> —  including all of the extended palette colors like cyan, rose, fuchsia, and lime, and fifty shades of <del>grey</del> gray.</li><li><a href="#colored-box-shadows">Colored box shadows</a> — for fun glow and reflection effects, and more natural shadows on colored backgrounds.</li><li><a href="#scroll-snap-api">Scroll snap API</a> — a comprehensive and composable set of utilities for CSS-only scroll snapping.</li><li><a href="#multi-column-layout">Multi-column layout</a> — so you can finally build that online newspaper you’ve been dreaming about.</li><li><a href="#native-form-control-styling">Native form control styling</a> — make checkboxes, radio buttons, and file inputs match your brand without reinventing the wheel.</li><li><a href="#print-modifier">Print modifier</a> — control how your site looks when someone prints it, right from your HTML.</li><li><a href="#modern-aspect-ratio-api">Modern aspect ratio API</a> — no more padding hacks, well unless you need to support Safari 14, which you probably do, but still.</li><li><a href="#fancy-underline-styles">Fancy underline styles</a> — the missing piece to making that side-project of yours finally take off.</li><li><a href="#rtl-and-ltr-modifiers">RTL and LTR modifiers</a> — for complete control when building multi-directional websites.</li><li><a href="#portrait-and-landscape-modifiers">Portrait and landscape modifiers</a> — honestly just because they were really easy to add.</li><li><a href="#arbitrary-properties">Arbitrary properties</a> — now Tailwind supports CSS properties we’ve never even heard of.</li><li><a href="#play-cdn">Play CDN</a> — the new Just-in-Time engine squeezed into a CDN script that runs right in the browser.</li><li><strong>Tons of other utilities</strong> — including support for touch-action, will-change, flex-basis, text-indent, scroll-behavior, and more.</li></ul><p>Plus a beautiful, brand-spanking new <a href="https://tailwindcss.com">documentation website</a>, loaded with improved content and examples on every page.</p><p>To start playing with Tailwind CSS v3.0 today, grab the latest release from npm:</p><pre class="language-shell"><code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> -D tailwindcss@latest postcss autoprefixer</code></pre><p>…or head over to <a href="https://play.tailwindcss.com">Tailwind Play</a> to try out the latest features right in the browser.</p><p>Tailwind CSS v3.0 is a new major version of the framework and there are some minor breaking changes, but we’ve worked really hard to make the upgrade process as smooth as possible, and for most projects you should be able to install v3.0 without making any changes.</p><p>For example, <a href="https://tailwindui.com">Tailwind UI</a> is probably the biggest Tailwind project on earth and every template is totally compatible with both v2 and v3 with no changes required.</p><p>For more details and step-by-step instructions on migrating to v3.0, check out the <a href="/docs/upgrade-guide">upgrade guide</a>.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="just-in-time-all-the-time"><a href="#just-in-time-all-the-time" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Just-in-Time, all the time</span></h2><p>Back in March we introduced the brand new <a href="/blog/just-in-time-the-next-generation-of-tailwind-css">Just-in-Time engine</a> which brought huge performance gains, unlocked exciting new features like <a href="/docs/adding-custom-styles#using-arbitrary-values">arbitrary values</a>, and made complex variant configurations a thing of the past.</p><div class="aspect-w-16 aspect-h-9 my-12"><iframe src="https://www.youtube.com/embed/3O_3X7InOw8" frameBorder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p>In Tailwind CSS v3.0, the new engine has gone stable and replaced the classic engine, so every Tailwind project can benefit from these improvements out of the box.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="every-color-out-of-the-box"><a href="#every-color-out-of-the-box" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Every color out of the box</span></h2><p>Before the new engine, we always had to be careful with CSS file size in development, and one of the biggest trade-offs we had to make was carefully limiting the color palette.</p><p>In v3.0, every single color in the extended color palette is enabled by default, including lime, cyan, sky, fuchsia, rose, and fifty shades of gray.</p><p>Check out the <a href="/docs/customizing-colors">color palette reference</a> to learn more.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="colored-box-shadows"><a href="#colored-box-shadows" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Colored box shadows</span></h2><p>People have been asking us for colored shadows for years, but supporting it in a composable way that actually made sense was way harder than I expected it to be.</p><p>After about five false starts, we finally figured out an approach we liked, and now Tailwind CSS v3.0 includes colored shadows:</p><div class="mt-4 -mb-3"><div style="background-position:10px 10px" class="not-prose relative bg-grid-gray-100 bg-gray-50 rounded-xl overflow-hidden"><div class="absolute inset-0 bg-gradient-to-b from-gray-50 opacity-60"></div><div class="relative rounded-xl overflow-auto p-8">
  <div class="flex flex-col sm:flex-row justify-center gap-8 sm:gap-16">
    <div class="flex flex-col items-center shrink-0">
      <p class="font-medium text-sm text-gray-500 font-mono text-center mb-3">shadow-cyan-500/50</p>
      <button class="py-2 px-3 bg-cyan-500 text-white text-sm font-semibold rounded-md shadow-lg shadow-cyan-500/50 focus:outline-none">Subscribe</button>
    </div>
    <div class="flex flex-col items-center shrink-0">
      <p class="font-medium text-sm text-gray-500 font-mono text-center mb-3">shadow-blue-500/50</p>
      <button class="py-2 px-3 bg-blue-500 text-white text-sm font-semibold rounded-md shadow-lg shadow-blue-500/50 focus:outline-none">Subscribe</button>
    </div>
    <div class="flex flex-col items-center shrink-0">
      <p class="font-medium text-sm text-gray-500 font-mono text-center mb-3">shadow-indigo-500/50</p>
      <button class="py-2 px-3 bg-indigo-500 text-white text-sm font-semibold rounded-md shadow-lg shadow-indigo-500/50 focus:outline-none">Subscribe</button>
    </div>
  </div>
</div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-xl"></div></div></div><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-cyan-500 <span class="code-highlight bg-code-highlight">shadow-lg shadow-cyan-500/50</span> ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Subscribe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-blue-500 <span class="code-highlight bg-code-highlight">shadow-lg shadow-blue-500/50</span> ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Subscribe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-indigo-500 <span class="code-highlight bg-code-highlight">shadow-lg shadow-indigo-500/50</span> ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Subscribe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>Learn more in the <a href="/docs/box-shadow-color">Box Shadow Color</a> documentation.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="scroll-snap-api"><a href="#scroll-snap-api" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Scroll snap API</span></h2><p>We’ve added a comprehensive set of utilities for the CSS Scroll Snap module, giving you the power to build very rich scroll snapping experiences directly in your HTML:</p><div class="mt-4 -mb-3"><div class="not-prose mb-4 flex space-x-2"><svg class="flex-none w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="none" aria-hidden="true"><path d="m9.813 9.25.346-5.138a1.276 1.276 0 0 0-2.54-.235L6.75 11.25 5.147 9.327a1.605 1.605 0 0 0-2.388-.085.018.018 0 0 0-.004.019l1.98 4.87a5 5 0 0 0 4.631 3.119h3.885a4 4 0 0 0 4-4v-1a3 3 0 0 0-3-3H9.813ZM3 5s.35-.47 1.25-.828m9.516-.422c2.078.593 3.484 1.5 3.484 1.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></svg><p class="text-gray-700 text-sm font-medium">Scroll in the grid of images to see the expected behaviour</p></div><div style="background-position:10px 10px" class="not-prose relative bg-grid-gray-100 bg-gray-50 rounded-xl overflow-hidden"><div class="absolute inset-0 bg-gradient-to-b from-gray-50 opacity-60"></div><div class="relative rounded-xl overflow-auto">
  <!-- Snap Point -->
  <div class="flex ml-[50%] items-end justify-start pt-10 mb-6">
    <div class="ml-2 rounded font-mono text-[0.625rem] leading-6 px-1.5 ring-1 ring-inset bg-indigo-50 text-indigo-600 ring-indigo-600">snap point</div>
    <div class="absolute top-0 bottom-0 left-1/2 border-l border-indigo-500"></div>
  </div>
  <!-- Contents -->
  <div class="relative w-full flex gap-6 snap-x overflow-x-auto pb-14">
    <div class="snap-center shrink-0">
      <div class="shrink-0 w-4 sm:w-48"></div>
    </div>
    <div class="snap-center shrink-0 first:pl-8 last:pr-8">
      <img class="shrink-0 w-80 h-40 rounded-lg shadow-xl bg-white" src="https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80" />
    </div>
    <div class="snap-center shrink-0 first:pl-8 last:pr-8">
      <img class="shrink-0 w-80 h-40 rounded-lg shadow-xl bg-white" src="https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80" />
    </div>
    <div class="snap-center shrink-0 first:pl-8 last:pr-8">
      <img class="shrink-0 w-80 h-40 rounded-lg shadow-xl bg-white" src="https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80" />
    </div>
    <div class="snap-center shrink-0 first:pl-8 last:pr-8">
      <img class="shrink-0 w-80 h-40 rounded-lg shadow-xl bg-white" src="https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80" />
    </div>
    <div class="snap-center shrink-0 first:pl-8 last:pr-8">
      <img class="shrink-0 w-80 h-40 rounded-lg shadow-xl bg-white" src="https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80" />
    </div>
    <div class="snap-center shrink-0 first:pl-8 last:pr-8">
      <img class="shrink-0 w-80 h-40 rounded-lg shadow-xl bg-white" src="https://images.unsplash.com/photo-1559333086-b0a56225a93c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80" />
    </div>
    <div class="snap-center shrink-0">
      <div class="shrink-0 w-4 sm:w-48"></div>
    </div>
  </div>
</div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-xl"></div></div></div><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="code-highlight bg-code-highlight">snap-x</span> ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>snap-center ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=320&amp;h=160&amp;q=80<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>snap-center ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=320&amp;h=160&amp;q=80<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>snap-center ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=320&amp;h=160&amp;q=80<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>snap-center ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=320&amp;h=160&amp;q=80<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>snap-center ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=320&amp;h=160&amp;q=80<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>snap-center ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://images.unsplash.com/photo-1559333086-b0a56225a93c?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=320&amp;h=160&amp;q=80<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Start with the new <a href="/docs/scroll-margin">Scroll Margin</a> utilities and work your way through the whole API to learn more.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="multi-column-layout"><a href="#multi-column-layout" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Multi-column layout</span></h2><p>We’ve added support for <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/columns">columns</a> — the newspaper layout kind. These are actually super useful, and are great for things like footer navigation layouts too.</p><div class="mt-4 -mb-3"><div style="background-position:10px 10px" class="not-prose relative bg-grid-gray-100 bg-gray-50 rounded-xl overflow-hidden"><div class="absolute inset-0 bg-gradient-to-b from-gray-50 opacity-60"></div><div class="relative rounded-xl overflow-auto p-8">
  <div class="relative">
    <div class="relative font-serif text-base text-justify columns-1 sm:columns-3 gap-6">
      <p>Expedita quo ea quod laborum ullam ipsum enim. Deleniti commodi et. Nam id laborum placeat natus eum. Aliquid aut aut soluta nesciunt culpa magni. Velit possimus autem et aut repudiandae culpa rerum. Qui blanditiis ut qui quia expedita necessitatibus sed. Autem sed ut saepe doloremque aut placeat voluptas ipsum.</p>
      <p class="mt-6">Eligendi error nisi recusandae velit numquam nihil aperiam enim. Eum et molestias. Id qui cum veritatis id ea quidem ea rerum saepe. Iste itaque fugiat sequi. Voluptatem quae minus. Maxime ullam ea praesentium recusandae vero est quas. Quia minima fugiat aut laborum impedit facere autem sit qui. Et eos et ullam necessitatibus. Ut voluptatem saepe natus itaque maiores sit repellat aut natus assumenda.</p>
      <p class="mt-6">Blanditiis ipsa officia dolores exercitationem nemo beatae voluptatem eos rerum velit asperiores. Non quisquam accusantium officia nisi eius necessitatibus.</p>
      <p class="mt-6">Quaerat quia ad voluptatem laudantium natus. Aut ipsa et numquam delectus aliquam. Recusandae libero consequatur dolorum. Animi culpa rerum molestiae ut non et molestias aliquid aut nemo. Sint dolorem dolorem. Iure dolorum amet ea sit perferendis.</p>
      <p class="mt-6">Et illum ut officia nisi commodi. Quia et mollitia possimus modi. Delectus aliquid quam eos consectetur.</p>
      <p class="mt-6">Accusantium et et qui non sed modi. Corrupti deserunt culpa eos vitae neque aperiam. Repellat tenetur fugit.</p>
      <p class="mt-6">Deleniti distinctio ad corrupti nisi. Mollitia qui est natus cumque. Officia dolor qui perferendis necessitatibus saepe excepturi asperiores quos voluptas. Est suscipit facere nihil expedita suscipit quibusdam. Quod cupiditate vero distinctio. Sed est soluta nostrum magnam et saepe blanditiis aut. Vero dolores repellendus et libero minima explicabo provident. Culpa aut dolorem est.</p>
    </div>
  </div>
</div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-xl"></div></div></div><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="code-highlight bg-code-highlight">columns-1</span> <span class="code-highlight bg-code-highlight">sm:columns-3</span> ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Learn more in the <a href="/docs/columns">columns</a> documentation — and check out the new <a href="/docs/break-after">break-after/inside/before</a> utilities as well.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="native-form-control-styling"><a href="#native-form-control-styling" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Native form control styling</span></h2><p>We’ve added support for the new accent-color property, as well as a modifier for styling file input buttons to make it easier than ever to put your own touch on native form controls:</p><div class="mt-4 -mb-3"><div style="background-position:10px 10px" class="not-prose relative bg-grid-gray-100 bg-gray-50 rounded-xl overflow-hidden"><div class="absolute inset-0 bg-gradient-to-b from-gray-50 opacity-60"></div><div class="relative rounded-xl overflow-auto">
  <div class="px-6">
    <div class="max-w-sm mx-auto bg-white shadow py-8 px-6">
      <form>
        <div class="flex items-center space-x-6">
          <div class="shrink-0">
            <img class="h-16 w-16 object-cover rounded-full" src="https://images.unsplash.com/photo-1580489944761-15a19d654956?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1361&q=80" alt="Current profile photo" />
          </div>
          <label class="block">
            <span class="sr-only">Choose profile photo</span>
            <input type="file" class="block w-full text-sm text-gray-500 file:text-sm file:font-semibold file:py-2 file:px-4 file:bg-violet-50 file:text-violet-700 file:rounded-full file:border-0 file:mr-4 hover:file:bg-violet-100"
            />
          </label>
        </div>
        <label class="mt-6 flex items-center justify-center space-x-2 text-sm font-medium text-gray-600">
          <input type="checkbox" class="accent-violet-500" checked/>
          <span>Yes, send me all your stupid updates</span>
        </label>
      </form>
    </div>
  </div>
</div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-xl"></div></div></div><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex items-center space-x-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>shrink-0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>h-16 w-16 object-cover rounded-full<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://images.unsplash.com/photo-1580489944761-15a19d654956?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1361&amp;q=80<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Current profile photo<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>block<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sr-only<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Choose profile photo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>block w-full text-sm text-gray-500
        <span class="code-highlight bg-code-highlight">file:mr-4</span> <span class="code-highlight bg-code-highlight">file:py-2</span> <span class="code-highlight bg-code-highlight">file:px-4</span>
        <span class="code-highlight bg-code-highlight">file:rounded-full</span> <span class="code-highlight bg-code-highlight">file:border-0</span>
        <span class="code-highlight bg-code-highlight">file:text-sm</span> <span class="code-highlight bg-code-highlight">file:font-semibold</span>
        <span class="code-highlight bg-code-highlight">file:bg-violet-50</span> <span class="code-highlight bg-code-highlight">file:text-violet-700</span>
        <span class="code-highlight bg-code-highlight">hover:file:bg-violet-100</span>
      <span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-6 flex items-center justify-center space-x-2 text-sm font-medium text-gray-600<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="code-highlight bg-code-highlight">accent-violet-500</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">checked</span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Yes, send me all your stupid updates<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span></code></pre><p>Learn more in the <a href="/docs/accent-color">accent color</a> and <a href="/docs/hover-focus-and-other-states#file-input-buttons">file input buttons</a> documentation.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="print-modifier"><a href="#print-modifier" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Print modifier</span></h2><p>The new <code>print</code> modifier lets you style how your site should look when <del>animals</del> people print it:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="code-highlight bg-code-highlight">print:hidden</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>My Secret Pizza Recipe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>This recipe is a secret, and must not be shared with anyone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- ... --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden <span class="code-highlight bg-code-highlight">print:block</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Are you seriously trying to print this? It&#x27;s secret!
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>I’d say “learn more in the <a href="/docs/hover-focus-and-other-states#print-styles">print styles</a> documentation” but it wouldn’t be true.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="modern-aspect-ratio-api"><a href="#modern-aspect-ratio-api" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Modern aspect ratio API</span></h2><p>We’ve added support for the new native <code>aspect-ratio</code> property, which is starting to see solid browser support:</p><div class="relative"><div class="mt-4 -mb-3"><div style="background-position:10px 10px;margin-right:0px" class="not-prose relative bg-grid-gray-100 bg-gray-50 rounded-xl overflow-hidden"><div class="absolute inset-0 bg-gradient-to-b from-gray-50 opacity-60"></div><div class="relative rounded-xl overflow-auto p-8">
  <iframe class="w-full aspect-video rounded-lg shadow-lg" src="https://www.youtube.com/embed/dQw4w9WgXcQ" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-xl"></div></div></div><div class="absolute inset-y-0 right-[-1.375rem] left-80 ml-4 pointer-events-none"><div class="pointer-events-auto absolute top-1/2 right-0 -mt-6 p-2 hidden md:block cursor-ew-resize" style="_drag-x:0;transform:none;user-select:none;touch-action:pan-y" draggable="false"><div class="w-1.5 h-8 bg-gray-500/60 rounded-full"></div></div></div></div><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-full <span class="code-highlight bg-code-highlight">aspect-video</span> ...<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://www.youtube.com/...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span></code></pre><p>Learn more in the <a href="/docs/aspect-ratio">aspect ratio</a> documentation.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="fancy-underline-styles"><a href="#fancy-underline-styles" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Fancy underline styles</span></h2><p>Now you can change underline colors, thickness, and more:</p><div class="mt-4 -mb-3"><div style="background-position:10px 10px" class="not-prose relative bg-grid-gray-100 bg-gray-50 rounded-xl overflow-hidden"><div class="absolute inset-0 bg-gradient-to-b from-gray-50 opacity-60"></div><div class="relative rounded-xl overflow-auto">
  <div class="bg-white p-8 text-gray-900 shadow-lg max-w-md mx-auto text-sm leading-6 sm:text-base sm:leading-7">
    <p class="text-base leading-6">I’m Derek, an astro-engineer based in Tattooine. I like to build X-Wings at <a href="#" class="font-semibold text-gray-900 underline decoration-sky-500 decoration-2">My Company, Inc</a>. Outside of work, I like to <a href="#" class="font-semibold text-gray-900 underline decoration-pink-500 decoration-2 decoration-dotted">watch pod-racing</a> and have <a href="#" class="font-semibold text-gray-900 underline decoration-indigo-500 decoration-2 decoration-wavy">light-saber</a> fights.</p>
  </div>
</div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-xl"></div></div></div><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
  I’m Derek, an astro-engineer based in Tattooine. I like to build X-Wings at
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>underline <span class="code-highlight bg-code-highlight">decoration-sky-500</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>My Company, Inc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>. Outside of
  work, I like to <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>underline <span class="code-highlight bg-code-highlight">decoration-pink-500</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>watch pod-racing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  and have <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>underline <span class="code-highlight bg-code-highlight">decoration-indigo-500</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>light-saber<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  fights.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></code></pre><p>Learn more in the <a href="/docs/text-decoration-color">text decoration color</a>, <a href="/docs/text-decoration-style">text decoration style</a>, <a href="/docs/text-decoration-thickness">text decoration thickness</a>, and <a href="/docs/text-underline-offset">text underline offset</a> documentation.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="rtl-and-ltr-modifiers"><a href="#rtl-and-ltr-modifiers" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>RTL and LTR modifiers</span></h2><p>We’ve added experimental support for multi-directional layouts with new <code>rtl</code> and <code>ltr</code> modifiers:</p><div class="mt-4 -mb-3"><div style="background-position:10px 10px" class="not-prose relative bg-grid-gray-100 bg-gray-50 rounded-xl overflow-hidden"><div class="absolute inset-0 bg-gradient-to-b from-gray-50 opacity-60"></div><div class="relative rounded-xl overflow-auto p-8">
  <div class="grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-10 max-w-lg mx-auto">
    <div dir="ltr">
      <p class="mb-4 text-sm font-medium text-gray-500">Left-to-right</p>
      <div class="group flex items-center">
        <img class="shrink-0 h-12 w-12 rounded-full" src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="" />
        <div class="ml-3 rtl:ml-0 rtl:mr-3">
          <p class="text-sm font-medium text-gray-700 group-hover:text-gray-900">Tom Cook</p>
          <p class="text-sm font-medium text-gray-500 group-hover:text-gray-700">Director of Operations</p>
        </div>
      </div>
    </div>
    <div dir="rtl">
      <p class="mb-4 text-sm font-medium text-gray-500">Right-to-left</p>
      <div class="group flex items-center">
        <img class="shrink-0 h-12 w-12 rounded-full" src="https://images.unsplash.com/photo-1563833717765-00462801314e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="" />
        <div class="ml-3 rtl:ml-0 rtl:mr-3">
          <p class="text-sm font-medium text-gray-700 group-hover:text-gray-900">تامر كرم</p>
          <p class="text-sm font-medium text-gray-500 group-hover:text-gray-700">الرئيس التنفيذي</p>
        </div>
      </div>
    </div>
  </div>
</div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-xl"></div></div></div><pre class="language-html"><code class="language-html"><span class="token block"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">group flex items-center</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token block"><span class="token plain">  </span><span class="token tag punctuation">&lt;</span><span class="token tag">img</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">shrink-0 h-12 w-12 rounded-full</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag"> </span><span class="token tag attr-name">src</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">...</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag"> </span><span class="token tag attr-name">alt</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag"> </span><span class="token tag punctuation">/&gt;</span><span class="token plain"></span></span><span class="token block -mx-5 pl-4 pr-5 border-l-4 border-sky-400 bg-sky-300/[0.15]"><span class="token plain">  </span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">ltr:ml-3 rtl:mr-3</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token block"><span class="token plain">    </span><span class="token tag punctuation">&lt;</span><span class="token tag">p</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">text-sm font-medium text-gray-700 group-hover:text-gray-900</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span><span class="token plain">...</span><span class="token tag punctuation">&lt;/</span><span class="token tag">p</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token block"><span class="token plain">    </span><span class="token tag punctuation">&lt;</span><span class="token tag">p</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">text-sm font-medium text-gray-500 group-hover:text-gray-700</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span><span class="token plain">...</span><span class="token tag punctuation">&lt;/</span><span class="token tag">p</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token block"><span class="token plain">  </span><span class="token tag punctuation">&lt;/</span><span class="token tag">div</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token block"><span class="token plain"></span><span class="token tag punctuation">&lt;/</span><span class="token tag">div</span><span class="token tag punctuation">&gt;</span></span></code></pre><p>Learn more in the <a href="/docs/hover-focus-and-other-states#rtl-support">RTL support</a> documentation.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="portrait-and-landscape-modifiers"><a href="#portrait-and-landscape-modifiers" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Portrait and landscape modifiers</span></h2><p>Use the new <code>portrait</code> and <code>landscape</code> modifiers to conditionally add styles when the viewport is in a specific orientation:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>portrait:hidden<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- ... --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>landscape:hidden<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
      This experience is designed to be viewed in landscape. Please rotate your
      device to view the site.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>The <a href="/docs/hover-focus-and-other-states#viewport-orientation">documentation for this feature</a> has even less content than this section of this post does.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="arbitrary-properties"><a href="#arbitrary-properties" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Arbitrary properties</span></h2><p>This might be illegal but we’ve made it possible to add totally arbitrary CSS that you can combine with modifiers like <code>hover</code>, <code>lg</code>, and whatever else:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[mask-type:luminance] hover:[mask-type:alpha]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>This is what inline styles want to be when they grow up. Learn more in the <a href="/docs/adding-custom-styles#arbitrary-properties">arbitrary properties</a> documentation.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="play-cdn"><a href="#play-cdn" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Play CDN</span></h2><p>There’s no way to make a sensible CSS-based CDN build for Tailwind CSS v3.0 so we had to do something different — we built a JavaScript library.</p><pre class="language-diff-html"><code class="language-diff-html"><span class="token language-html unchanged"><span class="token doctype punctuation">&lt;!</span><span class="token doctype doctype-tag">DOCTYPE</span><span class="token doctype"> </span><span class="token doctype name">html</span><span class="token doctype punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html unchanged"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">html</span><span class="token tag"> </span><span class="token tag attr-name">lang</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">en</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html unchanged"><span class="token plain">  </span><span class="token tag punctuation">&lt;</span><span class="token tag">head</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html unchanged"><span class="token plain">    </span><span class="token tag punctuation">&lt;</span><span class="token tag">meta</span><span class="token tag"> </span><span class="token tag attr-name">charset</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">utf-8</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html unchanged"><span class="token plain">    </span><span class="token tag punctuation">&lt;</span><span class="token tag">meta</span><span class="token tag"> </span><span class="token tag attr-name">name</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">viewport</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag"> </span><span class="token tag attr-name">content</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">width=device-width, initial-scale=1.0</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag"> </span><span class="token tag punctuation">/&gt;</span><span class="token plain"></span></span><span class="token language-html unchanged"><span class="token plain">    </span><span class="token tag punctuation">&lt;</span><span class="token tag">title</span><span class="token tag punctuation">&gt;</span><span class="token plain">Example</span><span class="token tag punctuation">&lt;/</span><span class="token tag">title</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html inserted"><span class="token plain">    </span><span class="token tag punctuation">&lt;</span><span class="token tag">script</span><span class="token tag"> </span><span class="token tag attr-name">src</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">https://cdn.tailwindcss.com/</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span><span class="token script"></span><span class="token tag punctuation">&lt;/</span><span class="token tag">script</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html unchanged"><span class="token plain">  </span><span class="token tag punctuation">&lt;/</span><span class="token tag">head</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html unchanged"><span class="token plain">  </span><span class="token tag punctuation">&lt;</span><span class="token tag">body</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html unchanged"><span class="token plain">    </span><span class="token comment">&lt;!-- --&gt;</span><span class="token plain"></span></span><span class="token language-html unchanged"><span class="token plain">  </span><span class="token tag punctuation">&lt;/</span><span class="token tag">body</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html unchanged"><span class="token plain"></span><span class="token tag punctuation">&lt;/</span><span class="token tag">html</span><span class="token tag punctuation">&gt;</span></span></code></pre><p>Add that script tag to any HTML document and you can use every Tailwind feature, right in the browser. It’s meant for development purposes only, but it sure is a fun way to build little demos or hack on a new idea.</p><p>Learn more in the <a href="/docs/installation/play-cdn">Play CDN</a> documentation.</p><hr/><p>So there it is — Tailwind CSS v3.0! Head over to the new <a href="/">documentation site</a> to get started with it today.</p><p>For a comprehensive list of every single change, check out the <a href="https://github.com/tailwindlabs/tailwindcss/blob/master/CHANGELOG.md">changelog</a> on GitHub.</p><p><em>(The post <a href="https://tailwindcss.com/blog/tailwindcss-v3">Tailwind CSS v3.0</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.f6878fd8df804f73ba3f1a271122105a.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Introducing Tailwind UI Ecommerce]]></title>
            <link>https://tailwindcss.com/blog/tailwind-ui-ecommerce</link>
            <guid>Introducing Tailwind UI Ecommerce</guid>
            <pubDate>Wed, 11 Aug 2021 19:30:00 GMT</pubDate>
            <description><![CDATA[Almost 6 months in the making, we finally released Tailwind UI Ecommerce — the first all-new component kit for Tailwind UI since the initial launch back in February 2020.]]></description>
            <content:encoded><![CDATA[<p>Almost 6 months in the making, we finally released <a href="https://tailwindui.com/#product-ecommerce">Tailwind UI Ecommerce</a> — the first all-new component kit for Tailwind UI since the initial launch back in February 2020.</p><p>Almost 6 months in the making, we finally released the first all-new component kit for <a href="https://tailwindui.com">Tailwind UI</a> since the initial launch back in February 2020!</p><a href="https://tailwindui.com"><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/card.8bac93c3bf37d71d5a251451214dda18.jpg" alt="Tailwind UI Ecommerce available now"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div></a><p><a href="https://tailwindui.com/#product-ecommerce">Tailwind UI Ecommerce</a> adds over 100 new components across 14 new component categories and 7 new page example categories, including stuff like:</p><ul role="list"><li>Product Overviews</li><li>Product Lists</li><li>Category Previews</li><li>Shopping Carts</li><li>Category Filters</li><li>Product Quickviews</li><li>Store Navigation</li><li>Promo Sections</li><li>Checkout Forms</li><li>Customer Reviews</li><li>Order Summaries</li><li>Storefront Pages</li><li>Product Pages</li><li>Order History Pages</li></ul><p>…and more.</p><p>For a quick preview, check out this product page example we shared via our newsletter last week:</p><a href="https://tailwindui.com/page-examples/ecommerce-product-page-02"><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/product-page-preview.705c02fcf00fe28c7bcc9fb262d0bb62.jpg" alt="Preview one of the new product page examples"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div></a><p>It’s been a really fun and challenging process putting this together, and I’m really proud of how it turned out. I wrote up a big post about <a href="https://blog.tailwindcss.com/designing-tailwind-ui-ecommerce">“Designing Tailwind UI Ecommerce”</a> that’s worth a read if you’re interested in the process behind putting together a new Tailwind UI product like this.</p><p>You can check out a bunch more interactive previews as well as screenshots of every single new example over at <a href="https://tailwindui.com/#product-ecommerce">the Tailwind UI website</a>.</p><p>If you like what you see, consider <a href="https://tailwindui.com/pricing">purchasing a license</a> — it’s the best way to support our work on Tailwind CSS and Headless UI and makes it possible for us to keep making these tools better and better.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to check it out? <a href="https://tailwindui.com">Visit the Tailwind UI website →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/tailwind-ui-ecommerce">Introducing Tailwind UI Ecommerce</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.8bac93c3bf37d71d5a251451214dda18.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Headless UI v1.4: The One With Tabs]]></title>
            <link>https://tailwindcss.com/blog/headless-ui-v1-4</link>
            <guid>Headless UI v1.4: The One With Tabs</guid>
            <pubDate>Thu, 29 Jul 2021 12:00:00 GMT</pubDate>
            <description><![CDATA[We just released Headless UI v1.4, which includes a brand new `Tab` component, and new APIs for manually closing `Popover` and `Disclosure` components more easily.]]></description>
            <content:encoded><![CDATA[<p>We just released Headless UI v1.4, which includes a brand new <code>Tab</code> component, and new APIs for manually closing <code>Popover</code> and <code>Disclosure</code> components more easily.</p><a href="https://headlessui.dev"><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/banner.9652b1ea7c1c87813c23e89ce326a4b7.jpg" alt="Headless UI v1.4"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="tabs"><a href="#tabs" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Tabs</span></h2><p>Earlier this year we started working on <a href="https://tailwindui.com/ecommerce">Tailwind UI Ecommerce</a>, and we realized pretty quickly we were going to need to support tabs in Headless UI to be able to build the new interfaces we were designing.</p><a href="https://tailwindui.com/ecommerce"><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/ecommerce-screenie.69fd4ea24ca8c33e74e1f2a54c5e4e37.jpg" alt="Product details interface design from Tailwind UI Ecommerce."/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div></a><p>Here’s what we ended up with:</p><div class="my-6 bg-gray-800 rounded-md"><div class="relative space-x-2 px-4 pt-3" role="tablist" aria-orientation="horizontal"><button class="py-2 px-4 inline-block rounded-md bg-transparent hover:bg-gray-700 text-sm text-white font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-gray-600" id="headlessui-tabs-tab-undefined" role="tab" type="button" aria-selected="false" tabindex="-1">React</button><button class="py-2 px-4 inline-block rounded-md bg-transparent hover:bg-gray-700 text-sm text-white font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-gray-600" id="headlessui-tabs-tab-undefined" role="tab" type="button" aria-selected="false" tabindex="-1">Vue</button></div><div></div></div><p>And yep, those are tabs!</p><p>Like all Headless UI components, this totally abstracts away stuff like keyboard navigation for you so you can create custom tabs in a completely declarative way, without having to think about any of the tricky accessibility details.</p><p><a href="https://headlessui.dev/react/tabs">Check out the documentation</a> to learn more.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="closing-disclosures-and-popovers"><a href="#closing-disclosures-and-popovers" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Closing Disclosures and Popovers</span></h3><p>Up until now, there was no way to close a <code>Disclosure</code> without clicking the actual button used to open it. For typical disclosure use cases this isn’t a big deal, but it often makes sense to use disclosures for things like mobile navigation, where you want to close it when someone clicks a link <em>inside</em> of it.</p><p>Now you can use <code>Disclosure.Button</code> or (<code>DisclosureButton</code> in Vue) within your disclosure panel to close the panel, making it easy to wrap up things like links or other buttons so the panel doesn’t stay open:</p><div class="my-6 bg-gray-800 rounded-md"><div class="relative space-x-2 px-4 pt-3" role="tablist" aria-orientation="horizontal"><button class="py-2 px-4 inline-block rounded-md bg-transparent hover:bg-gray-700 text-sm text-white font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-gray-600" id="headlessui-tabs-tab-undefined" role="tab" type="button" aria-selected="false" tabindex="-1">React</button><button class="py-2 px-4 inline-block rounded-md bg-transparent hover:bg-gray-700 text-sm text-white font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-gray-600" id="headlessui-tabs-tab-undefined" role="tab" type="button" aria-selected="false" tabindex="-1">Vue</button></div><div></div></div><p>The same thing works with <code>Popover</code> components, too:</p><div class="my-6 bg-gray-800 rounded-md"><div class="relative space-x-2 px-4 pt-3" role="tablist" aria-orientation="horizontal"><button class="py-2 px-4 inline-block rounded-md bg-transparent hover:bg-gray-700 text-sm text-white font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-gray-600" id="headlessui-tabs-tab-undefined" role="tab" type="button" aria-selected="false" tabindex="-1">React</button><button class="py-2 px-4 inline-block rounded-md bg-transparent hover:bg-gray-700 text-sm text-white font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-gray-600" id="headlessui-tabs-tab-undefined" role="tab" type="button" aria-selected="false" tabindex="-1">Vue</button></div><div></div></div><p>If you need finer control, we also pass a <code>close</code> function via the render prop/scoped slot, so you can imperatively close the panel when you need to:</p><div class="my-6 bg-gray-800 rounded-md"><div class="relative space-x-2 px-4 pt-3" role="tablist" aria-orientation="horizontal"><button class="py-2 px-4 inline-block rounded-md bg-transparent hover:bg-gray-700 text-sm text-white font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-gray-600" id="headlessui-tabs-tab-undefined" role="tab" type="button" aria-selected="false" tabindex="-1">React</button><button class="py-2 px-4 inline-block rounded-md bg-transparent hover:bg-gray-700 text-sm text-white font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-gray-600" id="headlessui-tabs-tab-undefined" role="tab" type="button" aria-selected="false" tabindex="-1">Vue</button></div><div></div></div><p>For more details, check out the updated <a href="https://headlessui.dev/react/popover#closing-popovers-manually">Popover</a> and <a href="https://headlessui.dev/react/disclosure#closing-disclosures-manually">Disclosure</a> documentation.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="try-it-out"><a href="#try-it-out" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Try it out</span></h2><p>Headless UI v1.4 is a minor update so there are no breaking changes. To upgrade, just install the latest version via npm:</p><pre class="language-shell"><code class="language-shell"><span class="token comment"># For React</span>
<span class="token function">npm</span> <span class="token function">install</span> @headlessui/react

<span class="token comment"># For Vue</span>
<span class="token function">npm</span> <span class="token function">install</span> @headlessui/vue</code></pre><p>Check out <a href="https://headlessui.dev">the official website</a> for the latest documentation, and check out <a href="https://tailwindui.com">Tailwind UI</a> if you want to play tons of styled examples.</p><p class="border-t border-gray-200 mt-8 pt-6">Ready to try it out? <a href="https://headlessui.dev">Visit the Headless UI website →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/headless-ui-v1-4">Headless UI v1.4: The One With Tabs</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.2d8171220c44da279fad673d73b77a72.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Tailwind CSS v2.2]]></title>
            <link>https://tailwindcss.com/blog/tailwindcss-2-2</link>
            <guid>Tailwind CSS v2.2</guid>
            <pubDate>Thu, 17 Jun 2021 14:00:00 GMT</pubDate>
            <description><![CDATA[An all-new high-performance CLI tool, ::before and ::after support, sibling selectors, selected text variants, and tons more.]]></description>
            <content:encoded><![CDATA[<p>Well I can’t say we were really planning on it but over the last few weeks we’ve been having a ton of fun dumping new and exciting features into Tailwind and now feels like the right time to cut a release, so here it is — Tailwind CSS v2.2!</p><p>We’ve built-in a new high-performance CLI tool, added <code>::before</code> and <code>::after</code> support, introduced new <code>peer-*</code> variants for sibling styling, added variants for styling highlighted text, and tons more.</p><p>Well I can’t say we were really planning on it but over the last few weeks we’ve been having a ton of fun dumping new and exciting features into Tailwind and now feels like the right time to cut a release, so here it is — Tailwind CSS v2.2!</p><div class="aspect-w-16 aspect-h-9 my-12"><iframe src="https://www.youtube.com/embed/DxcJbrs6rKk" frameBorder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p>This has to be one of the most feature-rich Tailwind releases of all-time. Introducing <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a> back in v2.1 has opened the doors to a lot of cool features we couldn’t have easily added otherwise, and this release is loaded with great examples of that.</p><p>Here are the highlights:</p><ul role="list"><li><a href="#all-new-high-performance-tailwind-cli">All-new high-performance Tailwind CLI</a></li><li><a href="#before-and-after-variants">Before and after variants</a></li><li><a href="#first-letter-line-variants">First-letter/line variants</a></li><li><a href="#selected-text-variants">Selected text variants</a></li><li><a href="#list-marker-variants">List marker variants</a></li><li><a href="#sibling-selector-variants">Sibling selector variants</a></li><li><a href="#exhaustive-pseudo-class-support">Exhaustive pseudo-class support</a></li><li><a href="#shorthand-color-opacity-syntax">Shorthand color opacity syntax</a></li><li><a href="#extended-arbitrary-value-support">Extended arbitrary value support</a></li><li><a href="#improved-nesting-support">Improved nesting support</a></li><li><a href="#caret-color-utilities">Caret color utilities</a></li><li><a href="#background-origin-utilities">Background origin utilities</a></li><li><a href="#simplified-transform-and-filter-composition">Simplified transform and filter composition</a></li><li><a href="#per-side-border-color-utilities">Per-side border color utilities</a></li><li><a href="#built-in-safelist-transform-and-extract-support">Built-in safelist, transform, and extract support</a></li></ul><p>For the full details, <a href="https://github.com/tailwindlabs/tailwindcss/releases/tag/v2.2.0">check out the release notes</a> on GitHub.</p><p>It’s important to note that although this is a minor release and there are no breaking changes in the classic engine, <strong>Just-in-Time mode is still in preview and v2.2 introduces a few very small changes that might impact you</strong>, so make sure you read through the <a href="https://github.com/tailwindlabs/tailwindcss/releases/tag/v2.2.0#changes-and-deprecations">changes and deprecations</a> in the release notes when upgrading.</p><p>When you’re ready to upgrade, just install the latest version from npm and you’re off to the races:</p><pre class="language-shell"><code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> -D tailwindcss@latest</code></pre><hr/><a name="all-new-high-performance-tailwind-cli"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="all-new-high-performance-tailwind-cli"><a href="#all-new-high-performance-tailwind-cli" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>All-new high-performance Tailwind CLI</span></h2><p>We’ve rewritten the Tailwind CLI tool from the ground-up with a performance-first mindset, while also adding support for a bunch of new features.</p><pre class="language-shell"><code class="language-shell">npx tailwindcss -o dist/tailwind.css --watch --jit --purge<span class="token operator">=</span><span class="token string">&quot;./src/**/*.html&quot;</span></code></pre><p>Here are some of the highlights:</p><ul role="list"><li><strong>No installation or configuration necessary</strong> — simply <code>npx tailwindcss -o output.css</code> to compile Tailwind from anywhere. You can even enable JIT mode with the <code>--jit</code> flag and pass in your content files using the <code>--purge</code> option, all without creating a config file.</li><li><strong>Watch mode</strong> — so you can automatically rebuild your CSS whenever you make any changes.</li><li><strong>JIT performance optimizations</strong> — since our CLI is Tailwind-specific we’ve been able to make tons of optimizations that make it the absolute fastest build tool for compiling your CSS in JIT mode.</li><li><strong>Minification support</strong> — now you can minify your CSS with <a href="https://cssnano.co/">cssnano</a> just by adding the <code>--minify</code> flag.</li><li><strong>PostCSS plugin support</strong> — the new CLI will read and respect any extra plugins you configure using a <code>postcss.config.js</code> file.</li></ul><p>It’s fully backwards-compatible with the previous CLI, so if you’ve got any scripts set up already you should be able to upgrade to v2.2 without making any changes to your scripts.</p><p>Check out our <a href="https://tailwindcss.com/docs/installation#using-tailwind-cli">updated Tailwind CLI documentation</a> to learn more.</p><p><em>Note that if you were using the <code>tailwindcss-cli</code> wrapper package, you can safely switch to <code>tailwindcss</code> as we’ve managed to resolve the peer-dependency issues that forced us to create the wrapper package in the first place.</em></p><a name="before-and-after-pseudo-element-variants"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="before-and-after-pseudo-element-variants"><a href="#before-and-after-pseudo-element-variants" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Before and after pseudo-element variants</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>People have been asking for this for years and it’s finally here! We’ve added first-party support for styling pseudo-elements like <code>before</code> and <code>after</code>:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>before:block before:bg-blue-500 after:flex after:bg-pink-300<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>We set <code>content: &quot;&quot;</code> automatically any time you use a <code>before</code> or <code>after</code> variant to make sure the elements are rendered, but you can override it using the new <code>content</code> utilities which have full arbitrary value support:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>before:content-[<span class="token punctuation">&#x27;</span>hello<span class="token punctuation">&#x27;</span>] before:block ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>You can even grab the content from an attribute using the CSS <code>attr()</code> function:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
  <span class="token attr-name">before</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello world<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>before:content-[attr(before)] before:block ...<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>This can be super helpful when your content has spaces in it, since spaces can’t be used in CSS class names.</p><a name="first-letter-line-variants"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="first-letter-line-variants"><a href="#first-letter-line-variants" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>First-letter/line variants</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>We’ve added variants for the <code>first-letter</code> and <code>first-line</code> pseudo-elements, so you can do stuff like drop caps:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>first-letter:text-4xl first-letter:font-bold first-letter:float-left<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  The night was March 31, 1996, and it was finally time for Bret Hart to face
  off against Shawn Michaels in the long anticipated Iron Man match — a 60
  minute war of endurance where the man who scored the most number of falls
  would walk away as the WWF World Heavyweight Champion.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></code></pre><a name="selected-text-variants"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="selected-text-variants"><a href="#selected-text-variants" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Selected text variants</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>We’ve added a new <code>selection</code> variant that makes it super easy to style highlighted to match your design:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selection:bg-pink-200<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  After nearly a grueling hour of warfare with neither man scoring a fall, Hart
  locked in the Sharpshooter, his signature submission hold. As Michaels
  screamed in pain, the crowd were certain that Hart was about to walk away from
  WrestleMania XII as the still-World Heavyweight Champion.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></code></pre><p>We’ve even built this feature in such a way that it can be applied to a parent element and cascade down, so you can set a highlight color for your whole site by applying a utility to the body:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selection:bg-pink-200<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
    But Michaels didn&#x27;t give up — he held on until the bell rang and the
    designated 60 minutes was up. Hart walked away content, thinking that
    without a clear winner, the title was his to hold. He was not prepared for
    what would happen next, when Gorilla Monsoon declared the match would
    continue under sudden death rules.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></code></pre><a name="list-marker-variants"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="list-marker-variants"><a href="#list-marker-variants" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>List marker variants</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>You can use the new <code>marker</code> variant to style the bullets or numbers at the beginning of a list:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>WrestleMania XII Results<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>marker:text-gray-500 marker:font-medium<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>
    The British Bulldog, Owen Hart, and Vader defeated Ahmed Johnson, Jake
    Roberts, and Yokozuna
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Roddy Piper defeated Goldust<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Stone Cold Steve Austin defeated Savio Vega<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>The Ultimate Warrior defeated Hunter Hearst Helmsley<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>The Undertaker defeated Diesel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Shawn Michaels defeated Bret Hart<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span></code></pre><p>Like the <code>selection</code> variant, we’ve implemented this in a way that it cascades from the parent, so you don’t have to repeat it for each list item.</p><a name="sibling-selector-variants"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="sibling-selector-variants"><a href="#sibling-selector-variants" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Sibling selector variants</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>Tailwind CSS v2.2 adds new <code>peer-*</code> variants that behave much like the <code>group-*</code> variants, but for targeting sibling elements instead of parent elements.</p><p>This is useful for things like styling an element when a preceding checkbox is checked, doing things like floating labels, and lots more:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>peer sr-only<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>h-4 w-4 bg-gray-200 peer-checked:bg-blue-500<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span></code></pre><p>Just like <code>group</code> can be combined with any other variant, <code>peer</code> can as well, so you have variants like <code>peer-hover</code>, <code>peer-focus</code>, <code>peer-disabled</code>, and loads more at your fingertips.</p><p>The generated CSS uses the <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/General_sibling_combinator">general sibling combinator</a> and looks like this:</p><pre class="language-css"><code class="language-css"><span class="token selector"><span class="token class">.peer</span><span class="token pseudo-class">:checked</span> <span class="token combinator">~</span> <span class="token class">.peer-checked</span><span class="token punctuation">\</span><span class="token class">:bg-blue-500</span></span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode color">#3b82f6</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre><p>So just like in vanilla CSS, it will only work for targeting <em>previous</em> siblings, not siblings that appear later in the DOM.</p><a name="exhaustive-pseudo-class-support"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="exhaustive-pseudo-class-support"><a href="#exhaustive-pseudo-class-support" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Exhaustive pseudo-class support</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>We’ve added variants for basically every single missing pseudo-class we could think of in this release:</p><ul role="list"><li><code>only</code> <em>(only-child)</em></li><li><code>first-of-type</code></li><li><code>last-of-type</code></li><li><code>only-of-type</code></li><li><code>target</code></li><li><code>default</code></li><li><code>indeterminate</code></li><li><code>placeholder-shown</code></li><li><code>autofill</code></li><li><code>required</code></li><li><code>valid</code></li><li><code>invalid</code></li><li><code>in-range</code></li><li><code>out-of-range</code></li></ul><p>Personal favorite in the list is <code>placeholder-shown</code> — when combined with the new sibling selector variants it makes it possible to do cool stuff like floating labels:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>relative<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>peer ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>peer-placeholder-shown:top-4 peer-focus:top-0 ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><a name="shorthand-color-opacity-syntax"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="shorthand-color-opacity-syntax"><a href="#shorthand-color-opacity-syntax" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Shorthand color opacity syntax</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>Instead of using utilities like <code>bg-opacity-50</code>, <code>text-opacity-25</code>, or <code>placeholder-opacity-40</code>, Tailwind CSS v2.2 gives you a new color opacity shorthand you can use to tweak the alpha channel of a color directly in the color utility itself:</p><pre class="language-diff-html"><code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">bg-red-500 bg-opacity-25</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">bg-red-500/25</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span></span></code></pre><p>This means you can now change the opacity of colors anywhere in Tailwind, even where we previously didn’t have specific opacity utilities, like in gradients for example:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-gradient-to-r from-red-500/50<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>The opacity values are taken from your <code>opacity</code> scale, but you can also use arbitrary opacity values using square bracket notation:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-red-500/[0.31]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>If I’m being honest, I am more excited about never having to create another core plugin like <code>placeholderOpacity.js</code> for you people again than I am about actually using the feature. And I’m really excited about the feature, so that says something.</p><a name="extended-arbitrary-value-support"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="extended-arbitrary-value-support"><a href="#extended-arbitrary-value-support" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Extended arbitrary value support</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>We’ve gone over every core plugin in Tailwind to try and add the most flexible arbitrary value support we possibly could, and I think we’ve covered pretty much everything at this point.</p><p>You should be able to whatever arbitrary values you want, just about wherever you want:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-start-[73] placeholder-[#aabbcc] object-[50%] ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>If you find one we missed, open an issue and we’ll sort it out.</p><p>In addition to making arbitrary value support more comprehensive, we’ve also added a new type-hint syntax to handle ambiguous situations. For example, if you are using a CSS variable as an arbitrary value, it’s not always clear what the generated CSS should be:</p><pre class="language-html"><code class="language-html"><span class="token comment">&lt;!-- Is this a font size utility, or a text color utility? --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-[var(--mystery-var)]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Now you can provide a hint to the engine by prefixing the arbitrary value with the type name:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-[color:var(--mystery-var)]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Currently, the supported types are:</p><ul role="list"><li><code>length</code></li><li><code>color</code></li><li><code>angle</code></li><li><code>list</code></li></ul><p>We’ll probably flesh this out even more over time as people discover new edge cases but this should get you very far.</p><a name="improved-nesting-support"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="improved-nesting-support"><a href="#improved-nesting-support" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Improved nesting support</span></h2><p>Since Tailwind introduces a lot of non-standard CSS at-rules like <code>@tailwind</code> and <code>@apply</code>, you can often run into weird output when combining it with a PostCSS nesting plugin like <code>postcss-nested</code> or <code>postcss-nesting</code>.</p><p>To ease the pain here, we’ve included a new PostCSS plugin in the <code>tailwindcss</code> package that acts as a lightweight compatibility layer between existing nesting plugins and Tailwind itself.</p><p>So if you need nesting support in your project, use our plugin, and stick it before Tailwind in your PostCSS plugin list:</p><pre class="language-js"><code class="language-js"><span class="token comment">// postcss.config.js</span>
module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;tailwindcss/nesting&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;tailwindcss&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre><p>By default, it uses <code>postcss-nested</code> under the hood <em>(since that’s what we use to support nesting in Tailwind plugins)</em>, but if you’d like to use <code>postcss-nesting</code> instead, just call our plugin as a function and pass through the <code>postcss-nesting</code> plugin:</p><pre class="language-js"><code class="language-js"><span class="token comment">// postcss.config.js</span>
module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;tailwindcss/nesting&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;postcss-nesting&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;tailwindcss&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre><p>Under the hood, this uses a new <code>screen()</code> function we’ve introduced that you can use to get the expanded media expression from any of your configured breakpoints:</p><pre class="language-css"><code class="language-css"><span class="token comment">/* Input */</span>
<span class="token atrule"><span class="token rule">@media</span> <span class="token function">screen</span><span class="token punctuation">(</span>sm<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span>

<span class="token comment">/* Output */</span>
<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token number">640</span><span class="token unit">px</span><span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span></code></pre><p>You probably won’t need to use this yourself but it could be helpful if you’re ever integrating Tailwind with another tool that understands <code>@media</code> but doesn’t handle <code>@screen</code> properly.</p><pre class="language-diff-css"><code class="language-diff-css"><span class="token language-css deleted"><span class="token atrule rule">@screen</span><span class="token atrule"> sm</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token comment">/* ... */</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span></span><span class="token language-css inserted"><span class="token plain"></span><span class="token atrule rule">@media</span><span class="token atrule"> </span><span class="token atrule function">screen</span><span class="token atrule punctuation">(</span><span class="token atrule">sm</span><span class="token atrule punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token comment">/* ... */</span><span class="token plain"> </span><span class="token punctuation">}</span></span></code></pre><a name="caret-color-utilities"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="caret-color-utilities"><a href="#caret-color-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Caret color utilities</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>You can now set the color of the cursor in form fields using the new <code>caret-{color}</code> utilities:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>caret-red-500<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></code></pre><p>These are customizable using the <code>caretColor</code> key in the <code>theme</code> section of your <code>tailwind.config.js</code> file.</p><a name="background-origin-utilities"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="background-origin-utilities"><a href="#background-origin-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Background origin utilities</span></h2><p>We’ve added new utilities for the <code>background-origin</code> property, which let you control where an element’s background is positioned relative to the element’s border, padding box, or content:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-origin-border p-4 border-4 border-dashed ...<span class="token punctuation">&quot;</span></span>
  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>...<span class="token punctuation">)</span></span></span><span class="token punctuation">&quot;</span></span></span>
<span class="token punctuation">&gt;</span></span>
  Background is rendered under the border
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-origin-padding p-4 border-4 border-dashed ...<span class="token punctuation">&quot;</span></span>
  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>...<span class="token punctuation">)</span></span></span><span class="token punctuation">&quot;</span></span></span>
<span class="token punctuation">&gt;</span></span>
  Background is rendered within the border but on top of any padding
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-origin-content p-4 border-4 border-dashed ...<span class="token punctuation">&quot;</span></span>
  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>...<span class="token punctuation">)</span></span></span><span class="token punctuation">&quot;</span></span></span>
<span class="token punctuation">&gt;</span></span>
  Background is rendered within any padding and under the content
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Learn more in the <a href="https://tailwindcss.com/docs/background-origin">background origin documentation</a>.</p><a name="simplified-transform-and-filter-composition"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="simplified-transform-and-filter-composition"><a href="#simplified-transform-and-filter-composition" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Simplified transform and filter composition</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>The <code>transform</code>, <code>filter</code>, and <code>backdrop-filter</code> classes are no longer necessary to “enable” their respective set of composable utilities.</p><pre class="language-diff-html"><code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">transform scale-50 filter grayscale backdrop-filter backdrop-blur-sm</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">scale-50 grayscale backdrop-blur-sm</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span></span></code></pre><p>Now those features are automatically enabled any time you use any of the relevant sub-utilities.</p><p>It’s important to understand though that because these utilities aren’t needed anymore, you can no longer expect transforms and filters to be “dormant” by default. If you were relying on conditionally “activating” transforms or filters by toggling these classes, you will want to make sure you are toggling the sub-utilities themselves instead:</p><pre class="language-diff-html"><code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">scale-105 -translate-y-1 hover:transform</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">hover:scale-105 hover:-translate-y-1</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span></span></code></pre><p>I don’t expect this will be a real problem for most people, but it’s technically a breaking change which is why we’ve limited this improvement to the JIT engine only.</p><a name="per-side-border-color-utilities"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="per-side-border-color-utilities"><a href="#per-side-border-color-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Per-side border color utilities</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>Requested at least once a month for the last four years, I’m excited to share that we’ve finally added per-side border color support now that we don’t have to sweat the development stylesheet size.</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>border-2 border-t-blue-500 border-r-pink-500 border-b-green-500 border-l-yellow-500<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Go forth and build ugly websites! <em>(Kidding, kidding, I know they are useful settle the hell down.)</em></p><a name="built-in-safelist-transform-and-extract-support"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="built-in-safelist-transform-and-extract-support"><a href="#built-in-safelist-transform-and-extract-support" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Built-in safelist, transform, and extract support</span></h2><p>We’ve added first-class support for a bunch of important PurgeCSS features and made them work in the JIT engine as well, which doesn’t actually even use PurgeCSS.</p><p>First is <code>safelist</code>, which is super useful if you need to protect specific classes from being removed from your production CSS, perhaps because they are used in content that comes from a database or similar:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  purge<span class="token operator">:</span> <span class="token punctuation">{</span>
    content<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;./src/**/*.html&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    safelist<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&#x27;bg-blue-500&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;text-center&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;hover:opacity-100&#x27;</span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
      <span class="token string">&#x27;lg:text-right&#x27;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span></code></pre></div></div><p><strong>Note that while the classic engine will accept regular expressions here, the JIT engine will not</strong>. That’s because when we’re generating classes on demand, the class doesn’t exist until it’s used so we have nothing to match the expression against. So if you’re using just-in-time mode, make sure you’re providing complete class names to get the expected result.</p><p>Next is <code>transform</code>, which lets you transform content for different file extensions before scanning it for potential class names:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js"><span class="token keyword">let</span> remark <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;remark&#x27;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  purge<span class="token operator">:</span> <span class="token punctuation">{</span>
    content<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;./src/**/*.{html,md}&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    transform<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">md</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword control-flow">return</span> <span class="token function">remark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">process</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span></code></pre></div></div><p>This is really useful if you have templates that are written in a language that compiles to HTML, like Markdown.</p><p>Finally we have <code>extract</code>, which lets you customize the logic that Tailwind uses to detect class names in specific file types:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  purge<span class="token operator">:</span> <span class="token punctuation">{</span>
    content<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;./src/**/*.{html,md}&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    extract<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">pug</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword control-flow">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex"><span class="token charset"><span class="token charset-punctuation punctuation">[</span><span class="token charset-negation operator">^</span>&lt;&gt;&quot;&#x27;`<span class="token charclass class-name">\s</span><span class="token charset-punctuation punctuation">]</span></span><span class="token quantifier number">*</span></span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token method function property-access">match</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span></code></pre></div></div><p>This is an advanced feature and most users won’t need it. The default extraction logic in Tailwind works extremely well for almost all projects.</p><p>For more information on these features, check out our <a href="https://tailwindcss.com/docs/optimizing-for-production">optimizing for production documentation</a>.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="upgrading"><a href="#upgrading" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Upgrading</span></h2><p>To upgrade to Tailwind CSS v2.2, install the latest release from npm:</p><pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -D tailwindcss@latest</code></pre><p>If you are using the Just-in-Time mode preview, you’ll also want to read through the <a href="https://github.com/tailwindlabs/tailwindcss/releases/tag/v2.2.0#changes-and-deprecations">changes and deprecations</a> in the release notes.</p><p class="border-t border-gray-200 mt-8 pt-6">Ready to upgrade? <a href="https://npmjs.com/tailwindcss">Get it from npm →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/tailwindcss-2-2">Tailwind CSS v2.2</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.16a69957a5b5ca1ded1fd8e6aafbe5de.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Tailwind UI: Now with React + Vue support]]></title>
            <link>https://tailwindcss.com/blog/tailwind-ui-now-with-react-and-vue-support</link>
            <guid>Tailwind UI: Now with React + Vue support</guid>
            <pubDate>Wed, 14 Apr 2021 16:01:00 GMT</pubDate>
            <description><![CDATA[Last year we released Tailwind UI — a huge directory of professionally designed UI examples built with Tailwind CSS. Today we’re excited to add first class support for React and Vue 3 to all of the examples in Tailwind UI, which makes it even easier to adapt them for your projects.]]></description>
            <content:encoded><![CDATA[<p>Last year we released <a href="https://tailwindui.com">Tailwind UI</a> — a huge directory of professionally designed UI examples built with Tailwind CSS. Up until now, all of the examples in Tailwind UI have been pure HTML which is sort of the lowest common denominator for all web developers, and makes it possible to adapt them to any templating language or JavaScript framework.</p><p>Today we’re excited to add first class support for React and Vue 3 to all of the examples in Tailwind UI, which makes it even easier to adapt them for your projects.</p><a href="https://tailwindui.com"><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/card.3d80182964bf472d96562ebad7f76065.jpg" alt="Tailwind UI: Now for React and Vue"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div></a><p>It’s been <a href="https://blog.tailwindcss.com/building-react-and-vue-support-for-tailwind-ui">a long journey</a> but I am super proud of where we ended up on this one, and really think it’s going to make Tailwind UI a useful tool for a whole new group of Tailwind CSS users.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="functional-and-accessible"><a href="#functional-and-accessible" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Functional and accessible</span></h2><p>All of the React and Vue examples in Tailwind UI are powered <a href="https://headlessui.dev">Headless UI</a> which is a library of components we developed to decouple all of the complicated JS behavior you need to build complex components like modals and dropdowns from the actual styles and markup.</p><p>Headless UI handles all of the ARIA attribute management, keyboard interactions, focus handling, and more for you, meaning all of the React and Vue examples provided in Tailwind UI are fully functional, with no need to write any of that complex JS stuff yourself. All of that gnarly complexity is safely tucked away in your <code>node_modules</code> folder where we can make improvements and fix bugs on your behalf, without you ever having to change your own code.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="fully-customizable"><a href="#fully-customizable" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Fully customizable</span></h2><p>With Headless UI, we’ve managed to abstract away all of the complicated JS functionality without taking away any control over the actual markup. That means that the entire design is still in entirely under your control.</p><pre class="language-jsx"><code class="language-jsx"><span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> useState <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&#x27;react&#x27;</span>
<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Switch</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&#x27;@headlessui/react&#x27;</span>

<span class="token keyword">function</span> <span class="token function">classNames</span><span class="token punctuation">(</span><span class="token parameter"><span class="token spread operator">...</span>classes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword control-flow">return</span> classes<span class="token punctuation">.</span><span class="token method function property-access">filter</span><span class="token punctuation">(</span><span class="token known-class-name class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">join</span><span class="token punctuation">(</span><span class="token string">&#x27; &#x27;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword module">export</span> <span class="token keyword module">default</span> <span class="token keyword">function</span> <span class="token function"><span class="token maybe-class-name">Example</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>enabled<span class="token punctuation">,</span> setEnabled<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>

  <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span>
      <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>enabled<span class="token punctuation">}</span></span>
      <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setEnabled<span class="token punctuation">}</span></span>
      <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span>
        enabled <span class="token operator">?</span> <span class="token string">&#x27;bg-indigo-600&#x27;</span> <span class="token operator">:</span> <span class="token string">&#x27;bg-gray-200&#x27;</span><span class="token punctuation">,</span>
        <span class="token string">&#x27;relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500&#x27;</span>
      <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sr-only<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Use setting</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>
        <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span>
          enabled <span class="token operator">?</span> <span class="token string">&#x27;translate-x-5&#x27;</span> <span class="token operator">:</span> <span class="token string">&#x27;translate-x-0&#x27;</span><span class="token punctuation">,</span>
          <span class="token string">&#x27;pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200&#x27;</span>
        <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Switch</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span></code></pre><p>You can copy a React or Vue example from Tailwind UI and change absolutely everything about it, from the border radius to the padding to the box shadows to the font-size, all by simply adding utility classes like you’re used to.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="get-started"><a href="#get-started" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Get started</span></h2><p>If you’re already a Tailwind UI customer, all of this stuff is available to you today as a totally free update. Just log in to your account, select between HTML, React, or Vue in the dropdown above any component, and grab the code in the format you want.</p><p>If you haven’t checked out Tailwind UI yet, browse the free preview components to get a feel for how it all works. It’s an awesome tool for moving fast on a new side-project idea, finding inspiration for a new feature you need to build at work, or learning how to implement a specific little UI trick with Tailwind, and a great way to support our work on open-source projects like Tailwind CSS, Headless UI, and Heroicons.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to check it out? <a href="https://tailwindui.com">Visit the Tailwind UI website →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/tailwind-ui-now-with-react-and-vue-support">Tailwind UI: Now with React + Vue support</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.3d80182964bf472d96562ebad7f76065.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Headless UI v1.0]]></title>
            <link>https://tailwindcss.com/blog/headless-ui-v1</link>
            <guid>Headless UI v1.0</guid>
            <pubDate>Wed, 14 Apr 2021 16:00:00 GMT</pubDate>
            <description><![CDATA[Last fall we announced Headless UI, a library of completely unstyled, fully accessible UI components, designed to pair perfectly with Tailwind CSS. Today we’re super excited to release Headless UI v1.0, which more than doubles the amount of included components for both React and Vue.]]></description>
            <content:encoded><![CDATA[<p>Last fall we announced <a href="https://blog.tailwindcss.com/headless-ui-unstyled-accessible-ui-components">Headless UI</a>, a library of completely unstyled, fully accessible UI components, designed to pair perfectly with Tailwind CSS.</p><p>Today we’re super excited to release <a href="https://headlessui.dev">Headless UI v1.0</a>, which more than doubles the amount of included components for both React and Vue.</p><a href="https://headlessui.dev"><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/card.e01b0ae06588538125e9e683d0ceed01.jpg" alt="Headless UI"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="what-s-new"><a href="#what-s-new" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>What’s new</span></h2><p>We’ve added four new components to the React library, and five new components for Vue.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="dialog-modal"><a href="#dialog-modal" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Dialog (modal)</span></h3><p>Headless UI now includes a robust dialog implementation you can use to build traditional modal dialogs, mobile slide-out menus, or any other take-over-style UI that needs to capture the focus of the entire page.</p><pre class="language-jsx"><code class="language-jsx"><span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> useState <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&#x27;react&#x27;</span>
<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Dialog</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&#x27;@headlessui/react&#x27;</span>

<span class="token keyword">function</span> <span class="token function"><span class="token maybe-class-name">MyDialog</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token punctuation">[</span>isOpen<span class="token punctuation">,</span> setIsOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>

  <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dialog</span></span> <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>isOpen<span class="token punctuation">}</span></span> <span class="token attr-name">onClose</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setIsOpen<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dialog.Overlay</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">

      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dialog.Title</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Deactivate account</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dialog.Title</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dialog.Description</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        This will permanently deactivate your account
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dialog.Description</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">

      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        Are you sure you want to deactivate your account? All of your data will
        be permanently removed. This action cannot be undone.
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">

      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token function">setIsOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Deactivate</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token function">setIsOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Cancel</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dialog</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span></code></pre><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="disclosure"><a href="#disclosure" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Disclosure</span></h3><p>We’ve added a new <code>Disclosure</code> component that makes it easy to show/hide inline content accessibly. This is useful for things like collapsible FAQ questions, “show more” interfaces, or even hamburger menus that open up and push the rest of the page content away.</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Disclosure</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DisclosureButton</span><span class="token punctuation">&gt;</span></span> Is team pricing available? <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DisclosureButton</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DisclosurePanel</span><span class="token punctuation">&gt;</span></span>
      Yes! You can purchase a license that you can share with your entire team.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DisclosurePanel</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Disclosure</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span>
    <span class="token maybe-class-name">Disclosure</span><span class="token punctuation">,</span>
    <span class="token maybe-class-name">DisclosureButton</span><span class="token punctuation">,</span>
    <span class="token maybe-class-name">DisclosurePanel</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&#x27;@headlessui/vue&#x27;</span>

  <span class="token keyword module">export</span> <span class="token keyword module">default</span> <span class="token punctuation">{</span>
    components<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Disclosure</span><span class="token punctuation">,</span> <span class="token maybe-class-name">DisclosureButton</span><span class="token punctuation">,</span> <span class="token maybe-class-name">DisclosurePanel</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="radio-group"><a href="#radio-group" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Radio Group</span></h3><p>There’s now a <code>RadioGroup</code> component that you can use to build totally custom radio button UIs, like when you want to use fancy cards or something instead of a simple little radio circle.</p><pre class="language-jsx"><code class="language-jsx"><span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> useState <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&#x27;react&#x27;</span>
<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">RadioGroup</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&#x27;@headlessui/react&#x27;</span>

<span class="token keyword">function</span> <span class="token function"><span class="token maybe-class-name">MyRadioGroup</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token punctuation">[</span>plan<span class="token punctuation">,</span> setPlan<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#x27;startup&#x27;</span><span class="token punctuation">)</span>

  <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">RadioGroup</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>plan<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setPlan<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">RadioGroup.Label</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Plan</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">RadioGroup.Label</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">RadioGroup.Option</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>startup<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> checked <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>checked <span class="token operator">?</span> <span class="token string">&#x27;bg-blue-200&#x27;</span> <span class="token operator">:</span> <span class="token string">&#x27;&#x27;</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Startup</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">RadioGroup.Option</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">RadioGroup.Option</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>business<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> checked <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>checked <span class="token operator">?</span> <span class="token string">&#x27;bg-blue-200&#x27;</span> <span class="token operator">:</span> <span class="token string">&#x27;&#x27;</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Business</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">RadioGroup.Option</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">RadioGroup.Option</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>enterprise<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> checked <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>checked <span class="token operator">?</span> <span class="token string">&#x27;bg-blue-200&#x27;</span> <span class="token operator">:</span> <span class="token string">&#x27;&#x27;</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Enterprise</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">RadioGroup.Option</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">RadioGroup</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span></code></pre><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="popover"><a href="#popover" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Popover</span></h3><p>The new <code>Popover</code> component lets you build custom dropdown UIs that don’t have any content restrictions like a regular <code>Menu</code> component would. Great for fly-out menus on marketing sites, dropdowns that have form fields in them, and tons more.</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Popover</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>relative<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PopoverButton</span><span class="token punctuation">&gt;</span></span>Solutions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PopoverButton</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PopoverPanel</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>absolute z-10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/analytics<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Analytics<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/engagement<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Engagement<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/security<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/integrations<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Integrations<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/solutions.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PopoverPanel</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Popover</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Popover</span><span class="token punctuation">,</span> <span class="token maybe-class-name">PopoverButton</span><span class="token punctuation">,</span> <span class="token maybe-class-name">PopoverPanel</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&#x27;@headlessui/vue&#x27;</span>

  <span class="token keyword module">export</span> <span class="token keyword module">default</span> <span class="token punctuation">{</span>
    components<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Popover</span><span class="token punctuation">,</span> <span class="token maybe-class-name">PopoverButton</span><span class="token punctuation">,</span> <span class="token maybe-class-name">PopoverPanel</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="transition-root-and-transition-child-for-vue"><a href="#transition-root-and-transition-child-for-vue" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>TransitionRoot and TransitionChild (for Vue)</span></h3><p>Headless UI already had a <code>Transition</code> component for React, but we’ve always recommended the native <code>&lt;transition&gt;</code> that already ships with Vue for Vue users. There are some limitations to the native transition though, and things can get complicated when trying to co-ordinate nested transitions that are supposed to run in parallel.</p><p>Headless UI v1.0 brings our React <code>Transition</code> component to Vue as well, which makes it a lot easier to transition things like modal dialogs.</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!—</span> <span class="token attr-name">This</span> <span class="token attr-name">`show`</span> <span class="token attr-name">prop</span> <span class="token attr-name">controls</span> <span class="token attr-name">all</span> <span class="token attr-name">nested</span> <span class="token attr-name">`Transition.Child`</span> <span class="token attr-name">components.</span> <span class="token attr-name">—</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TransitionRoot</span> <span class="token attr-name">:show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isOpen<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!—</span> <span class="token attr-name">Background</span> <span class="token attr-name">overlay</span> <span class="token attr-name">—</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TransitionChild</span>
      <span class="token attr-name">enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transition-opacity<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">ease-linear</span>
      <span class="token attr-name">duration-300&quot;</span>
      <span class="token attr-name">enter-from</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>opacity-0<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">enter-to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>opacity-100<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">leave</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transition-opacity<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">ease-linear</span>
      <span class="token attr-name">duration-300&quot;</span>
      <span class="token attr-name">leave-from</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>opacity-100<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">leave-to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>opacity-0<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!—</span> <span class="token attr-name">…</span> <span class="token attr-name">—</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TransitionChild</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!—</span> <span class="token attr-name">Sliding</span> <span class="token attr-name">sidebar</span> <span class="token attr-name">—</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TransitionChild</span>
      <span class="token attr-name">enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transition<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">ease-in-out</span>
      <span class="token attr-name">duration-300</span>
      <span class="token attr-name">transform&quot;</span>
      <span class="token attr-name">enter-from</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>-translate-x-full<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">enter-to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>translate-x-0<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">leave</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transition<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">ease-in-out</span>
      <span class="token attr-name">duration-300</span>
      <span class="token attr-name">transform&quot;</span>
      <span class="token attr-name">leave-from</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>translate-x-0<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">leave-to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>-translate-x-full<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!—</span> <span class="token attr-name">…</span> <span class="token attr-name">—</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TransitionChild</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TransitionRoot</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> ref <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Transition</span><span class="token punctuation">,</span> <span class="token maybe-class-name">TransitionChild</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&quot;@headlessui/vue&quot;</span><span class="token punctuation">;</span>

  <span class="token keyword module">export</span> <span class="token keyword module">default</span> <span class="token punctuation">{</span>
    components<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">TransitionRoot</span><span class="token operator">:</span> <span class="token maybe-class-name">Transition</span><span class="token punctuation">,</span> <span class="token maybe-class-name">TransitionChild</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> isShowing <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword control-flow">return</span> <span class="token punctuation">{</span>
        isShowing<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="try-it-out"><a href="#try-it-out" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Try it out</span></h2><p>Head over to our <a href="https://headlessui.dev">brand new documentation website</a> to pull Headless UI into your projects and play with it! It’s MIT licensed and open-source, so if you’d like to poke around the code or you need to report an issue, <a href="https://github.com/tailwindlabs/headlessui">visit the GitHub repository</a>.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to try it out? <a href="https://headlessui.dev">Visit the Headless UI website →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/headless-ui-v1">Headless UI v1.0</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.e01b0ae06588538125e9e683d0ceed01.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Tailwind CSS v2.1]]></title>
            <link>https://tailwindcss.com/blog/tailwindcss-2-1</link>
            <guid>Tailwind CSS v2.1</guid>
            <pubDate>Mon, 05 Apr 2021 19:00:00 GMT</pubDate>
            <description><![CDATA[We just released Tailwind CSS v2.1 which brings the new JIT engine to core, adds first-class CSS filter support, and more!]]></description>
            <content:encoded><![CDATA[<p>The first new feature update since Tailwind CSS v2.0 is here and loaded with lots of cool stuff! We’ve merged the new JIT engine to core, added first-class support for composable CSS filters, added blending mode utilities, and a bunch more.</p><p>Here are some of the highlights:</p><ul role="list"><li><a href="#jit-engine-in-core">JIT engine in core</a></li><li><a href="#new-filter-and-backdrop-filter-utilities">Composable CSS filters API</a></li><li><a href="#new-blending-mode-utilities">New blending mode utilities</a></li><li><a href="#new-isolation-utilities">New isolation utilities</a></li></ul><p>For the full details, <a href="https://github.com/tailwindlabs/tailwindcss/releases/tag/v2.1.0">check out the release notes</a> on GitHub.</p><hr/><a name="jit-engine-in-core"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="jit-engine-in-core"><a href="#jit-engine-in-core" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>JIT engine in core</span></h2><p>The <a href="https://blog.tailwindcss.com/just-in-time-the-next-generation-of-tailwind-css">brand-new JIT engine we announced in March</a> has now been merged into core, and is available as an opt-in feature using a new <code>mode</code> option in your <code>tailwind.config.js</code> file:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  mode<span class="token operator">:</span> <span class="token string">&#x27;jit&#x27;</span><span class="token punctuation">,</span>
  purge<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span></code></pre></div></div><p><strong>This feature is still in preview</strong> which means some details may change as we iron out the kinks, and it’s not subject to semantic versioning.</p><p>If you were using <code>@tailwindcss/jit</code> before, you can now migrate to Tailwind CSS v2.1 instead, as that’s where all new development on the engine will happen.</p><p>Read the <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time Mode documentation</a> to learn more.</p><a name="new-filter-and-backdrop-filter-utilities"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="composable-css-filters-api"><a href="#composable-css-filters-api" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Composable CSS filters API</span></h2><p>This is a huge one — we’ve finally added first-class support for CSS filters!</p><p>They work a lot like our <code>transform</code> utilities, where you use <code>filter</code> to enable filters, and combine it with utilities like <code>grayscale</code>, <code>blur-lg</code>, or <code>saturate-200</code> to compose filters on the fly.</p><p>Here’s what <code>filter</code> looks like:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filter blur-md grayscale invert ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>…and here’s what <code>backdrop-filter</code> looks like:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>backdrop-filter backdrop-blur backdrop-brightness-50 ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Check out the <a href="https://tailwindcss.com/docs/filter">filter</a> and <a href="https://tailwindcss.com/docs/backdrop-filter">backdrop-filter</a> to learn more. We’ll add a bunch of helpful visual examples there soon!</p><a name="new-blending-mode-utilities"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-blending-mode-utilities"><a href="#new-blending-mode-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New blending mode utilities</span></h2><p>We’ve added brand new utilities for <code>mix-blend-mode</code> and <code>background-blend-mode</code>:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mix-blend-multiply ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Check out <a href="https://tailwindcss.com/docs/mix-blend-mode">the documentation</a> to learn more.</p><a name="new-isolation-utilities"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-isolation-utilities"><a href="#new-isolation-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New isolation utilities</span></h2><p>We’ve added new <code>isolate</code> and <code>isolation-auto</code> utilities for working with the <code>isolation</code> property:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isolate ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>This can be really helpful for scoping blending mode features or z-index adjustments and is super powerful. Check out <a href="https://tailwindcss.com/docs/isolation">the documentation</a> to learn more.</p><p>I also highly recommend <a href="https://www.joshwcomeau.com/css/stacking-contexts/#airtight-abstractions-with-isolation">this great article by Josh Comeau</a> to see it in action.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="upgrading"><a href="#upgrading" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Upgrading</span></h2><p>Tailwind CSS v2.1 is an incremental upgrade with no breaking changes, so to upgrade you just need to run:</p><pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> tailwindcss@latest</code></pre><p>If you were previously using <code>@tailwindcss/jit</code>, you can now switch back to <code>tailwindcss</code> and update your PostCSS configuration accordingly.</p><p class="border-t border-gray-200 mt-8 pt-6">Ready to upgrade? <a href="https://npmjs.com/tailwindcss">Get it from npm →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/tailwindcss-2-1">Tailwind CSS v2.1</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.3bf3cbd50f2798709f66eeefbfdb1eaf.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Heroicons v1.0]]></title>
            <link>https://tailwindcss.com/blog/heroicons-v1</link>
            <guid>Heroicons v1.0</guid>
            <pubDate>Mon, 29 Mar 2021 19:00:00 GMT</pubDate>
            <description><![CDATA[Today we're releasing Heroicons v1.0, which includes over 450+ free icons in two styles, official React and Vue libraries, and Figma assets.]]></description>
            <content:encoded><![CDATA[<p>Just over a year ago we released the very first version of <a href="https://heroicons.com">Heroicons</a>, which is a set of beautiful UI icons we designed alongside Tailwind UI. Since then we’ve added tons of new icons, and designed and launched a dedicated web experience.</p><p>Today we’re excited to finally release Heroicons v1.0, which includes over 450+ free icons in two styles, official React and Vue libraries, and Figma assets.</p><a href="https://heroicons.com"><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/card.1ee7582416861756dc2312c8bd4b404f.jpg" alt="Heroicons"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="react-vue-libraries"><a href="#react-vue-libraries" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>React + Vue Libraries</span></h2><p>In addition to grabbing the icons you need directly from the website, you can now install our official React and Vue libraries for quick and easy access to each icon as a dedicated component.</p><p>Here’s what it looks like with React for example:</p><pre class="language-js"><code class="language-js"><span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">BeakerIcon</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&#x27;@heroicons/react/solid&#x27;</span>

<span class="token keyword">function</span> <span class="token function"><span class="token maybe-class-name">MyComponent</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token maybe-class-name">BeakerIcon</span> className<span class="token operator">=</span><span class="token string">&quot;h-5 w-5 text-blue-500&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token spread operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span></code></pre><p><a href="https://github.com/tailwindlabs/heroicons">Check out the documentation</a> on GitHub to learn more.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="figma-assets"><a href="#figma-assets" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Figma Assets</span></h2><p>We’ve also published an official <a href="https://www.figma.com/community/file/958423903283802665/heroicons">Heroicons Figma file</a> on our new Figma Community page!</p><p>It includes all the icons from Heroicons as individual Figma components so you can easily use them in your projects without having to manually import each SVG.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to start playing with it? <a href="https://heroicons.com">Visit the Heroicons website →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/heroicons-v1">Heroicons v1.0</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.1ee7582416861756dc2312c8bd4b404f.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Just-In-Time: The Next Generation of Tailwind CSS]]></title>
            <link>https://tailwindcss.com/blog/just-in-time-the-next-generation-of-tailwind-css</link>
            <guid>Just-In-Time: The Next Generation of Tailwind CSS</guid>
            <pubDate>Mon, 15 Mar 2021 16:30:00 GMT</pubDate>
            <description><![CDATA[One of the hardest constraints we've had to deal with as we've improved Tailwind CSS over the years is the generated file size in development. Today I'm super excited to share a new project that makes this constraint a thing of the past: a just-in-time compiler for Tailwind CSS.]]></description>
            <content:encoded><![CDATA[<p><em><strong>Update</strong>: As of Tailwind CSS v2.1, the new Just-in-Time engine is included right in Tailwind CSS itself, so you don’t need the <code>@tailwindcss/jit</code> package anymore. <a href="https://tailwindcss.com/docs/just-in-time-mode">Learn more in the documentation</a>.</em></p><p>One of the hardest constraints we’ve had to deal with as we’ve improved Tailwind CSS over the years is the generated file size in development. With enough customizations to your config file, the generated CSS can reach 10mb or more, and there’s only so much CSS that build tools and even the browser itself will comfortably tolerate.</p><p>For that reason, you’ve always had to be careful about expensive changes to your config file like adding too many extra breakpoints or enabling extra variants like <code>disabled</code> or <code>focus-visible</code>.</p><p>Today I’m super excited to share a new project we’ve been working on that makes these considerations a thing of the past: <a href="https://github.com/tailwindlabs/tailwindcss-jit"><strong>a just-in-time compiler for Tailwind CSS</strong></a>.</p><div class="aspect-w-16 aspect-h-9 my-12"><iframe src="https://www.youtube.com/embed/3O_3X7InOw8" frameBorder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p><a href="https://github.com/tailwindlabs/tailwindcss-jit"><strong>@tailwindcss/jit</strong></a> is a new experimental library that compiles all of your CSS <em>on-demand</em> as you author your template files, instead of generating your entire stylesheet up front.</p><p>This comes with a lot of advantages:</p><ul role="list"><li><strong>Lightning fast build times</strong>. Tailwind can take 3–8s to initially compile using our CLI, and upwards of 30–45s in webpack projects because webpack struggles with large CSS files. This library can compile even the biggest projects in about 800ms <em>(with incremental rebuilds as fast as 3ms)</em>, no matter what build tool you’re using.</li><li><strong>Every variant is enabled out of the box</strong>. Variants like <code>focus-visible</code>, <code>active</code>, <code>disabled</code>, and others are not normally enabled by default due to file-size considerations. Since this library generates styles on demand, you can use any variant you want, whenever you want. You can even stack them like <code>sm:hover:active:disabled:opacity-75</code>. Never configure your variants again.</li><li><strong>Generate arbitrary styles without writing custom CSS.</strong> Ever needed some ultra-specific value that wasn’t part of your design system, like <code>top: -113px</code> for a quirky background image? Since styles are generated on demand, you can just generate a utility for this as needed using square bracket notation like <code>top-[-113px]</code>. Works with variants too, like <code>md:top-[-113px]</code>.</li><li><strong>Your CSS is identical in development and production</strong>. Since styles are generated as they are needed, you don’t need to purge unused styles for production, which means you see the exact same CSS in all environments. Never worry about accidentally purging an important style in production again.</li><li><strong>Better browser performance in development</strong>. Since development builds are as small as production builds, the browser doesn’t have to parse and manage multiple megabytes of pre-generated CSS. In projects with heavily extended configurations this makes dev tools a lot more responsive.</li></ul><p>Try it today by installing <code>@tailwindcss/jit</code> and swapping it into your PostCSS configuration:</p><pre class="language-shell"><code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> -D @tailwindcss/jit tailwindcss postcss autoprefixer</code></pre><pre class="language-js"><code class="language-js"><span class="token comment">// postcss.config.js</span>
module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string">&#x27;@tailwindcss/jit&#x27;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    autoprefixer<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre><p>We’re shipping it as a separate library for now, but once we’ve worked out all the kinks we’re going to roll it right back into <code>tailwindcss</code> behind a configuration option, and we’re aiming to make it the default in Tailwind CSS v3.0 later this year.</p><p><a href="https://github.com/tailwindlabs/tailwindcss-jit">Learn more about the project on GitHub</a>, then install it, play with it, bend it, break it, and let us know what you think!</p><p class="border-t border-gray-200 mt-8 pt-6">Ready to try it out? <a href="https://github.com/tailwindlabs/tailwindcss-jit">Get started →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/just-in-time-the-next-generation-of-tailwind-css">Just-In-Time: The Next Generation of Tailwind CSS</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.3dc19a4ce4e44343cc3c96d09df63688.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Welcoming James McDonald to Tailwind Labs]]></title>
            <link>https://tailwindcss.com/blog/welcoming-james-mcdonald-to-tailwind-labs</link>
            <guid>Welcoming James McDonald to Tailwind Labs</guid>
            <pubDate>Mon, 08 Mar 2021 19:00:00 GMT</pubDate>
            <description><![CDATA[Many years ago I got a message from Steve that said something like: "Have I ever shared this guy's Dribbble profile with you before? Been following him forever, some of my absolute favorite work I've ever found." That person was James McDonald, and today we're totally over the moon to share that James is joining our team full-time.]]></description>
            <content:encoded><![CDATA[<p>Many years ago I got a message from <a href="https://twitter.com/steveschoger">Steve</a> that said something like:</p><blockquote><p>Have I ever shared this guy’s Dribbble profile with you before? Been following him forever, some of my absolute favorite work I’ve ever found.</p></blockquote><p>That person was <a href="https://dribbble.com/james">James McDonald</a>, and today we’re totally over the moon to share that James is joining our team full-time.</p><figure><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/james-work.a055924e70a426a2b8d9d2345d86e079.jpg" alt="Examples of James&#x27; previous work"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div><figcaption>Some of James&#x27; awesome work from his <a href="https://dribbble.com/james">Dribbble profile</a>.</figcaption></figure><p>James is an incredibly talented UI designer with an amazing eye for tiny details <em>(they call him <a href="https://dribbble.com/shots/3985645-Newsletter-Sign-Up">the shadow king</a>)</em> who is constantly pushing the industry forward and setting new trends while somehow never designing anything that feels trapped in a certain time period. He’s also a fantastic <a href="https://dribbble.com/shots/14568974-">icon designer</a>!</p><p>James has been a good friend of ours for a few years now, and we’ve worked with him on a few different projects over that time, including a bunch of awesome designs he put together for us for <a href="https://tailwindui.com/">Tailwind UI</a> when we wanted to add some fresh perspective last year.</p><figure><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/tailwindui-work.9cb3a04b64d14ba758dbebd1b25a7081.jpg" alt="Designs James created for Tailwind UI"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div><figcaption>Examples James designed for us for Tailwind UI.</figcaption></figure><p>We’ve been such huge fans of James’ work for so long that it’s honestly a dream come true to have the chance to work with him on what we’re doing with Tailwind CSS, Tailwind UI, Heroicons, and more.</p><p>Can’t wait to share some of the work we’ll be creating together in the months to come!</p><p class="border-t border-gray-200 mt-8 pt-6">Want to keep up with James&#x27; work? <a href="https://twitter.com/jamesm">Follow James on Twitter →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/welcoming-james-mcdonald-to-tailwind-labs">Welcoming James McDonald to Tailwind Labs</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.fc928f560e3f4a4e23ff895cbe15ee94.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA["Tailwind CSS: From Zero to Production" on YouTube]]></title>
            <link>https://tailwindcss.com/blog/tailwindcss-from-zero-to-production</link>
            <guid>"Tailwind CSS: From Zero to Production" on YouTube</guid>
            <pubDate>Tue, 16 Feb 2021 16:05:00 GMT</pubDate>
            <description><![CDATA[Today we're excited to release Tailwind CSS: From Zero to Production, a new screencast series that teaches you everything you need to know to go from zero to production with Tailwind CSS v2.0.]]></description>
            <content:encoded><![CDATA[<p>Today we’re excited to release <a href="https://www.youtube.com/watch?v=elgqxmdVms8&amp;list=PL5f_mz_zU5eXWYDXHUDOLBE0scnuJofO0&amp;index=1">Tailwind CSS: From Zero to Production</a>, a new screencast series that teaches you everything you need to know to get up and running with Tailwind CSS v2.0 from scratch.</p><div class="aspect-w-16 aspect-h-9"><iframe src="https://www.youtube.com/embed/elgqxmdVms8" frameBorder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p>It’s an eight-part series totaling 1.5 hours of content, and walks you through everything from the initial setup process, to building out a responsive design with utility classes, to customizing your design system, to optimizing for production with PurgeCSS.</p><ol role="list"><li><a href="https://www.youtube.com/watch?v=qYgogv4R8zg">Setting Up Tailwind CSS</a></li><li><a href="https://www.youtube.com/watch?v=UvF56fPGVt4">The Utility-First Workflow</a></li><li><a href="https://www.youtube.com/watch?v=hX1zUdj4Dw4">Responsive Design</a></li><li><a href="https://www.youtube.com/watch?v=5_BPDve5-3M">Hover, Focus and Other States</a></li><li><a href="https://www.youtube.com/watch?v=TrftauE2Vyk">Composing Utilities with @apply</a></li><li><a href="https://www.youtube.com/watch?v=v-mkUxhaFVA">Extracting Reusable Components</a></li><li><a href="https://www.youtube.com/watch?v=0l0Gx8gWPHk">Customizing Your Design System</a></li><li><a href="https://www.youtube.com/watch?v=HZn2LtBT59w">Optimizing for Production</a></li></ol><p>Watch the series <a href="https://www.youtube.com/watch?v=elgqxmdVms8&amp;list=PL5f_mz_zU5eXWYDXHUDOLBE0scnuJofO0&amp;index=1">on YouTube</a> and <a href="https://github.com/tailwindlabs/tailwindcss-from-zero-to-production">grab the source code</a> for each lesson on GitHub.</p><p class="border-t border-gray-200 mt-8 pt-6">What are you waiting for? <a href="https://www.youtube.com/watch?v=elgqxmdVms8&amp;list=PL5f_mz_zU5eXWYDXHUDOLBE0scnuJofO0&amp;index=1">Start watching →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/tailwindcss-from-zero-to-production">"Tailwind CSS: From Zero to Production" on YouTube</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.d78c50e58c2482c24371b32f1e663b4e.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Welcoming David Luhr to Tailwind Labs]]></title>
            <link>https://tailwindcss.com/blog/welcoming-david-luhr-to-tailwind-labs</link>
            <guid>Welcoming David Luhr to Tailwind Labs</guid>
            <pubDate>Mon, 01 Feb 2021 13:35:00 GMT</pubDate>
            <description><![CDATA[We started working with David Luhr last summer to help us develop a Figma version of Tailwind UI, as well as to leverage his accessibility expertise, ensuring we were following best practices and delivering markup that would work for everyone. Today we're excited to share that David has joined the team full-time!]]></description>
            <content:encoded><![CDATA[<p>We started working with <a href="https://twitter.com/david_luhr">David Luhr</a> last summer on a project-by-project basis to help us develop a Figma version of <a href="https://tailwindui.com">Tailwind UI</a> <em>(almost ready!)</em>, as well as to leverage his accessibility expertise when building Tailwind UI templates, ensuring we were following best practices and delivering markup that would work for everyone, no matter what tools they use to browse the web.</p><p>Today we’re excited to share that David has joined the team full-time!</p><figure><div class="aspect-w-16 aspect-h-9"><iframe src="https://www.youtube.com/embed/djg8WoRGrq0" frameBorder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><figcaption>Watch David build some Tailwind UI components in Figma live on his YouTube channel!</figcaption></figure><p>David is an accessibility expert, a world-class front-end developer, a gifted educator, and a compassionate leader. He’s performed black magic with Tailwind UI in Figma that Steve and I didn’t even know was possible, and he’s been doing an incredible job turning Steve’s Tailwind UI designs into pixel-perfect HTML and CSS that works for everyone.</p><p>Say what you will about HTML being easy to learn, it’s a bear to master. David knows things about the spec that I’ve never encountered in 20 years of building things for the web, and has so much built up knowledge from his own real-world device testing that it would take years of dedicated focus to even come close to writing markup as bullet-proof as what David produces by default.</p><p>As a company that specializes in helping developers build better interfaces faster, it’s our responsibility to make sure that the tools we build follow accessibility best practices by default, and we couldn’t be more grateful to have David on the team to help us live up to that responsibility.</p><p>One of my favorite problems David has helped me solve is developing the new <a href="https://tailwindcss.com/docs/ring-offset-width">ring utilities</a> in Tailwind CSS v2.0. When David first started auditing our work in Tailwind UI for accessibility improvements, he mentioned that some of our focus styles were not obvious enough. It turns out that just changing a button’s <em>color</em> for example isn’t good enough — it’s important that something <em>new</em> is drawn to the screen (like a focus ring) that is really easy for anyone to see.</p><p>Trying to come up with a way to solve this was hard. It needed to look good, needed to be straightforward to do with utility classes, and needed to be possible to actually implement in Tailwind internally. David suggested we study the interfaces of things like video games consoles or the Apple TV for inspiration since you can’t interact with them with a mouse, and that’s where we landed on trying to build some sort of customizable offset focus ring.</p><p>Coming up with an implementation for this was hard because it needed to be implemented with a box shadow, and we had to somehow make it composable with the existing box shadow API. There were many moments where I got frustrated and I might have even given up on it if I was working on it alone, but ultimately we figured it out and now it’s one of my favorite features in the framework.</p><p>David will be leading component and design asset development on Tailwind UI, and providing accessibility guidance on our other projects like Tailwind CSS and Headless UI. It’s been an amazing experience working with him over the last 6 months and we are so excited to have him on the team full-time.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to keep up with David&#x27;s work? <a href="https://twitter.com/david_luhr">Follow David on Twitter →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/welcoming-david-luhr-to-tailwind-labs">Welcoming David Luhr to Tailwind Labs</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.d5d71c7655495817f4de041b58b61db2.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Multi-line truncation with @tailwindcss/line-clamp]]></title>
            <link>https://tailwindcss.com/blog/multi-line-truncation-with-tailwindcss-line-clamp</link>
            <guid>Multi-line truncation with @tailwindcss/line-clamp</guid>
            <pubDate>Sun, 24 Jan 2021 20:00:00 GMT</pubDate>
            <description><![CDATA[A few weeks back we released @tailwindcss/line-clamp, an official Tailwind CSS plugin for truncating text to a specific number of lines.]]></description>
            <content:encoded><![CDATA[<p>Imagine you’re implementing a beautiful design you or someone on your team carefully crafted in Figma. You’ve nailed all the different layouts at each breakpoint, perfected the whitespace and typography, and the photography you’re using is really bringing the design to life.</p><p>It looks totally amazing — until you connect it your actual production content and realize that your beautiful grid of blog cards falls apart because, of course, <em>real</em> article excerpts aren’t all magically exactly three lines long, and now each card is a different height.</p><p>Sound familiar? If so, the line-clamp plugin is here to save your bacon.</p><p class="lead">A few weeks back we released <a href="https://github.com/tailwindlabs/tailwindcss-line-clamp"><code>@tailwindcss/line-clamp</code></a>, an official Tailwind CSS plugin for truncating text to a specific number of lines.</p><p>Imagine you’re implementing a beautiful design you or someone on your team carefully crafted in Figma. You’ve nailed all the different layouts at each breakpoint, perfected the whitespace and typography, and the photography you’re using is really bringing the design to life.</p><p>It looks totally amazing — until you connect it your actual production content and realize that your beautiful grid of blog cards falls apart because, of course, <em>real</em> article excerpts aren’t all magically exactly three lines long, and now each card is a different height.</p><p>Sound familiar? If so, the line-clamp plugin is here to save your bacon.</p><div class="relative" style="padding-bottom:56.25%"><iframe class="absolute inset-0 h-full w-full" src="https://www.youtube.com/embed/klh-jMTm5PU" frameBorder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p>First, install the plugin and add it to your <code>tailwind.config.js</code> file:</p><pre class="language-shell"><code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> @tailwindcss/line-clamp</code></pre><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;@tailwindcss/line-clamp&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>Then all you need to do is add a <code>line-clamp-{n}</code> utility to any block of text to automatically truncate to <em>n</em> lines with a trailing ellipsis:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>line-clamp-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  Here&#x27;s a block of text from a blog post that isn&#x27;t conveniently three lines long like you designed
  for originally. It&#x27;s probably like 6 lines on mobile or even on desktop depending on how you have
  things laid out. Truly a big pain in the derriere, and not the sort of thing you expected to be
  wasting your time trying to deal with at 4:45pm on a Friday am I right? You&#x27;ve got tickets to
  SmackDown and you heard there&#x27;s gonna be a dark match with that local guy from two towns over that
  your cousin went to high school with before the show starts, and you&#x27;re gonna miss it if you&#x27;re
  not there early.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></code></pre><p>For more details, <a href="https://github.com/tailwindlabs/tailwindcss-line-clamp/">check out the documentation</a> over on the GitHub repository.</p><p><em>(The post <a href="https://tailwindcss.com/blog/multi-line-truncation-with-tailwindcss-line-clamp">Multi-line truncation with @tailwindcss/line-clamp</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.ee84242c66e8ccfdc6033997edce3ab1.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Tailwind CSS v2.0]]></title>
            <link>https://tailwindcss.com/blog/tailwindcss-v2</link>
            <guid>Tailwind CSS v2.0</guid>
            <pubDate>Wed, 18 Nov 2020 17:45:00 GMT</pubDate>
            <description><![CDATA[Today we're finally releasing Tailwind CSS v2.0, including an all-new color palette, dark mode support, and tons more!]]></description>
            <content:encoded><![CDATA[<p>Almost exactly 18 months ago we released Tailwind CSS v1.0, which signalled a commitment to stability while continuing to push the boundaries with exciting new features in every minor release.</p><p>Over the course of those 18 months we released nine minor versions that added features like placeholder styling, screenreader visibility, CSS grid, transitions, transforms, animations, layout utilities, integrated tree-shaking, gradients, and tons more.</p><p>Today we’re finally releasing Tailwind CSS v2.0.</p><div class="relative" style="padding-bottom:56.25%"><iframe class="absolute inset-0 h-full w-full" src="https://www.youtube.com/embed/3u_vIdnJYLc" frameBorder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p>Tailwind CSS v2.0 is the first major update ever, including:</p><ul role="list"><li><a href="#all-new-color-palette"><strong>All-new color palette</strong></a>, featuring 220 total colors and a new workflow for building your own color schemes</li><li><a href="#dark-mode"><strong>Dark mode support</strong></a>, making it easier than ever to dynamically change your design when dark mode is enabled</li><li><a href="#extra-wide-2-xl-breakpoint"><strong>Extra wide 2XL breakpoint</strong></a>, for designing at 1536px and above</li><li><a href="#new-outline-ring-utilities"><strong>New outline ring utilities</strong></a>, which are almost as good as if they would just make <code>outline-radius</code> a real thing</li><li><a href="#utility-friendly-form-styles"><strong>Utility-friendly form styles</strong></a>, a new form reset that makes it easy to customize form elements (even checkboxes) with just utility classes</li><li><a href="#default-line-heights-per-font-size"><strong>Default line-heights per font-size</strong></a>, because if we can’t make using a 1.5 line-height with a 48px font illegal we should at least make it not the default</li><li><a href="#extended-spacing-typography-and-opacity-scales"><strong>Extended spacing, typography, and opacity scales</strong></a>, for fine-tuning things at the micro level, making an even bigger impact with huge headlines, and for when <code>opacity-25</code> wasn’t enough and <code>opacity-50</code> was too much</li><li><a href="#use-apply-with-anything"><strong>Use @apply with anything</strong></a>, including responsive, hover, focus, and other variants</li><li><a href="#new-text-overflow-utilities"><strong>New text overflow utilities</strong></a>, for controlling things more precisely than you can with <code>truncate</code> alone</li><li><a href="#extend-variants"><strong>Extend variants</strong></a>, so you can enable extra variants like <code>focus-visible</code> without redeclaring the entire list or thinking about order</li><li><a href="#group-hover-and-focus-within-by-default"><strong>Group-hover and focus-within by default</strong></a>, because you were enabling them on every project anyways</li><li><a href="#default-transition-duration-and-easing-curve"><strong>Default transition duration and easing curve</strong></a>, so you only have to add 17 classes to make a button instead of 19</li><li><a href="#incompatibility-with-ie11"><strong>Incompatibility with IE11</strong></a>, so you can tell the person in charge <em>“sorry boss it’s out of my hands, blame Tailwind”</em></li></ul><p>…and <a href="https://github.com/tailwindlabs/tailwindcss/blob/master/CHANGELOG.md">a bunch of other little things</a> too.</p><p>Even though Tailwind CSS v2.0 is a new major version, <strong>we’ve worked really hard to minimize significant breaking changes</strong>, especially ones that would force you to edit tons of your templates. We’ve renamed two classes, removed three that are no longer relevant in modern browsers, and replaced two with more powerful alternatives. Any other breaking changes that might impact you can be remedied with a couple small additions to your <code>tailwind.config.js</code> file. Upgrading shouldn’t take more than about 30 minutes.</p><p><a href="https://tailwindcss.com/docs/upgrading-to-v2">Check out the upgrade guide</a> for more details and step-by-step instructions on migrating your project to Tailwind CSS v2.0.</p><p>If you’d like to start a brand new project with v2.0, <a href="https://tailwindcss.com/docs/installation">head over to our updated installation documentation</a> to get started fast.</p><p>Also how about that <a href="https://tailwindcss.com">brand new website</a> eh? Hot damn.</p><hr/><h2 id="all-new-color-palette">All-new color palette</h2><p>We’ve learned a lot about color since the first time we tried to design a general purpose color palette back in the Tailwind CSS v0.1.0 days, and v2.0 represents our best attempt so far.</p><p>The new color palette includes 22 colors <em>(compared to 10 previously)</em> with 10 shades each <em>(instead of 9</em>) for a total of 220 values.</p><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/announcement-tailwind-colors.7ee10e0e986a5be237549f9cfc788c1a.jpg" alt="New Tailwind CSS color palette"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div><p>We’ve added an extra light <code>50</code> shade for every color, so they go from 50–900 now:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-gray-50<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>I can&#x27;t believe it&#x27;s not white.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>The palette even includes 5 different shades of gray now, so you can choose “blue gray” if you want something really cool, or go all the way to “warm gray” for something with a lot more brown in it.</p><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/announcement-tailwind-grays.14122ce0b02e7496fc7e47508abe4f54.jpg" alt="New Tailwind CSS alternate gray"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div><p>We configure a well-balanced 8-color palette for you out of the box, but the complete color palette lives in a new <code>tailwindcss/colors</code> module that you can import at the top of your config file to curate your own custom palette however you like:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;tailwindcss/colors&#x27;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    colors<span class="token operator">:</span> <span class="token punctuation">{</span>
      gray<span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">trueGray</span><span class="token punctuation">,</span>
      indigo<span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">indigo</span><span class="token punctuation">,</span>
      red<span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">rose</span><span class="token punctuation">,</span>
      yellow<span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">amber</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>Learn more in the new <a href="https://tailwindcss.com/docs/customizing-colors">customizing colors documentation</a>.</p><hr/><h2 id="dark-mode">Dark mode</h2><p>Ever since iOS added native dark mode all you dark mode nerds haven’t been able to leave me alone about adding it to Tailwind. Well you did it, it’s here, you win.</p><p>Open up your <code>tailwind.config.js</code> file and flip <code>darkMode</code> to <code>media</code>:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  darkMode<span class="token operator">:</span> <span class="token string">&#x27;media&#x27;</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span></code></pre></div></div><p>Boom — now just add <code>dark:</code> to the beginning of a class like <code>bg-black</code> and it’ll only take effect when dark mode is enabled:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-white dark:bg-black<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-gray-900 dark:text-white<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Dark mode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-gray-500 dark:text-gray-300<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    The feature you&#x27;ve all been waiting for.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Works with hover and stuff too:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-gray-900 hover:bg-gray-800 dark:bg-white dark:hover:bg-gray-50<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>And responsive stuff:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... lg:bg-white lg:dark:bg-black<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>And responsive hover stuff:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... lg:dark:bg-white lg:dark:hover:bg-gray-50<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>Check out the <a href="https://tailwindcss.com/docs/dark-mode">dark mode docs</a> for all the gory details.</p><hr/><h2 id="extra-wide-2-xl-breakpoint">Extra wide 2XL breakpoint</h2><p>I’m pretty sure they make an iPhone that is 1280px wide now, so it’s time to step it up.</p><p>We’ve added a new <code>2xl</code> breakpoint out-of-the-box that lets you target things at 1536px and above:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... 2xl:text-9xl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Godzilla<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></code></pre><p>Exciting I know but also let’s be serious <a href="https://tailwindcss.com/docs/responsive-design#customizing-breakpoints">you’ve been able to add this yourself</a> for like three years. Now it’s blessed though, I get it.</p><hr/><h2 id="new-outline-ring-utilities">New outline ring utilities</h2><p>You know how the <code>outline</code> property ignores border radius and pretty much just always looks bad? The <code>ring</code> utilities are our attempt to will a better solution into existence through blood, sweat, and tears.</p><p>They work a lot like the <code>border</code> utilities, except they add a solid box-shadow rather than a border so they don’t impact the layout:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... focus:outline-none focus:ring-2 focus:ring-blue-300 focus:ring-opacity-50<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>You can even offset them to create a sort of halo effect with <code>ring-offset-{width}</code> utilities:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-300 focus:ring-opacity-50<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>Using a bunch of CSS custom property voodoo we’ve even made them automatically combine with regular box-shadows, too:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>shadow-sm focus:ring-2 ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- Both the shadow and ring will render together --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>The <a href="https://tailwindcss.com/docs/ring-width">ring width documentation</a> is the best starting point for learning these new APIs. They seriously turned out so cool, more useful than you probably think.</p><hr/><h2 id="utility-friendly-form-styles">Utility-friendly form styles</h2><p>One thing I am constantly surprised by is how few people complain about how unbelievably useless form elements are out of the box with Tailwind. They literally look awful and you can’t do anything about it without writing custom CSS full of weird background-image SVG tricks and worrying about obscure edge cases that require CSS properties you’ve never heard of before like <code>color-adjust</code>.</p><p>I tried to solve this a while back with the <a href="https://github.com/tailwindlabs/tailwindcss-custom-forms">@tailwindcss/custom-forms</a> plugin, but something about adding a bunch of classes like <code>form-input</code> and <code>form-checkbox</code> just didn’t feel quite right so we didn’t really promote it and didn’t even link to it from the Tailwind documentation. This time though I think we figured it out.</p><p>Alongside Tailwind CSS v2.0, we’re releasing a brand new official plugin called <code>@tailwindcss/forms</code> that normalizes and resets all of the basic form controls across browsers to a state that is super easy to style with pure utility classes:</p><pre class="language-html"><code class="language-html"><span class="token comment">&lt;!-- This will be a nice rounded checkbox with an indigo focus ring and an indigo checked state --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>h-4 w-4 rounded border-gray-300 focus:border-indigo-300 focus:ring-2 focus:ring-indigo-200 focus:ring-opacity-50 text-indigo-500<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span></code></pre><p>It’s not included out of the box but you can add it to your <code>tailwind.config.js</code> file with a single line:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;@tailwindcss/forms&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>Check out <a href="https://github.com/tailwindlabs/tailwindcss-forms">the @tailwindcss/forms documentation</a> for more information.</p><hr/><h2 id="default-line-heights-per-font-size">Default line-heights per font-size</h2><p>Every font-size utility in Tailwind now comes paired with a sensible default line-height:</p><pre class="language-js"><code class="language-js"><span class="token comment">// Tailwind&#x27;s default theme</span>
module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    fontSize<span class="token operator">:</span> <span class="token punctuation">{</span>
      xs<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;0.75rem&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lineHeight<span class="token operator">:</span> <span class="token string">&#x27;1rem&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      sm<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;0.875rem&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lineHeight<span class="token operator">:</span> <span class="token string">&#x27;1.25rem&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      base<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;1rem&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lineHeight<span class="token operator">:</span> <span class="token string">&#x27;1.5rem&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      lg<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;1.125rem&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lineHeight<span class="token operator">:</span> <span class="token string">&#x27;1.75rem&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      xl<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;1.25rem&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lineHeight<span class="token operator">:</span> <span class="token string">&#x27;1.75rem&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;2xl&#x27;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;1.5rem&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lineHeight<span class="token operator">:</span> <span class="token string">&#x27;2rem&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;3xl&#x27;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;1.875rem&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lineHeight<span class="token operator">:</span> <span class="token string">&#x27;2.25rem&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;4xl&#x27;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;2.25rem&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lineHeight<span class="token operator">:</span> <span class="token string">&#x27;2.5rem&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;5xl&#x27;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;3rem&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lineHeight<span class="token operator">:</span> <span class="token string">&#x27;1&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;6xl&#x27;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;3.75rem&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lineHeight<span class="token operator">:</span> <span class="token string">&#x27;1&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;7xl&#x27;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;4.5rem&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lineHeight<span class="token operator">:</span> <span class="token string">&#x27;1&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;8xl&#x27;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;6rem&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lineHeight<span class="token operator">:</span> <span class="token string">&#x27;1&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;9xl&#x27;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;8rem&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lineHeight<span class="token operator">:</span> <span class="token string">&#x27;1&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre><p>So now when you add a utility like <code>text-xl</code>, the corresponding default line-height (<code>1.75rem</code> in this case) is added automatically:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-xl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>This will have a line-height of 1.75rem automatically.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></code></pre><p>If you want to override this, you can still do it by layering on a <code>leading</code> utility:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-3xl leading-normal<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Come on don&#x27;t do this to me.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></code></pre><p>Check out the <a href="https://tailwindcss.com/docs/font-size#providing-a-default-line-height">font size documentation</a> for some additional details.</p><hr/><h2 id="extended-spacing-typography-and-opacity-scales">Extended spacing, typography, and opacity scales</h2><p>We’ve extended the default spacing scale to include a bunch of micro values like <code>0.5</code>, <code>1.5</code>, <code>2.5</code>, and <code>3.5</code>:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ml-0.5<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Just a little nudge.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></code></pre><p>…as well as a bunch of new values at the top end as well like <code>72</code>, <code>80</code>, and <code>96</code>:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>p-96<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>This is too much padding.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>We’ve also extended the <code>inset</code> (that’s top/right/bottom/left for you dinosaurs) and <code>translate</code> plugins to include the full spacing scale, so now you can do things like this:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>top-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- .... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>We’ve extended the default typography scale with new <code>7xl</code>, <code>8xl</code>, and <code>9xl</code> values:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-9xl font-bold<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>What is this, an Apple website?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></code></pre><p>And we’ve also extended the default opacity scale with steps of 10, as well as 5 and 95 values:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figure</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>opacity-5<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>blockquote</span><span class="token punctuation">&gt;</span></span>You can&#x27;t see me.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>blockquote</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figcaption</span><span class="token punctuation">&gt;</span></span>John Cena<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figcaption</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figure</span><span class="token punctuation">&gt;</span></span></code></pre><p>Peruse the entire <a href="https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/defaultConfig.stub.js">default config file</a> to see exactly what’s available.</p><hr/><h2 id="use-apply-with-anything">Use @apply with anything</h2><p>By far the most common question I’ve gotten over the years is “why doesn’t <code>@apply hover:bg-black</code> work?”</p><p>And it’s a fair question, it’s stupid that it <del>doesn’t</del> didn’t work.</p><p>It took some serious engineering muscle but we figured it out — now you can <code>@apply</code> literally anything:</p><pre class="language-css"><code class="language-css"><span class="token selector"><span class="token class">.btn</span></span> <span class="token punctuation">{</span>
  <span class="token atrule atapply"><span class="token rule">@apply</span> bg-indigo-500 <span class="token property">hover</span><span class="token punctuation">:</span>bg-indigo-600 <span class="token property">focus</span><span class="token punctuation">:</span>ring-2 <span class="token property">focus</span><span class="token punctuation">:</span>ring-indigo-200 <span class="token property">focus</span><span class="token punctuation">:</span>ring-opacity-50<span class="token punctuation">;</span></span>
<span class="token punctuation">}</span></code></pre><p>Check out <a href="https://tailwindcss.com/docs/functions-and-directives#apply">the updated @apply documentation</a> to learn more.</p><hr/><h2 id="new-text-overflow-utilities">New text overflow utilities</h2><p>Up until v2.0, if you wanted to control overflowing text all we really gave you was the fairly heavy-handed <code>truncate</code> utility.</p><p>Now we’ve added dedicated <code>overflow-ellipsis</code> and <code>overflow-clip</code> utilities to control <em>just</em> the <code>text-overflow</code> property, in case you wanted to add ellipsis to overflowing text without restricting that text to one line.</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>overflow-ellipsis overflow-hidden<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  Look ma no whitespace-nowrap ipsum...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></code></pre><p>Check out the new <a href="https://tailwindcss.com/docs/text-overflow">text overflow documentation</a> to see it in action.</p><hr/><h2 id="extend-variants">Extend variants</h2><p>You know what sucks? Wanting to enable <code>focus-visible</code> for <code>backgroundColor</code> but having to list <em>every single default variant</em> just to add one extra one:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  variants<span class="token operator">:</span> <span class="token punctuation">{</span>
    backgroundColor<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;hover&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;focus&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;focus-visible&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>You know what’s better? Just adding the one you want to enable:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  variants<span class="token operator">:</span> <span class="token punctuation">{</span>
    extend<span class="token operator">:</span> <span class="token punctuation">{</span>
      backgroundColor<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;focus-visible&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p><a href="https://tailwindcss.com/docs/configuring-variants#enabling-extra-variants">Giddy up</a>.</p><hr/><h2 id="group-hover-and-focus-within-by-default">Group-hover and focus-within by default</h2><p>One of the things we learned working on <a href="https://tailwindui.com/components">Tailwind UI</a> is that <code>group-hover</code> and <code>focus-within</code> aren’t nice-to-haves, they’re must-haves.</p><p>Anywhere where we enabled hover or focus by default previously now has <code>group-hover</code> and <code>focus-within</code> enabled by default too:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>group ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>group-hover:text-blue-600 ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Da ba dee da ba daa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Check out <a href="https://tailwindcss.com/docs/configuring-variants#default-variants-reference">the default variants reference</a> for a full list of what’s enabled where in v2.0.</p><hr/><h2 id="default-transition-duration-and-easing-curve">Default transition duration and easing curve</h2><p>Until now, any time you wanted to add a transition in Tailwind you typically needed to add three classes:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... transition duration-150 ease-in-out<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Count them<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>In v2.0, we’ve made it possible to specify a default duration and timing function that is used automatically any time any <code>transitionProperty</code> utility is added:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    transitionDuration<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token constant">DEFAULT</span><span class="token operator">:</span> <span class="token string">&#x27;150ms&#x27;</span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    transitionTimingFunction<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token constant">DEFAULT</span><span class="token operator">:</span> <span class="token string">&#x27;cubic-bezier(0.4, 0, 0.2, 1)&#x27;</span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>So now you only need to write a single class if you have a common duration and timing function that you use really frequently:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... transition<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Count them again<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>Of course you can override this by layering on separate duration or timing function utilities:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... transition duration-300 ease-out<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>We&#x27;re back baby<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>Learn more about transitions in the <a href="https://tailwindcss.com/docs/transition-property">transition property documentation</a>.</p><hr/><h2 id="incompatibility-with-ie11">Incompatibility with IE11</h2><p>We’ve decided to unburden ourselves with caring about IE11 at all, which has allowed us to fully embrace CSS custom properties for <a href="https://adamwathan.me/composing-the-uncomposable-with-css-variables/">all sorts of crazy stuff</a> and is what makes things like the new <code>ring</code> utilities even possible.</p><p>Dropping IE11 support means smaller builds even when using PurgeCSS, because we don’t have to ship any CSS variable fallbacks which adds up more than you’d expect.</p><p>Cheers to Bootstrap for having the cojones to <a href="https://github.com/twbs/bootstrap/pull/30377">do this first</a> — I don’t think we would have been so bold if they hadn’t decided to pave the way.</p><p>The good news is that if you need to support IE11, you can always use Tailwind CSS v1.9 which is still an amazingly productive framework.</p><hr/><p>So there you have it folks, that’s Tailwind CSS v2.0 in a <em>(pretty big)</em> nutshell!</p><p>What are you waiting for? <a href="https://tailwindcss.com">Go build something awesome</a>.</p><p><em>(The post <a href="https://tailwindcss.com/blog/tailwindcss-v2">Tailwind CSS v2.0</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.85c0ff9e455da585949ff0aa50981857.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Tailwind CSS v1.9.0]]></title>
            <link>https://tailwindcss.com/blog/tailwindcss-1-9</link>
            <guid>Tailwind CSS v1.9.0</guid>
            <pubDate>Tue, 13 Oct 2020 18:30:00 GMT</pubDate>
            <description><![CDATA[We just released Tailwind CSS v1.9 which adds support for configuration presets, useful new CSS grid utilities, extended border radius, rotate, and skew scales, helpful accessibility improvements, and more!]]></description>
            <content:encoded><![CDATA[<p>We just released Tailwind CSS v1.9 which adds support for configuration presets, useful new CSS grid utilities, extended border radius, rotate, and skew scales, helpful accessibility improvements, and more!</p><p>Let’s dig in to the highlights…</p><ul role="list"><li><a href="#configuration-presets">Configuration presets</a></li><li><a href="#utilities-for-grid-auto-columns-and-grid-auto-rows">Utilities for <code>grid-auto-columns</code> and <code>grid-auto-rows</code></a></li><li><a href="#focus-indicator-improvements-and-configurable-outlines">Focus indicator improvements and configurable outlines</a></li><li><a href="#extended-border-radius-rotate-and-skew-scales">Extended border radius, rotate, and skew scales</a></li><li><a href="#upgrading">Upgrading to v1.9</a></li></ul><p>For the complete summary of changes <a href="https://github.com/tailwindlabs/tailwindcss/releases/tag/v1.9.0">check out the release notes on GitHub</a>.</p><hr/><h2 id="configuration-presets">Configuration presets</h2><p>Tailwind CSS v1.9 adds a new <code>presets</code> key to the <code>tailwind.config.js</code> file that makes it possible to configure a custom “base configuration” for your projects.</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;@my-company/tailwind-base&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    extend<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// Project specific overrides...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>Whatever you provide under <code>presets</code> <em>replaces</em> the default Tailwind base configuration, so you can define your own totally custom starting point. This is really helpful if you’re part of a team that works on multiple different Tailwind projects that all need to share the same brand colors, font customizations, or spacing scale.</p><p>You can even list multiple presets, which are merged together from top to bottom:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  presets<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;@my-company/tailwind-base&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;@my-company/tailwind-marketing&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    extend<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// Project specific overrides...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>The logic to merge your project-specific configuration with your custom base configuration is exactly the same as how things work with the default configuration, so all of the features you’re used to like <code>extend</code> still work exactly the way you’d expect.</p><hr/><h2 id="utilities-for-grid-auto-columns-and-grid-auto-rows">Utilities for grid-auto-columns and grid-auto-rows</h2><p>We’ve added new <code>gridAutoColumns</code> and <code>gridAutoRows</code> core plugins that add new utilities for the <code>grid-auto-columns</code> and <code>grid-auto-rows</code> CSS properties respectively.</p><p>These utilities let you control the size of implicitly-created grid columns and rows. Use them to set a default column/row size whenever you don’t specify a number of columns/rows for your grid.</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid grid-flow-col auto-cols-max<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Here’s a list of the new utilities that are included out of the box:</p><table><thead><tr><th>Class</th><th>CSS</th></tr></thead><tbody><tr><td><code>auto-cols-auto</code></td><td><code>grid-auto-columns: auto;</code></td></tr><tr><td><code>auto-cols-min</code></td><td><code>grid-auto-columns: min-content;</code></td></tr><tr><td><code>auto-cols-max</code></td><td><code>grid-auto-columns: max-content;</code></td></tr><tr><td><code>auto-cols-fr</code></td><td><code>grid-auto-columns: minmax(0, 1fr);</code></td></tr><tr><td><code>auto-rows-auto</code></td><td><code>grid-auto-rows: auto;</code></td></tr><tr><td><code>auto-rows-min</code></td><td><code>grid-auto-rows: min-content;</code></td></tr><tr><td><code>auto-rows-max</code></td><td><code>grid-auto-rows: max-content;</code></td></tr><tr><td><code>auto-rows-fr</code></td><td><code>grid-auto-rows: minmax(0, 1fr);</code></td></tr></tbody></table><p>We include <code>responsive</code> variants for these utilities by default, and they can be configured just like you’d expect under the <code>gridAutoColumns</code> and <code>gridAutoRows</code> sections of your <code>tailwind.config.js</code> file.</p><hr/><h2 id="focus-indicator-improvements-and-configurable-outlines">Focus indicator improvements and configurable outlines</h2><p>We’ve updated the <code>outline-none</code> class to render a <em>transparent</em> outline by default instead of rendering <em>no</em> outline. This is really helpful for people who use <a href="https://blogs.windows.com/msedgedev/2020/09/17/styling-for-windows-high-contrast-with-new-standards-for-forced-colors/">Windows high contrast mode</a>, where custom box-shadow-based focus styles are completely invisible.</p><p>Now you can create custom focus styles using box shadows <em>safely</em>, without making your sites difficult to use for people with low vision.</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... focus:outline-none focus:shadow-outline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>We’ve also added two new outline styles: <code>outline-white</code> and <code>outline-black</code>.</p><p>These utilities render a 2px dotted outline in their respective color, with a 2px offset. They work great as general purpose unobtrusive focus indicators that make it easy for keyboard users to see which element on the screen is selected, without clashing too much with your design.</p><p>We’ve included both <code>white</code> and <code>black</code> variations so you can always be sure to have an option available that has sufficient contrast against whatever background color you’re using.</p><pre class="language-html"><code class="language-html"><span class="token comment">&lt;!-- Use `outline-white` on dark backgrounds --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-gray-900<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... focus:outline-white<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- ... --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- Use `outline-black` on light backgrounds --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-white<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... focus:outline-black<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- ... --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Of course, you’re also free to create whatever custom focus styles you like using background colors, box shadows, borders, whatever. These are great if you don’t want to get too fancy though.</p><p>We’ve made the <code>outline</code> property configurable as well, so you can now define custom outlines in your <code>tailwind.config.js</code> file:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    extend<span class="token operator">:</span> <span class="token punctuation">{</span>
      outline<span class="token operator">:</span> <span class="token punctuation">{</span>
        blue<span class="token operator">:</span> <span class="token string">&#x27;2px solid #0000ff&#x27;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>You can also provide an <code>outline-offset</code> value for any custom outline utilities using a tuple of the form <code>[outline, outlineOffset]</code>:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    extend<span class="token operator">:</span> <span class="token punctuation">{</span>
      outline<span class="token operator">:</span> <span class="token punctuation">{</span>
        blue<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;2px solid #0000ff&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;1px&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><hr/><h2 id="extended-border-radius-rotate-and-skew-scales">Extended border radius, rotate, and skew scales</h2><p>We’ve added three new border radius utilities by default:</p><table><thead><tr><th>Class</th><th>Value</th></tr></thead><tbody><tr><td><code>rounded-xl</code></td><td><code>0.75rem</code> <em>(12px)</em></td></tr><tr><td><code>rounded-2xl</code></td><td><code>1rem</code> <em>(16px)</em></td></tr><tr><td><code>rounded-3xl</code></td><td><code>1.5rem</code><em>(24px)</em></td></tr></tbody></table><p>…and an extended set of smaller values for both the <code>rotate</code> and <code>skew</code> utilities:</p><table><thead><tr><th>Class</th><th>Value</th></tr></thead><tbody><tr><td><code>rotate-1</code></td><td><code>1deg</code></td></tr><tr><td><code>rotate-2</code></td><td><code>2deg</code></td></tr><tr><td><code>rotate-3</code></td><td><code>3deg</code></td></tr><tr><td><code>rotate-6</code></td><td><code>6deg</code></td></tr><tr><td><code>rotate-12</code></td><td><code>12deg</code></td></tr><tr><td><code>skew-1</code></td><td><code>1deg</code></td></tr><tr><td><code>skew-2</code></td><td><code>2deg</code></td></tr></tbody></table><p>Negative versions are included for all of these as well. Super handy for more subtle rotate and skew effects!</p><hr/><h2 id="upgrading">Upgrading</h2><p>Tailwind CSS v1.9 is a non-breaking minor release, so to upgrade all you need to do is run:</p><pre class="language-bash"><code class="language-bash"><span class="token comment"># npm</span>
<span class="token function">npm</span> <span class="token function">install</span> tailwindcss@^1.9

<span class="token comment"># yarn</span>
<span class="token function">yarn</span> <span class="token function">add</span> tailwindcss@^1.9</code></pre><p>We have promoted two previously experimental features (<code>defaultLineHeights</code> and <code>standardFontWeights</code>) to <code>future</code>, so we also recommend <a href="https://tailwindcss.com/docs/upcoming-changes#default-line-heights-for-font-size-utilities">opting-in to those changes now</a> to simplify the upgrade to Tailwind CSS v2.0 later this fall.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2552">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/tailwindcss-1-9">Tailwind CSS v1.9.0</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.ed7b73cc8739ab2abd600c22f712a1e5.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Introducing Tailwind Play]]></title>
            <link>https://tailwindcss.com/blog/introducing-tailwind-play</link>
            <guid>Introducing Tailwind Play</guid>
            <pubDate>Wed, 07 Oct 2020 13:00:00 GMT</pubDate>
            <description><![CDATA[Tailwind Play is an advanced online playground for Tailwind CSS that lets you use all of Tailwind's build-time features directly in the browser.]]></description>
            <content:encoded><![CDATA[<p>To get the most out of Tailwind, you need a build step. It’s the only way to be able to customize your <a href="https://tailwindcss.com/docs/configuration"><code>tailwind.config.js</code></a> file, extract components with <a href="https://tailwindcss.com/docs/functions-and-directives#apply"><code>@apply</code></a>, or include <a href="https://tailwindcss.com/docs/plugins">plugins</a>.</p><p>This isn’t a problem if you’ve already bought in to the framework, but if you’re just trying to kick the tires for the first time it’s a lot of friction. You either have to set up a local development environment with PostCSS support, or stick to the static CDN build, which means you lose out on lots of cool features.</p><p>So today we’re excited to release the first version of <a href="https://play.tailwindcss.com"><strong>Tailwind Play</strong></a>, an advanced online playground for Tailwind CSS that lets you use all of Tailwind’s build-time features directly in the browser.</p><div class="my-8 aspect-w-16 aspect-h-9"><iframe src="https://www.youtube.com/embed/eCWhTZ34Hck" frameBorder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p>It includes support for all of Tailwind’s coolest features, plus tons of stuff that’s even better in Tailwind Play than it is in your editor, like:</p><ul role="list"><li>Customizing your Tailwind theme</li><li>Enabling special variants, like <code>group-hover</code> or <code>focus-within</code></li><li>Using custom directives in your CSS like <code>@apply</code>, <code>@variants</code>, and <code>@responsive</code></li><li>Adding plugins like <code>@tailwindcss/typography</code></li><li>Intelligent code completion and linting</li><li>Responsive design mode</li><li>One-click sharing</li></ul><p>The code completion even updates the rendered preview in <em>real-time</em>, which creates an incredible design workflow in the browser — just navigate through different padding utilities with the arrow keys for example to find the perfect value without ever saving the file or even hitting enter!</p><p>Our responsive design mode that lets you fine-tune the viewport while you’re working on your design, just like you can in Chrome DevTools. You can even drag the viewport beyond the available space, and the preview area will automatically zoom out, letting you design for larger screens even when you have limited space.</p><p>One-click sharing really is just that — you don’t even need to create an account. Click “Share” and you’ve immediately got a link to a snapshot of what you’re working on that you can share online.</p><p><strong>Check it out at <a href="https://play.tailwindcss.com">play.tailwindcss.com</a></strong> and let us know what you think!</p><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2511">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/introducing-tailwind-play">Introducing Tailwind Play</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.eca2e0b364c20a23b42f6bb247f17149.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Headless UI: Unstyled, Accessible UI Components]]></title>
            <link>https://tailwindcss.com/blog/headless-ui-unstyled-accessible-ui-components</link>
            <guid>Headless UI: Unstyled, Accessible UI Components</guid>
            <pubDate>Tue, 06 Oct 2020 18:30:00 GMT</pubDate>
            <description><![CDATA[Headless UI is a set of completely unstyled, fully accessible UI components for React, Vue, and Alpine.js that make it easy to build fully accessible custom UI components, without sacrificing the ability to style them from scratch with simple utility classes.]]></description>
            <content:encoded><![CDATA[<p>One of the biggest pain points when building modern web applications is building custom components like select menus, dropdowns, toggles, modals, tabs, radio groups — components that are pretty similar from project to project, but never quite the <em>same</em>.</p><p>You could use an off-the-shelf package, but they usually come tightly coupled with their own provided styles. It ends up being very hard to get them to match the look and feel of your own project, and almost always involves writing a bunch of CSS overrides, which feels like a big step backwards when working Tailwind CSS.</p><p>The other option is building your own components from scratch. At first it seems easy, but then you remember you need to add support for keyboard navigation, managing ARIA attributes, focus trapping, and all of a sudden you’re spending 3-4 weeks trying to build a truly bullet-proof dropdown menu.</p><p>We think there’s a better option, so we’re building it.</p><p><strong><a href="https://headlessui.dev">Headless UI</a> is a set of completely unstyled, fully accessible UI components for React and Vue</strong> <em>(and soon Alpine.js)</em> that make it easy to build these sorts of custom components without worrying about any of the complex implementation details yourself, and without sacrificing the ability to style them from scratch with simple utility classes.</p><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/headless-ui-card.e1f4b8e7c89e80bbec1a464757c1f287.svg" alt="Headless UI Logo"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div><p>Here’s what it looks like to build a custom dropdown <em>(one of many components the library includes)</em> using <code>@headlessui/react</code>, with complete keyboard navigation support and ARIA attribute management, styled with simple Tailwind CSS utilities:</p><pre class="language-jsx"><code class="language-jsx"><span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Menu</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&#x27;@headlessui/react&#x27;</span>

<span class="token keyword">function</span> <span class="token function"><span class="token maybe-class-name">MyDropdown</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu</span></span> <span class="token attr-name">as</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div<span class="token punctuation">&quot;</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>relative<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu.Button</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>px-4 py-2 rounded bg-blue-600 text-white ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Options</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Menu.Button</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu.Items</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>absolute mt-1 right-0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu.Item</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> active <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token punctuation">(</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>active <span class="token operator">&amp;&amp;</span> <span class="token string">&#x27;bg-blue-500 text-white&#x27;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> ...</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/account-settings<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
              Account settings
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
          <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Menu.Item</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu.Item</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> active <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token punctuation">(</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>active <span class="token operator">&amp;&amp;</span> <span class="token string">&#x27;bg-blue-500 text-white&#x27;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> ...</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/documentation<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
              Documentation
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
          <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Menu.Item</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu.Item</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>opacity-75 ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Invite a friend (coming soon!)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Menu.Item</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Menu.Items</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Menu</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span></code></pre><p>Here’s what you’re getting for free in that example, without having to write a single line of code related to it yourself:</p><ul role="list"><li>The dropdown panel opens on click, spacebar, enter, or when using the arrow keys</li><li>The dropdown closes when you press escape, or click outside of it</li><li>You can navigate the items using the up and down arrow keys</li><li>You can jump the first item using the <code>Home</code> key, and the last item using the <code>End</code> key</li><li>Disabled items are automatically skipped when navigating with the keyboard</li><li>Hovering over an item with your mouse after navigating with the keyboard will switch to mouse position based focusing</li><li>Items are announced properly to screen readers while navigating them with the keyboard</li><li>The dropdown button is properly announced to screenreaders as controlling a menu</li><li>…and probably tons more that I’m forgetting.</li></ul><p>All without writing the letters <code>aria</code> anywhere in your own code, and without writing a single event listener. And you still have complete control over the design!</p><p>There are <a href="https://github.com/tailwindlabs/headlessui/blob/c7b91dc7315b1f49c1a469f70eb1f6eba6a2e31c/packages/%40headlessui-react/src/components/menu/menu.test.tsx">over 3000 lines of tests for this component</a>. Pretty nice that you didn’t have to do that yourself, right?</p><p>Here’s a fully-styled live demo <em>(taken from <a href="https://tailwindui.com">Tailwind UI</a>)</em> so you can see it in action:</p><iframe src="https://codesandbox.io/embed/headlessuireact-menu-example-b6xje?fontsize=14&amp;hidenavigation=1&amp;module=%2Fsrc%2FApp.js&amp;theme=dark" class="w-full border-0 rounded overflow-hidden" style="height:480px" title="@headlessui/react Menu Example" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><p>Make sure to try it with the keyboard or a screen reader to really appreciate it!</p><p>We just tagged v0.2.0, which currently includes the following components:</p><ul role="list"><li><a href="https://codesandbox.io/s/headlessuivue-menu-example-70br3?file=/src/App.vue">Menu Button</a> (or dropdown)</li><li><a href="https://codesandbox.io/s/headlessuivue-listbox-example-mi67g?file=/src/App.vue">Listbox</a> (or custom select)</li><li><a href="https://codesandbox.io/s/headlessuivue-switch-example-8ycp6?file=/src/App.vue">Switch</a> (or toggle)</li><li>…with many more on the way.</li></ul><p>To learn more and dive in, <a href="https://headlessui.dev"><strong>head over to the Headless UI website</strong></a> and read the documentation.</p><hr/><p>If you’ve followed my work online for the last few years, you might remember my fascination with <a href="https://adamwathan.me/renderless-components-in-vuejs/">renderless UI components</a> — something I was really started getting into towards the <a href="https://fullstackradio.com/79">end of 2017</a>. I’ve wanted a library like this to exist for years, but until we started growing the team we just didn’t have the resources to make it happen.</p><p>Earlier this year <a href="https://blog.tailwindcss.com/from-900-to-1-how-we-hired-robin-malfait">we hired Robin Malfait</a>, and he’s been working on Headless UI full-time ever since.</p><p>The biggest motivation for this project is that we’d really like to add production-ready JS examples to <a href="https://tailwindui.com">Tailwind UI</a>, which is currently an HTML-only, bring-your-own-JavaScript sort of project. This is great for lots of our customers who want full control over how everything works, but for many others it’s a point of friction.</p><p>We didn’t want to add 200 lines of gnarly JS to every component example, so we started working on Headless UI as a way to <em>extract</em> all of that noise, without giving up any flexibility in the actual UI design.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="why-reinvent-the-wheel"><a href="#why-reinvent-the-wheel" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Why reinvent the wheel?</span></h2><p>We’re not the first people to try and tackle this problem. <a href="https://github.com/downshift-js/downshift">Downshift</a> was the first library I saw that got me excited about this idea back in 2017, <a href="https://reach.tech/">Reach UI</a> and <a href="https://reakit.io/">Reakit</a> started development in 2018, and <a href="https://react-spectrum.adobe.com/react-aria/getting-started.html">React Aria</a> was released most recently, just earlier this year.</p><p>We decided to try our own take on the problem for a few reasons:</p><ul role="list"><li>Existing solutions are focused almost entirely on React, and we’d like to bring these ideas to other ecosystems like Vue, Alpine, and hopefully more in the future.</li><li>These libraries are going to be foundational for adding JS support to Tailwind UI, and since that’s what keeps the business running it felt important to have complete decision-making power over how the libraries worked and what they supported.</li><li>We have our own ideas on what the APIs should look like for these components, and want to be able to explore those ideas freely.</li><li>We want to make sure it is always super easy to style these components with Tailwind, rather than having to write custom CSS.</li></ul><p>We think what we’ve come up with so far hits a great balance between flexibility and developer experience, and we’re grateful there are other people working on similar problems that we can learn from and share our ideas with.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="what-s-next"><a href="#what-s-next" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>What&#x27;s next</span></h2><p>We’ve got quite a few more components to develop for Headless UI, including:</p><ul role="list"><li>Modal</li><li>Radio group</li><li>Tabs</li><li>Accordion</li><li>Combobox</li><li>Datepicker</li></ul><p>…and likely many more. We’re also about to start on Alpine.js support, and we’re hoping to be able to tag a v1.0 for React, Vue, and Alpine near the end of the year.</p><p>After that we’ll start exploring other frameworks, with the hope that we can eventually offer the same tools for ecosystems like Svelte, Angular, and Ember, either first-class or with community partners.</p><p>If you’d like to keep up with what we’re doing, be sure to <a href="https://github.com/tailwindlabs/headlessui">follow the project on GitHub</a>.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2508">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/headless-ui-unstyled-accessible-ui-components">Headless UI: Unstyled, Accessible UI Components</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.3e0b1ed1aac3c1db62a0a1e7023d250b.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA["What's new in Tailwind CSS?" on YouTube]]></title>
            <link>https://tailwindcss.com/blog/whats-new-in-tailwindcss-on-youtube</link>
            <guid>"What's new in Tailwind CSS?" on YouTube</guid>
            <pubDate>Wed, 23 Sep 2020 18:30:00 GMT</pubDate>
            <description><![CDATA[A lot of cool stuff has been added to Tailwind since the last time we published any screencasts, so we thought it would be a great idea to record a little series that covers all of the new additions.]]></description>
            <content:encoded><![CDATA[<p>A lot of cool stuff has been added to Tailwind since the last time we published any screencasts, so we thought it would be a great idea to record a little series that covers all of the new additions.</p><p><a href="https://www.youtube.com/watch?v=b-hrxkgkG-s&amp;list=PL5f_mz_zU5eV0_7udNKr3qffGCkJ4Avb_">“What’s new in Tailwind CSS?”</a> is a series of 12 short videos that teach you everything you need to know about some of our favorite new Tailwind features.</p><p>A lot of cool stuff has been added to Tailwind since the last time we published any screencasts, so we thought it would be a great idea to record a little series that covers all of the new additions.</p><div class="aspect-w-16 aspect-h-9"><iframe src="https://www.youtube.com/embed/b-hrxkgkG-s?list=PL5f_mz_zU5eV0_7udNKr3qffGCkJ4Avb_" frameBorder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p><a href="https://www.youtube.com/watch?v=b-hrxkgkG-s&amp;list=PL5f_mz_zU5eV0_7udNKr3qffGCkJ4Avb_">“What’s new in Tailwind CSS?”</a> is a series of 12 short videos that teach you everything you need to know about some of our favorite new Tailwind features, including:</p><ul role="list"><li><a href="https://youtu.be/b-hrxkgkG-s">CSS Grid</a></li><li><a href="https://youtu.be/AYoQfPX31Mg">Transitions</a></li><li><a href="https://youtu.be/fZl6ufxmAqI">Transforms</a></li><li><a href="https://youtu.be/wTRTC4JNSGs">Space-between utilities</a></li><li><a href="https://youtu.be/XVmbVtO3tUU">Divide utilities</a></li><li><a href="https://youtu.be/Zo1JtXnLDdA">Color opacity</a></li><li><a href="https://youtu.be/ZNLeQDpE_8M">Built-in PurgeCSS support</a></li><li><a href="https://youtu.be/75_a2lTJSjA">Animations</a></li><li><a href="https://youtu.be/vnK7UrZ-IFs">Reduced motion variants</a></li><li><a href="https://youtu.be/1Rs5Kml8qMM">Gradients</a></li><li><a href="https://youtu.be/naJ_rIK6ppQ">Using <code>@apply</code> with complex classes</a></li></ul><p>…with more to come soon! You can check out the whole series on our brand new <a href="https://www.youtube.com/channel/UCOe-8z68tgw9ioqVvYM4ddQ/">YouTube channel</a>.</p><p>And don’t forget to like and subscribe.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2441">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/whats-new-in-tailwindcss-on-youtube">"What's new in Tailwind CSS?" on YouTube</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.f2c91b0dee58592af7f454c3512e25b7.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Tailwind CSS v1.8.0]]></title>
            <link>https://tailwindcss.com/blog/tailwindcss-1-8</link>
            <guid>Tailwind CSS v1.8.0</guid>
            <pubDate>Fri, 04 Sep 2020 20:15:00 GMT</pubDate>
            <description><![CDATA[Tailwind CSS v1.8.0 is now available, with font-variant-numeric support, experimental dark mode, and more!]]></description>
            <content:encoded><![CDATA[<p>Tailwind CSS v1.8 is now available with a handful of new utilities, a couple new features, and an exciting new experiment!</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-features"><a href="#new-features" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New features</span></h2><ul role="list"><li>New <code>font-variant-numeric</code> utilities (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2305">#2305</a>)</li><li>New <code>place-items</code>, <code>place-content</code>, <code>place-self</code>, <code>justify-items</code>, and <code>justify-self</code> utilities (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2306">#2306</a>)</li><li>New <code>preserveHtmlElements</code> option for <code>purge</code> (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2283">#2283</a>)</li><li>New <code>layers</code> mode for <code>purge</code> (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2288">#2288</a>)</li><li>Support configuring variants as functions (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2309">#2309</a>)</li><li>Dark mode variant (experimental) (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2279">#2279</a>)</li></ul><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="changes"><a href="#changes" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Changes</span></h2><ul role="list"><li>CSS within <code>@layer</code> at-rules are now grouped with the corresponding <code>@tailwind</code> at-rule (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2312">#2312</a>)</li></ul><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="deprecations"><a href="#deprecations" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Deprecations</span></h2><ul role="list"><li>The <code>conservative</code> purge mode has been deprecated in favor of the new <code>layers</code> mode (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2288">#2288</a>)</li></ul><p>Check out the <a href="https://github.com/tailwindlabs/tailwindcss/releases/tag/v1.8.0">full release notes on GitHub</a> for more details.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2315">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/tailwindcss-1-8">Tailwind CSS v1.8.0</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.589eb984c063beb9a8c9697648974596.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Utility-Friendly Transitions with @tailwindui/react]]></title>
            <link>https://tailwindcss.com/blog/utility-friendly-transitions-with-tailwindui-react</link>
            <guid>Utility-Friendly Transitions with @tailwindui/react</guid>
            <pubDate>Thu, 27 Aug 2020 18:30:00 GMT</pubDate>
            <description><![CDATA[Announcing the first release of @tailwindui/react, which introduces a <Transition> component for utility-first enter/leave transitions.]]></description>
            <content:encoded><![CDATA[<p>Back in February we released <a href="https://tailwindui.com">Tailwind UI</a>, a directory of HTML component examples designed for you to copy and paste into your Tailwind projects as a starting point for your own designs.</p><p>We built Tailwind UI as an HTML-only, bring-your-own-JS product to make it as universal as possible, but many designs are inherently interactive and porting those interactive behaviors between JavaScript frameworks is unfortunately not always very easy.</p><p>One example of this is enter/leave transitions, like when you toggle a dropdown menu and see it fade in and out.</p><p>Vue.js has a really neat <code>&lt;transition&gt;</code> component for enter/leave transitions with a very utility-friendly API:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span>
  <span class="token attr-name">enter-active-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transition-opacity duration-75<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">enter-from-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>opacity-0<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">enter-to-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>opacity-100<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">leave-active-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transition-opacity duration-150<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">leave-from-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>opacity-100<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">leave-to-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>opacity-0<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isShowing<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- Will fade in and out --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">&gt;</span></span></code></pre><p>But replicating this in React turns out to be much more difficult, because until now there hasn’t been a library designed to support utility-driven transition styling.</p><p><strong>So earlier this week, we released the very first version of <a href="https://github.com/tailwindlabs/tailwindui-react">@tailwindui/react</a>, a library that provides low-level primitives for turning utility-first HTML into fully interactive UIs.</strong></p><p>We’ll be adding many more components in the coming months <em>(like dropdowns, toggles, modals, and more, and for Vue too!)</em> but thought we’d start with a <code>&lt;Transition&gt;</code> component to at least get the current Tailwind UI experience for React users up to par with what’s possible in Vue and Alpine.js.</p><p>Here’s what it looks like to use:</p><pre class="language-jsx"><code class="language-jsx"><span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Transition</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&#x27;@tailwindui/react&#x27;</span>
<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> useState <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&#x27;react&#x27;</span>

<span class="token keyword">function</span> <span class="token function"><span class="token maybe-class-name">MyComponent</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>isOpen<span class="token punctuation">,</span> setIsOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>

  <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token function">setIsOpen</span><span class="token punctuation">(</span><span class="token operator">!</span>isOpen<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Toggle</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Transition</span></span>
        <span class="token attr-name">show</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>isOpen<span class="token punctuation">}</span></span>
        <span class="token attr-name">enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transition-opacity duration-75<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">enterFrom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>opacity-0<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">enterTo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>opacity-100<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">leave</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transition-opacity duration-150<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">leaveFrom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>opacity-100<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">leaveTo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>opacity-0<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span><span class="token comment">/* Will fade in and out */</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Transition</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span></code></pre><p><a href="https://github.com/tailwindlabs/tailwindui-react">Read the documentation</a> to learn more about advanced functionality, like:</p><ul role="list"><li>Rendering without an extra DOM element</li><li>Co-ordinating related transitions</li><li>Transitioning on initial mount.</li></ul><p>Check it out in action in this CodeSandbox demo:</p><iframe src="https://codesandbox.io/embed/dreamy-villani-1lz49?fontsize=14&amp;hidenavigation=1&amp;module=%2Fsrc%2FApp.js&amp;view=preview" style="height:500px" class="w-full rounded-md overflow-hidden" title="dreamy-villani-1lz49" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><p>Try it out on your projects, and if you run into any problems, <a href="https://github.com/tailwindlabs/tailwindui-react">report an issue on GitHub</a>.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2262">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/utility-friendly-transitions-with-tailwindui-react">Utility-Friendly Transitions with @tailwindui/react</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.816e75ac48ca1cba2b58b834a8df9063.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Introducing Heroicons.com]]></title>
            <link>https://tailwindcss.com/blog/introducing-heroicons</link>
            <guid>Introducing Heroicons.com</guid>
            <pubDate>Tue, 25 Aug 2020 13:00:00 GMT</pubDate>
            <description><![CDATA[Today we're launching the official Heroicons web experience, which makes it easier than every to search for icons and quickly copy them to your clipboard as Tailwind-ready HTML or JSX.]]></description>
            <content:encoded><![CDATA[<p>A few months back we quietly released <a href="https://www.heroicons.com/">Heroicons</a>, a set of free SVG icons we initially designed to support the components in Tailwind UI. Today we’re launching the official <a href="https://www.heroicons.com/">Heroicons web experience</a>, which makes it easier than ever to search for icons and quickly copy them to your clipboard as Tailwind-ready HTML or JSX.</p><a href="https://heroicons.com"><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/banner.77a7e906c6fabd44943c79bb4595c428.svg" alt="heroicons.com"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div></a><p>There are currently over 220 icons available in both medium and small sizes, with size designed to serve a different use-case:</p><ul role="list"><li>Medium icons are designed to be rendered at 24x24, and work well for things like primary navigation and marketing sections.</li><li>Small icons are designed to be rendered at 20x20, and work well for buttons, form elements and to support text.</li></ul><p>All of the icons are Tailwind-ready, and are easy to style with Tailwind’s built-in size and color utilities.</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>h-6 w-6 text-indigo-500<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2000/svg<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>none<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0 0 24 24<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>currentColor<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>
    <span class="token attr-name">stroke-linecap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>round<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">stroke-linejoin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>round<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M17 8l4 4m0 0l-4 4m4-4H3<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span></code></pre><p>For best results, use h-6 w-6 for medium icons, and h-5 w-5 for small icons.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="just-the-beginning"><a href="#just-the-beginning" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Just the beginning</span></h2><p>We’ve got lots of ideas for both new icons, as well as new icon styles <em>(duotone anyone?)</em> that we’re excited to design and release in the coming months.</p><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/icon-styles.c72a11525f4f3d5af7376dbbd711e018.svg" alt=""/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div><p>Designing this site also got me itching to refresh the Hero Patterns site, so you’ll probably see something like this show up at <a href="http://www.heropatterns.com/">heropatterns.com</a> pretty soon:</p><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/heropatterns-preview.daf930ab204dc167648fa5d83b40b8aa.jpg" alt=""/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div><p>We’ve got a bunch of <a href="https://twitter.com/steveschoger/status/1266042614710767616?s=20">other “Hero” domains</a> waiting to be put to use too, and I’m pumped to reveal what we’re working on for those soon.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="got-a-suggestion"><a href="#got-a-suggestion" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Got a suggestion?</span></h2><p>If you have any ideas for new icons we’d love to hear them! Head over to the <a href="https://github.com/tailwindlabs/heroicons">Heroicons GitHub repository</a> and open an issue to make a suggestion.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2238">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/introducing-heroicons">Introducing Heroicons.com</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.09d8bb0caf8b9631764ad9851b871230.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Tailwind CSS v1.7.0]]></title>
            <link>https://tailwindcss.com/blog/tailwindcss-1-7</link>
            <guid>Tailwind CSS v1.7.0</guid>
            <pubDate>Tue, 18 Aug 2020 19:15:00 GMT</pubDate>
            <description><![CDATA[Tailwind CSS v1.7.0 is now available, with gradients and more!]]></description>
            <content:encoded><![CDATA[<p>Another new Tailwind release is here! This time with support for gradients, background-clip, experimental support for using <code>@apply</code> with variant utilities, and tons more. Let’s dig in!</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4 mb-2 text-sm leading-6 text-sky-500 font-semibold tracking-normal" id="new-features"><a href="#new-features" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New features</span></h2><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="gradients"><a href="#gradients" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Gradients</span></h3><p>The big one for this release — Tailwind now ships with built-in support for background gradients!</p><p>Gradients are designed with a highly composable API that lets you specify up to three color stops in one of 8 directions by default:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-gradient-to-r from-orange-400 via-red-500 to-pink-500<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="https://user-images.githubusercontent.com/4323180/90427639-ce57e280-e090-11ea-8611-53a64707fafc.png"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div></p><p>This is made possible by a new <code>backgroundImage</code> core plugin (which you can use for any background images you like!) and a new <code>gradientColorStops</code> core plugin.</p><p>The default configuration for these plugins looks like this:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    backgroundImage<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string">&#x27;gradient-to-t&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to top, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;gradient-to-tr&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to top right, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;gradient-to-r&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to right, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;gradient-to-br&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to bottom right, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;gradient-to-b&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to bottom, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;gradient-to-bl&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to bottom left, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;gradient-to-l&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to left, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;gradient-to-tl&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to top left, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">gradientColorStops</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">theme</span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">&#x27;colors&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  variants<span class="token operator">:</span> <span class="token punctuation">{</span>
    backgroundImage<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    gradientColorStops<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;hover&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;focus&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>Learn more <a href="https://github.com/tailwindlabs/tailwindcss/pull/2176">the original pull request</a>.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-background-clip-utilities"><a href="#new-background-clip-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New background-clip utilities</span></h3><p>We’ve also added a new <code>backgroundClip</code> core plugin that you can use to control how background are rendered within an element.</p><p>It includes 4 new utilities:</p><table><thead><tr><th>Class</th><th>CSS</th></tr></thead><tbody><tr><td><code>bg-clip-border</code></td><td><code>background-clip: border-box</code></td></tr><tr><td><code>bg-clip-padding</code></td><td><code>background-clip: padding-box</code></td></tr><tr><td><code>bg-clip-content</code></td><td><code>background-clip: content-box</code></td></tr><tr><td><code>bg-clip-text</code></td><td><code>background-clip: text</code></td></tr></tbody></table><p>Combined with the new gradient features, you can use this to do cool gradient text stuff like this:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-6xl font-bold<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-clip-text text-transparent bg-gradient-to-r from-teal-400 to-blue-500<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Greetings from Tailwind v1.7.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></code></pre><p><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="https://user-images.githubusercontent.com/4323180/90427567-b54f3180-e090-11ea-988b-c95ed716866f.png"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div></p><p>Only responsive variants are enabled for the <code>backgroundClip</code> plugin by default:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  variants<span class="token operator">:</span> <span class="token punctuation">{</span>
    backgroundClip<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-gap-utility-aliases"><a href="#new-gap-utility-aliases" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New gap utility aliases</span></h3><p>For some dumb reason I named the <code>column-gap</code> and <code>row-gap</code> utilities <code>col-gap-{n}</code> and <code>row-gap-{n}</code> respectively, which isn’t terrible but it’s not consistent with how other things in Tailwind are named.</p><p>I was finding myself getting them wrong all the time — is <code>row-gap</code> the gaps in a row, or the gap between rows?</p><p>Tailwind v1.7 introduces new <code>gap-x-{n}</code> and <code>gap-y-{n}</code> utilities that do the exact same thing but have names that don’t suck. They make way more sense than the actual CSS names now that gap for flexbox is starting to roll out too, since flexbox has no “columns”.</p><p>These utilities will replace the old ones in v2.0, but for now they both exist together.</p><p><strong>We recommend migrating to the new names now, and disabling the old names using this feature flag:</strong></p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  future<span class="token operator">:</span> <span class="token punctuation">{</span>
    removeDeprecatedGapUtilities<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span></code></pre></div></div><p>Tailwind will issue a warning in the console to remind you that you are including deprecated classes in your build until you enable this flag.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-display-utility"><a href="#new-display-utility" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New contents display utility</span></h3><p>We’ve added a new <code>contents</code> class for the recent <code>display: contents</code> CSS feature.</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- This container will act as a phantom container, and its children will be treated as part of the parent flex container --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>contents<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Learn more about it in <a href="https://rachelandrew.co.uk/archives/2016/01/29/vanishing-boxes-with-display-contents/">this great article by Rachel Andrew</a>.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="default-letter-spacing-per-font-size"><a href="#default-letter-spacing-per-font-size" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Default letter-spacing per font-size</span></h3><p>You can now configure a default letter-spacing value for each font-size in your <code>tailwind.config.js</code> theme, using a tuple syntax:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    fontSize<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token number">2</span>xl<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;24px&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        letterSpacing<span class="token operator">:</span> <span class="token string">&#x27;-0.01em&#x27;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token comment">// Or with a default line-height as well</span>
      <span class="token number">3</span>xl<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;32px&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        letterSpacing<span class="token operator">:</span> <span class="token string">&#x27;-0.02em&#x27;</span><span class="token punctuation">,</span>
        lineHeight<span class="token operator">:</span> <span class="token string">&#x27;40px&#x27;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre></div></div><p>This new syntax is supported in addition to the simpler <code>[{fontSize}, {lineHeight}]</code> syntax that was recently introduced.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="divide-border-styles"><a href="#divide-border-styles" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Divide border styles</span></h3><p>We’ve added utilities for setting the border style on the <code>divide</code> utilities:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>divide-y divide-dashed<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>These utilities include <code>responsive</code> variants by default:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  variants<span class="token operator">:</span> <span class="token punctuation">{</span>
    divideStyle<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="access-entire-config-object-from-plugins"><a href="#access-entire-config-object-from-plugins" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Access entire config object from plugins</span></h3><p>The <code>config</code> function passed to the plugin API now returns the entire config option when invoked with no arguments:</p><pre class="language-js"><code class="language-js">tailwind<span class="token punctuation">.</span><span class="token method function property-access">plugin</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> config<span class="token punctuation">,</span> addUtilities<span class="token punctuation">,</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Returns entire config object</span>
  <span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="define-colors-as-closures"><a href="#define-colors-as-closures" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Define colors as closures</span></h3><p>You can now define your colors as callbacks, which receive a bag of parameters you can use to generate your color value.</p><p>This is particularly useful when trying to make your custom colors work with the <code>backgroundOpacity</code>, <code>textOpacity</code>, etc. utilities</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    colors<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">primary</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> opacityVariable <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rgba(var(--color-primary), var(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>variable<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, 1))</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>Currently the only thing passed through is an <code>opacityVariable</code> property, which contains the name of the current opacity variable (<code>--background-opacity</code>, <code>--text-opacity</code>, etc.) depending on which plugin is using the color.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="deprecations"><a href="#deprecations" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Deprecations</span></h2><p>Tailwind v1.7 introduces a new feature flagging and deprecation system designed to make upgrades as painless as possible.</p><p>Any time we deprecate functionality or introduce new (stable) breaking changes, they will be available in Tailwind v1.x under a <code>future</code> property in your <code>tailwind.config.js</code> file.</p><p>Whenever there are deprecations or breaking changes available, Tailwind will warn you in the console on every build until you adopt the new changes and enable the flag in your config file:</p><pre><code>risk - There are upcoming breaking changes: removeDeprecatedGapUtilities
risk - We highly recommend opting-in to these changes now to simplify upgrading Tailwind in the future.
risk - https://tailwindcss.com/docs/upcoming-changes
</code></pre><p>You can opt-in to a breaking change by setting that flag to <code>true</code> in your <code>tailwind.config.js</code> file:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  future<span class="token operator">:</span> <span class="token punctuation">{</span>
    removeDeprecatedGapUtilities<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>If you’d prefer not to opt-in but would like to silence the warning, explicitly set the flag to <code>false</code>:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  future<span class="token operator">:</span> <span class="token punctuation">{</span>
    removeDeprecatedGapUtilities<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p><strong>We do not recommend this</strong>, as it will make upgrading to Tailwind v2.0 more difficult.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="deprecated-gap-utilities"><a href="#deprecated-gap-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Deprecated gap utilities</span></h3><p>As mentioned previously, Tailwind v1.7.0 introduces new <code>gap-x-{n}</code> and <code>gap-y-{n}</code> utilities to replace the current <code>col-gap-{n}</code> and <code>row-gap-{n}</code> utilities.</p><p>By default both classes will exist, but the old utilities will be removed in Tailwind v2.0.</p><p>To migrate to the new class names, simply replace any existing usage of the old names with the new names:</p><pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> &lt;div class=&quot;col-gap-4 row-gap-2 ...&quot;&gt;
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> &lt;div class=&quot;gap-x-4 gap-y-2 ...&quot;&gt;</span></span></code></pre><p>To opt-in to the new names now, enable the <code>removeDeprecatedGapUtilities</code> flag in your <code>tailwind.config.js</code> file:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  future<span class="token operator">:</span> <span class="token punctuation">{</span>
    removeDeprecatedGapUtilities<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="experimental-features"><a href="#experimental-features" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Experimental features</span></h2><p>Tailwind v1.7.0 introduces a new experimental feature system that allows you to opt-in to new functionality that is coming to Tailwind soon but isn’t quite stable yet.</p><p>It’s important to note that <strong>experimental features may introduce breaking changes, do not follow semver, and can change at any time</strong>.</p><p>If you like to live on the wild side though, you can enable all of them like so:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  experimental<span class="token operator">:</span> <span class="token string">&#x27;all&#x27;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>With that out of the way, here is some of the fun stuff we’re working on that we’re pumped you can finally play with…</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="use-with-variants-and-other-complex-classes"><a href="#use-with-variants-and-other-complex-classes" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Use @apply with variants and other complex classes</span></h3><p>This is a huge one — you can finally use <code>@apply</code> with responsive variants, pseudo-class variants, and other complex classes!</p><pre class="language-css"><code class="language-css"><span class="token selector"><span class="token class">.btn</span></span> <span class="token punctuation">{</span>
  <span class="token atrule atapply"><span class="token rule">@apply</span> bg-indigo <span class="token property">hover</span><span class="token punctuation">:</span>bg-indigo-700 <span class="token property">sm</span><span class="token punctuation">:</span>text-lg<span class="token punctuation">;</span></span>
<span class="token punctuation">}</span></code></pre><p>There are a lot of details to understand with this one, so I recommend <a href="https://github.com/tailwindlabs/tailwindcss/pull/2159">reading the pull request</a> to learn about how it all works.</p><p>This introduces breaking changes to how <code>@apply</code> worked before, so be sure to read all of the details before just flipping the switch.</p><p>To enable this feature, use the <code>applyComplexClasses</code> flag:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  experimental<span class="token operator">:</span> <span class="token punctuation">{</span>
    applyComplexClasses<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-color-palette"><a href="#new-color-palette" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New color palette</span></h3><p>We’ve added a teaser of the new Tailwind 2.0 color palette that you can start playing with today using the <code>uniformColorPalette</code> flag:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  experimental<span class="token operator">:</span> <span class="token punctuation">{</span>
    uniformColorPalette<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>The idea behind the new palette is that every color at every shade has a similar perceived brightness. So you can swap <code>indigo-600</code> with <code>blue-600</code> and expect the same color contrast.</p><p>We do expect these colors to continue to change a lot as we iterate on them, so use these at your own risk.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="extended-spacing-scale"><a href="#extended-spacing-scale" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Extended spacing scale</span></h3><p>We’ve added a much bigger spacing scale that includes new micro values like <code>0.5</code>, <code>1.5</code>, <code>2.5</code>, and <code>3.5</code>, as well as new large values like <code>72</code>, <code>80</code>, and <code>96</code>, <em>and</em> added percentage based fractional values to the whole spacing scale (<code>1/2</code>, <code>5/6</code>, <code>7/12</code>, etc.)</p><p>You can enable the extended spacing scale using the <code>extendedSpacingScale</code> flag:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  experimental<span class="token operator">:</span> <span class="token punctuation">{</span>
    extendedSpacingScale<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>This is pretty stable, I would be surprised if we change this.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="default-line-heights-per-font-size-by-default"><a href="#default-line-heights-per-font-size-by-default" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Default line-heights per font-size by default</span></h3><p>We’ve added recommended default line-heights to every built-in font-size, which can be enabled using the <code>defaultLineHeights</code> flag:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  experimental<span class="token operator">:</span> <span class="token punctuation">{</span>
    defaultLineHeights<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>This is a breaking change and will impact your designs, as previously all font sizes had a default line-height of <code>1.5</code>.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="extended-font-size-scale"><a href="#extended-font-size-scale" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Extended font size scale</span></h3><p>We’ve added three new font sizes (<code>7xl</code>, <code>8xl</code>, and <code>9xl</code>) to keep up with the latest huge-as-hell-hero-text trends. They include default line-heights as well.</p><p>You can enable them under the <code>extendedFontSizeScale</code> flag:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  experimental<span class="token operator">:</span> <span class="token punctuation">{</span>
    extendedFontSizeScale<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2183">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/tailwindcss-1-7">Tailwind CSS v1.7.0</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.3f7399a601caf3bbc6c5461e33429509.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[From Nine Hundred to One: How We Hired Robin Malfait]]></title>
            <link>https://tailwindcss.com/blog/from-900-to-1-how-we-hired-robin-malfait</link>
            <guid>From Nine Hundred to One: How We Hired Robin Malfait</guid>
            <pubDate>Mon, 10 Aug 2020 13:30:00 GMT</pubDate>
            <description><![CDATA[Back in May we published our first job posting for a full-stack developer to join our team. This is the story of how we worked through almost 900 applications, and eventually hired Robin Malfait, a talented developer from Belgium who is starting with us today.]]></description>
            <content:encoded><![CDATA[<p>Back in May we published <a href="https://jobs.tailwindui.com/full-stack-developer">our first job posting</a> to help us find a full-stack developer to join our team.</p><p>After receiving almost 900 applications and interviewing dozens of talented people, we’re excited to finally share that <a href="https://twitter.com/malfaitrobin">Robin Malfait</a> accepted our offer for the position and is officially part of the Tailwind Labs team as of today!</p><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/robin.0d3924c4144273045b41b12746c3a505.jpg" alt=""/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div><p>Robin is a talented developer from Belgium, and has been an active member of the Tailwind community for a long time. If you’re a Tailwind UI customer and have ever asked a question in the <code>#react</code> channel on our Discord server, there’s a 90% chance he’s the helpful person who answered your question. He even built a <a href="https://gist.github.com/RobinMalfait/a90e8651196c273dfa51eec0f43e1676">bookmarklet</a> to help people convert Tailwind UI components to JSX!</p><p>Robin is a seriously experienced React developer, and is joining us to help spearhead the open-source <a href="https://twitter.com/adamwathan/status/1265815748917813248">renderless UI libraries</a> we are working on that will be the foundation for official React and Vue <em>(to start anyways)</em> support in Tailwind UI.</p><p>We’re super excited that he is finally starting with us today, and can’t wait to watch his contributions enable people to build awesome UIs even faster and with more confidence. Welcome to the team dude!</p><p>What follows is the story of how we went about hiring for this role, and how we narrowed down the candidates from almost 900 initial applications to finally making an offer to Robin.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="the-job-posting"><a href="#the-job-posting" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>The Job Posting</span></h2><p>Before this role, we had only hired <a href="https://blog.tailwindcss.com/welcoming-brad-cornes-to-the-tailwind-team">Brad</a> who we already knew and trusted, so we didn’t need a job posting or any sort of rigorous application process.</p><p>I knew that if we wanted to get really great candidates, we had to write a compelling job posting. After about 3-4 days of working on it, this is where we ended up:</p><p><a href="https://jobs.tailwindui.com/full-stack-developer"><strong>Read the job posting →</strong></a></p><p>Here are the important things I focused on when writing it:</p><ul role="list"><li>Be specific about the projects the applicant would be working on after they started</li><li>Be clear that we are a small team, so everyone has to do a bit of everything, including customer support</li><li>Give concrete examples of projects we just finished that the applicant would have worked on if they were already at the company</li><li>Go into detail about specific hard problems we expect to run into on the next major upcoming project, to help the applicant understand the sort of expertise that would be valuable to us</li><li>Share concrete salary and benefit information. I would never apply for a job without a clear understanding of the salary, so why should I expect talented people to apply for our posting without it?</li></ul><p>We got <em>tons</em> of positive feedback about this posting, and I’m really proud of how it turned out. I think it was very applicant-centric, and I think it made a big difference in the quality of submissions we got.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="the-application-process"><a href="#the-application-process" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>The Application Process</span></h2><p>One thing we did a bit differently from other companies is that we didn’t ask for a resume or give applicants a big list of questions to answer. All we asked for was an “application”, in whatever form the person decided. It could be a cover letter, a small website, a video, a slide deck, whatever.</p><p>I decided to ask for applications this way for a few reasons:</p><ul role="list"><li>I just don’t think resumes are that important</li><li>I wanted to filter for people with some inherent marketing sensibilities, we’re a tiny company so we need <a href="https://en.wikipedia.org/wiki/T-shaped_skills">T-shaped</a> people more than we need specialists</li><li>I wanted to filter for people who can ship things, and making the application completely free-form tells you a lot about someone’s ability to take something from nothing to polished product on their own</li><li>I wanted to find someone who talked about the stuff we were looking for without being prompted for it — finding someone who was naturally well-aligned with what we are trying to do would be a big advantage for us</li><li>I expected a lot of applications, and I thought asking for applications this way would make it easy to filter people out who were using a shotgun approach to job-searching and not specifically interested in working with us</li></ul><p>Even with what I think was a fairly intimidating application process, we got well over 100 applications where there was clearly a lot of time spent crafting something very specific for our posting, including Robin’s of course:</p><p><a href="https://robin-malfait-tailwind-job-application.now.sh/"><strong>Read Robin’s application →</strong></a></p><p>Some people did some <em>really</em> out there and creative things in their applications <em>(one person even made an interactive game!)</em> but Robin’s stood out to us for a few reasons:</p><ul role="list"><li>The visual design was great. We’re a very design-focused company, so having good taste in design is really important to us.</li><li>His story about learning to program and getting into the Laravel community told me we had a rich shared history, even if we had never met.</li><li>He took a chance and shared some strong opinions he had about component design that were <em>extremely</em> relevant to some work we’ll be doing very soon, and I agreed with what he was saying and even learned a few things.</li><li>He shared a super interesting <a href="https://github.com/RobinMalfait/lazy-collections">open-source library</a> he authored, which despite being very unknown, still had very well thought-out and complete documentation that was presented in a very well-structured way. It was clear he thinks about visual design even when authoring a markdown file.</li><li>He shared lots of concrete ideas for projects he’d like to work on with us, and a lot of them were things I was already excited about doing.</li><li>He capitalized the “H” in “GitHub” <em>(holy shit I hate when people don’t do that)</em>.</li></ul><p>Robin’s was one of maybe 40-50 that <em>really</em> stood out from a content perspective.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="filtering-the-applications"><a href="#filtering-the-applications" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Filtering the Applications</span></h2><p>Dealing with almost 900 job applications is a lot of work. Over half of them we were able to discard immediately because they just provided a link to their LinkedIn profile or a generic resume, but filtering through the rest was really tough.</p><p>I’ve never hired anyone this way before, and at first I really felt like we needed to meet with and interview <em>everyone</em> who submitted a quality application. As the applications poured in though, I realized this was just not practical, and that we had to put some sort of cap on it.</p><p>I decided to sort the good applications as best I could, then just slice off the top 20 and start there. It meant there were lots of great people we wouldn’t talk to and that maybe we even missed out on the absolute best applicant, but the reality is that we only have so much time we can dedicate to this, and I had to believe that out of the ~20 best applications, there would certainly be <em>multiple</em> people we wouldn’t regret hiring at all, even if there was a chance that the absolute best person was somewhere in the other 30.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="the-interview-process"><a href="#the-interview-process" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>The Interview Process</span></h2><p>We started by scheduling video interviews with the top ~20 applicants, which took about 3 weeks to get through.</p><p>These were 30-45 minute calls where we had a pretty casual conversation about a few topics:</p><ul role="list"><li>What the person had been working on recently, and where they think their strengths are</li><li>Why they applied for the job, and what about the role was interesting to them</li><li>What we as a company are going to be doing over the next year or so, and digging into a few projects in detail</li><li>Answering any questions the person had about the job or our company</li></ul><p>This was a great way just to get to know the people who applied and get a gut sense for who stood out the most. We really enjoyed meeting with every single person we talked to, but made the hard decision to filter down again to about 10 people for the next phase.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="take-home-project"><a href="#take-home-project" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Take-Home Project</span></h2><p>The next step in the application process was a take-home project, where the applicant had to build out a design Steve had created using either Vue or React. We estimated it to be about a 4-8 hour project.</p><p>We provided a zip file containing all of the instructions, the design as a Figma file, and a walk-through video of a working implementation outlining any behavior that was hard to capture in Figma.</p><p><a href="https://github.com/adamwathan/tailwind-take-home-project"><strong>See the take-home project on GitHub →</strong></a></p><p>We tried to give very clear instructions, and made sure to point out where we wanted people to focus their time, and what areas we didn’t want them to overthink or spend too much time on.</p><p>We gave each candidate about two weeks to complete the project, just to make sure they had the opportunity to fit it into their schedule without it being disruptive.</p><p>All of the submissions we got back were great, but again we forced ourselves to limit the candidates for the next phase, this time down to 6 people.</p><p>One thing we really loved about Robin’s submission was that he spent a lot of time guiding us through his solution with comments in the code. For regular production code I would say it was definitely overkill, but as part of a job application I thought it was extremely helpful to get a behind-the-scenes look into how he actually <em>thinks</em> about the code he is writing. He also spent a lot of time describing alternate solutions to certain problems and why he didn’t go with those approaches, which was very beneficial as well.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="pairing-session"><a href="#pairing-session" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Pairing Session</span></h2><p>The final step in the application process was a two-hour pair programming session with me.</p><p>When pairing as part of an interview process like this, there’s a really high risk of the inherent power dynamic coloring how the whole thing goes. I <em>really</em> wanted to avoid that as much as possible, so I did two things:</p><ul role="list"><li>I made sure whatever we were pairing on was something completely new, that I had no prior experience with</li><li>I let the candidate suggest a few things for us to pair on, and picked something from their list</li></ul><p>I absolutely didn’t want to pair on something where I knew all the answers and I was just watching to see if the candidate could figure out something I already knew. That is absolutely not representative of real work and I don’t think it would’ve been useful at all.</p><p>Instead, by choosing a problem that neither of us had significant experience with, we got to put the power dynamic aside (as much as possible at least), and just focus on learning something new together, and seeing how we helped each other get unstuck.</p><p>Some of the things I paired on included:</p><ul role="list"><li>Building a date picker from scratch</li><li>Learning XState</li><li>Building a modal dialog with the Vue 3 composition API</li></ul><p>I really enjoyed this process and am very proud of how we put it together. It was definitely the most informative part of the interview process and really gave me a ton of confidence that we were offering the job to the right person.</p><p>For Robin’s session, we decided to build an SVG charting library from scratch <em>(something neither of us had ever done before)</em>, in Svelte <em>(a framework neither of us had ever used before)</em>. This was Robin’s idea, and that he had the courage to tackle two completely new problems at the same time <em>in an interview context</em> really impressed me. We had a great time pairing together on this, and not once in the session did it ever feel like either of us was ahead of the other person or trying to catch them up on something. We had really great chemistry and it felt very energizing and productive, and reminded me of some of the best pairing sessions I’ve had in my career, which is pretty incredible given we’d never worked together before, and that he was being evaluated for a job.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="making-the-offer"><a href="#making-the-offer" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Making the offer</span></h2><p>This whole process took about 1.5 months, and at the end we had a very hard time choosing between the top few candidates. Realistically we could’ve hired any of them and not regretted it, but my experience interviewing and pairing with Robin stood out just a bit more and I was really excited to be able to offer him the role. We know he’s going to be an amazing fit for the team, and I can’t wait to dig in to some hard problems with him in the coming months.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2153">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/from-900-to-1-how-we-hired-robin-malfait">From Nine Hundred to One: How We Hired Robin Malfait</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.67267279f6fe68c0891a7231fee974ca.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Tailwind CSS v1.6.0]]></title>
            <link>https://tailwindcss.com/blog/tailwindcss-1-6</link>
            <guid>Tailwind CSS v1.6.0</guid>
            <pubDate>Tue, 28 Jul 2020 16:58:33 GMT</pubDate>
            <description><![CDATA[Tailwind CSS v1.6.0 is now available, with animations and more!]]></description>
            <content:encoded><![CDATA[<p>It’s like Tailwind CSS v1.5 except now there’s animation support, overscroll utilities, and more!</p><p>There aren’t supposed to be any breaking changes here, but I thought that <a href="https://github.com/tailwindlabs/tailwindcss/releases/tag/v1.5.0">last time</a> too. If I <em>did</em> break something, first person to report it gets a Tailwind shirt.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4 mb-2 text-sm leading-6 text-sky-500 font-semibold tracking-normal" id="new-features"><a href="#new-features" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New Features</span></h2><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="animation-support"><a href="#animation-support" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Animation support</span></h3><p>Tailwind CSS v1.6 adds a brand new <code>animation</code> core plugin, with 4 general purpose animations included out of the box:</p><ul role="list"><li><code>animate-spin</code></li><li><code>animate-ping</code></li><li><code>animate-pulse</code></li><li><code>animate-bounce</code></li></ul><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-indigo-600 ...<span class="token punctuation">&quot;</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>animate-spin h-5 w-5 mr-3 ...<span class="token punctuation">&quot;</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0 0 24 24<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- ... --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
  Processing
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>These are completely customizable as always, using the <code>animation</code> and <code>keyframes</code> sections of your <code>tailwind.config.js</code> theme:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    extend<span class="token operator">:</span> <span class="token punctuation">{</span>
      animation<span class="token operator">:</span> <span class="token punctuation">{</span>
        wiggle<span class="token operator">:</span> <span class="token string">&#x27;wiggle 1s ease-in-out infinite&#x27;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      keyframes<span class="token operator">:</span> <span class="token punctuation">{</span>
        wiggle<span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string">&#x27;0%, 100%&#x27;</span><span class="token operator">:</span> <span class="token punctuation">{</span> transform<span class="token operator">:</span> <span class="token string">&#x27;rotate(-3deg)&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token string">&#x27;50%&#x27;</span><span class="token operator">:</span> <span class="token punctuation">{</span> transform<span class="token operator">:</span> <span class="token string">&#x27;rotate(3deg)&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>For more information and a live demo, <a href="https://tailwindcss.com/docs/animation">read the new animation documentation</a>. For behind the scenes details about the design rationale, <a href="https://github.com/tailwindlabs/tailwindcss/pull/2068">check out the pull request</a>.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-variants"><a href="#new-variants" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New prefers-reduced-motion variants</span></h3><p>To go along with the new animation features, we’ve also added new <code>motion-safe</code> and <code>motion-reduce</code> variants that allow you to conditionally apply CSS based on the <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion"><code>prefers-reduced-motion</code> media feature</a>.</p><p>These can be useful in conjunction with transition and animation utilities to disable problematic motion for users who are sensitive to it:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... transition duration-150 ease-in-out motion-reduce:transition-none ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>…or to explicitly opt-in to motion to make sure it’s only being shown to users who haven’t opted out:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... motion-safe:transition duration-150 ease-in-out ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>These can be combined with responsive variants and pseudo-class variants as well:</p><pre class="language-html"><code class="language-html"><span class="token comment">&lt;!-- With responsive variants --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm:motion-reduce:translate-y-0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- With pseudo-class variants --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>motion-reduce:hover:translate-y-0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- With responsive and pseudo-class variants --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm:motion-reduce:hover:translate-y-0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>These are currently not enabled for any utilities by default, but you can enabled them as needed in the <code>variants</code> section of your <code>tailwind.config.js</code> file:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  variants<span class="token operator">:</span> <span class="token punctuation">{</span>
    translate<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;hover&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;focus&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;motion-safe&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;motion-reduce&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>For more details, check out <a href="https://tailwindcss.com/docs/pseudo-class-variants">the updated variants documentation</a>.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-utilities"><a href="#new-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New overscroll-behavior utilities</span></h3><p>We’ve also added new utilities for the <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior"><code>overscroll-behavior</code></a> property.</p><p>You can use these utilities to control how “scroll chaining” works in your sites, and avoid scrolling the whole page when you reach the top or bottom of an embedded scrollable area.</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>overscroll-y-contain ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>Note that this is currently <strong>not supported in Safari</strong>, but in my opinion it’s not a huge deal to treat this as a progressive enhancement anyways, since it falls back fairly gracefully.</p><p>This plugin can be configured in your <code>tailwind.config.js</code> file as <code>overscrollBehavior</code>:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>

  <span class="token comment">// Disabling the plugin</span>
  corePlugins<span class="token operator">:</span> <span class="token punctuation">{</span>
    overscrollBehavior<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// Customizing the enabled variants</span>
  variants<span class="token operator">:</span> <span class="token punctuation">{</span>
    overscrollBehavior<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;hover&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="generate-your-css-without-an-input-file"><a href="#generate-your-css-without-an-input-file" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Generate your CSS without an input file</span></h3><p>If you never write any custom CSS and you’re sick of creating this file all the time…</p><pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>
<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>
<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span></code></pre><p>…then I’ve got news for you baby — if you’re using our <code>tailwindcss</code> CLI tool you can start depositing those 58 characters into your savings account instead of wasting them on a pointless CSS file.</p><p>The input file argument is now optional in the CLI tool, so if you don’t actually <em>need</em> a custom CSS file, you can just write this:</p><pre class="language-bash"><code class="language-bash">npx tailwindcss build -o compiled.css</code></pre><p>Your kids are going to be so grateful for the extra time you get to spend together.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2088">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/tailwindcss-1-6">Tailwind CSS v1.6.0</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.a01852ca2f61f77ae15825e345af02f1.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Simon Vrachliotis Joins Tailwind Labs]]></title>
            <link>https://tailwindcss.com/blog/simon-vrachliotis-joins-tailwind-labs</link>
            <guid>Simon Vrachliotis Joins Tailwind Labs</guid>
            <pubDate>Sun, 19 Jul 2020 19:00:00 GMT</pubDate>
            <description><![CDATA[Today we are super excited to share that Simon Vrachliotis has joined the development team at Tailwind Labs.]]></description>
            <content:encoded><![CDATA[<p>Today we are super excited to share that <a href="https://twitter.com/simonswiss">Simon Vrachliotis</a> has joined the development team at Tailwind Labs! (We just finalized that new business name by the way, pretty cool right?)</p><p>Simon has been a utility-first true believer since before Tailwind even existed, and authored an oft-referenced case study on his experience <a href="https://hackernoon.com/full-re-write-with-tachyons-and-functional-css-a-case-study-part-1-635ccb5fb00b">rebuilding his company’s entire website with functional CSS in 10 days</a> way back in February 2017.</p><p>He also created the <a href="https://egghead.io/courses/build-user-interfaces-by-composing-css-utility-classes-with-tailwind">first-ever Tailwind CSS video course</a>, published on egghead.io only 4 months after we released v0.1.0.</p><p>Steve and I met Simon for the first time when we visited Sydney for Laracon AU back in 2018, where Simon was giving a talk on, of course, utility-first CSS:</p><figure><div class="aspect-w-16 aspect-h-9"><iframe src="https://player.vimeo.com/video/294976504" frameBorder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><figcaption>We know this video isn&#x27;t from Laracon, but this recording turned out better :)</figcaption></figure><p>He knocked it out of the park, and it has been an absolute pleasure getting to know Simon better over the time since we first met.</p><p>Simon is a talented developer, an amazing teacher, and has such a contagious enthusiasm for the sort of work we do that we knew we had to have him on the team if we ever had the chance.</p><p>He’s joining in a product and community focused role, and will be doing lots of amazing work helping us build things like Tailwind UI, as well as creating educational resources to help even more people have success with Tailwind CSS.</p><p>We couldn’t be more excited to be welcoming him to the team!</p><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2043">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/simon-vrachliotis-joins-tailwind-labs">Simon Vrachliotis Joins Tailwind Labs</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.65b68cfe39b503a3b4284df65689a9e8.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Welcoming Brad Cornes to the Team]]></title>
            <link>https://tailwindcss.com/blog/welcoming-brad-cornes-to-the-tailwind-team</link>
            <guid>Welcoming Brad Cornes to the Team</guid>
            <pubDate>Sat, 18 Jul 2020 15:43:02 GMT</pubDate>
            <description><![CDATA[Back in June, Brad Cornes joined our company as our very first team member. We didn't have a blog to announce it back then, but better late than never right?]]></description>
            <content:encoded><![CDATA[<p>Back in June, <a href="https://twitter.com/bradlc">Brad Cornes</a> joined our company as our very first team member. We didn’t have a blog to announce it back then, but better late than never right?</p><p>You might know Brad as the creator of the amazing <a href="https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss">Tailwind CSS IntelliSense plugin</a> for VS Code, which he first released way back in 2018 and has since been installed over 100,000 times!</p><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="/_next/static/media/card.262b5275faf5c62c85ee862fb640715e.jpg"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div><p>Brad has been using Tailwind since it was first released, and I got to know Brad in the really early days of building the Tailwind community. I was immediately impressed by his willingness to tackle extremely hard problems, his ability to come up with out-of-the-box creative solutions, and his propensity for diving deep into bleeding-edge technologies and finding interesting use-cases for them.</p><p>When we decided we wanted to grow the team, Brad was the first person that came to mind and I reached out to him about the idea way back in March. He’s been with us for over a month now and it has been absolutely awesome working with him and benefitting from his extensive experience and expertise.</p><p>Brad has been helping us out all over the place, working on things like the IntelliSense plugin, developing internal tooling for Tailwind UI, and even building this very blog. He has an amazing ability to take a hard, complex problem, lock himself in a room for 2 hours, and come out the other side with an elegant solution.</p><p>He’s been an amazing addition to the team, and we are extremely excited about all the new things we’re going to be building in the coming months that would not be possible without his help.</p><p>Follow Brad <a href="https://twitter.com/bradlc">on Twitter</a> to keep up with what he’s working on and for sneak peaks of some exciting new projects!</p><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2040">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/welcoming-brad-cornes-to-the-tailwind-team">Welcoming Brad Cornes to the Team</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.8c1a2856b4164926684013180d68df8f.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Tailwind CSS v1.5.0]]></title>
            <link>https://tailwindcss.com/blog/tailwindcss-1-5</link>
            <guid>Tailwind CSS v1.5.0</guid>
            <pubDate>Wed, 15 Jul 2020 18:55:18 GMT</pubDate>
            <description><![CDATA[Tailwind CSS v1.5.0 is here, now with component variants, responsive container variants, focus-visible support, and more.]]></description>
            <content:encoded><![CDATA[<p>I was hoping to save v1.5.0 for something <em>really</em> exciting but we needed a new feature to support the new <a href="https://github.com/tailwindcss/typography"><code>@tailwindcss/typography</code></a> plugin so h*ck it, we’re dropping some new stuff on you early.</p><p>No breaking changes, this is a minor release and we’re professionals you silly goose.</p><p>I was hoping to save v1.5.0 for something <em>really</em> exciting but we needed a new feature to support the new <a href="https://github.com/tailwindcss/typography"><code>@tailwindcss/typography</code></a> plugin so h*ck it, we’re dropping some new stuff on you early.</p><p>No breaking changes, this is a minor release and we’re professionals you silly goose.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4 mb-2 text-sm leading-6 text-sky-500 font-semibold tracking-normal" id="new-features"><a href="#new-features" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New Features</span></h2><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="component-support"><a href="#component-support" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Component variants support</span></h3><p>Until Tailwind CSS v1.5.0, only “utility” classes were really intended to be used with <code>variants</code> (like “responsive”, “hover”, “focus”, etc.)</p><p>While these are still much more useful for utilities than any other type of class, we now support generating variants for component classes as well, like the <code>prose</code> classes in the new <code>@tailwindcss/typography</code> plugin:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>prose md:prose-lg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- Content --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">&gt;</span></span></code></pre><p>You can take advantage of this feature in your own component classes by using the new <code>variants</code> option in the second argument of the <code>addComponents</code> plugin API:</p><pre class="language-js"><code class="language-js"><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> addComponents <span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">addComponents</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token string">&#x27;.card&#x27;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    variants<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>…or using the array shorthand you might be familiar with from the <code>addUtilities</code> API:</p><pre class="language-js"><code class="language-js"><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> addComponents <span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">addComponents</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token string">&#x27;.card&#x27;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>To take advantage of these feature in your custom CSS (rather than using the plugin API), you can use a new <code>@layer</code> directive to explicitly tell Tailwind that your styles belong to the “components” bucket:</p><pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@layer</span> components</span> <span class="token punctuation">{</span>
  <span class="token atrule"><span class="token rule">@responsive</span></span> <span class="token punctuation">{</span>
    <span class="token selector"><span class="token class">.card</span></span> <span class="token punctuation">{</span>
      <span class="token comment">/* ... */</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre><p>This helps Tailwind purge your unused CSS correctly, ensuring it doesn’t remove any responsive component variants when using the default “conservative” purge mode.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="responsive-variants"><a href="#responsive-variants" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Responsive container variants</span></h3><p>Piggy-backing off of the new component <code>variants</code> support, the <code>container</code> class now supports variants!</p><pre class="language-html"><code class="language-html"><span class="token comment">&lt;!-- Only lock the width at `md` sizes and above --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>md:container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>We’ve enabled responsive variants by default, but if you are sick in the head you can also manually enable other variants like <code>focus</code>, <code>group-hover</code>, whatever:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  variants<span class="token operator">:</span> <span class="token punctuation">{</span>
    container<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;focus&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;group-hover&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-variant"><a href="#new-variant" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New focus-visible variant</span></h3><p>We’ve added support for the <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible"><code>:focus-visible</code> pseudo-class</a> using a new <code>focus-visible</code> variant.</p><p>This is super useful for adding focus styles that <em>only</em> appear to keyboard users, and are ignored for mouse users:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>focus-visible:outline-none focus-visible:shadow-outline ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  Click me
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>It’s not enabled for anything by default, but you can enable it in the <code>variants</code> section of your config file:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  variants<span class="token operator">:</span> <span class="token punctuation">{</span>
    backgroundColor<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;hover&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;focus&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;focus-visible&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>Browser support is still pretty weak on this but getting better. In the mean time, check out the <a href="https://github.com/WICG/focus-visible">polyfill</a> and corresponding <a href="https://github.com/csstools/postcss-focus-visible">PostCSS plugin</a> if you’d like to use this in all browsers right away.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-variant-1"><a href="#new-variant-1" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New checked variant</span></h3><p>We’ve added a new <code>checked</code> variant you can use to conditionally style things like checkboxes and radio buttons:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-white checked:bg-blue-500<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></code></pre><p>It’s not enabled for anything by default, but you can enable it in the <code>variants</code> section of your config file:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  variants<span class="token operator">:</span> <span class="token punctuation">{</span>
    backgroundColor<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;hover&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;focus&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;checked&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2033">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/tailwindcss-1-5">Tailwind CSS v1.5.0</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.4100211a1e8c828d30854e8672db26cf.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Introducing Tailwind CSS Typography]]></title>
            <link>https://tailwindcss.com/blog/tailwindcss-typography</link>
            <guid>Introducing Tailwind CSS Typography</guid>
            <pubDate>Mon, 13 Jul 2020 16:35:02 GMT</pubDate>
            <description><![CDATA[Until now, trying to style an article, document, or blog post with Tailwind has been a tedious task that required a keen eye for typography and a lot of complex custom CSS. That's why today we're excited to release @tailwindcss/typography — a plugin that lets you easily style vanilla HTML content with beautiful typographic defaults.]]></description>
            <content:encoded><![CDATA[<p>Until now, trying to style an article, document, or blog post with Tailwind has been a tedious
task that required a keen eye for typography and a lot of complex custom CSS.</p><p>That’s why today we’re excited to release <a href="https://github.com/tailwindcss/typography"><code>@tailwindcss/typography</code></a> — a plugin that lets you easily style vanilla HTML content with beautiful typographic defaults.</p><p class="lead">Until now, trying to style an article, document, or blog post with Tailwind has been a tedious task that required a keen eye for typography and a lot of complex custom CSS.</p><p>By default, Tailwind removes all of the default browser styling from paragraphs, headings, lists and more. This ends up being really useful for building application UIs because you spend less time undoing user-agent styles, but when you <em>really are</em> just trying to style some content that came from a rich-text editor in a CMS or a markdown file, it can be surprising and unintuitive.</p><p>We get lots of complaints about it actually, with people regularly asking us things like:</p><blockquote><p>Why is Tailwind removing the default styles on my <code>h1</code> elements? How do I disable this? What do you mean I lose all the other base styles too?</p></blockquote><p>We hear you, but we’re not convinced that simply disabling our base styles is what you really want. You don’t want to have to remove annoying margins every time you use a <code>p</code> element in a piece of your dashboard UI. And I doubt you really want your blog posts to use the user-agent styles either — you want them to look <em>awesome</em>, not awful.</p><p>That’s why today we’re excited to release <a href="https://github.com/tailwindcss/typography"><code>@tailwindcss/typography</code></a> — a plugin that gives you what you <em>actually</em> want, without any of the downside of doing something stupid like disabling our base styles.</p><p>It adds a new set of <code>prose</code> classes that you can slap on any block of vanilla HTML content and turn it into a beautiful, well-formatted document:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>prose lg:prose-xl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Garlic bread with cheese: What the science tells us<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
    For years parents have espoused the health benefits of eating garlic bread with cheese to their
    children, with the food earning such an iconic status in our culture that kids will often dress
    up as warm, cheesy loaf for Halloween.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
    But a recent study shows that the celebrated appetizer may be linked to a series of rabies cases
    springing up around the country.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">&gt;</span></span></code></pre><p>So how does it actually look? Well you’re looking at it right now — we use it to style the content on this very blog!</p><p><a href="https://github.com/tailwindcss/typography"><strong>Check out the documentation</strong></a> to learn more and try it out today.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2021">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/tailwindcss-typography">Introducing Tailwind CSS Typography</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.d0baa2223f0c7192fd56c44ef8340933.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Building the Tailwind Blog with Next.js]]></title>
            <link>https://tailwindcss.com/blog/building-the-tailwind-blog</link>
            <guid>Building the Tailwind Blog with Next.js</guid>
            <pubDate>Tue, 30 Jun 2020 18:05:31 GMT</pubDate>
            <description><![CDATA[One of the things we believe as a team is that everything we make should be sealed with a blog post. Forcing ourselves to write up a short announcement post for every project we work on acts as a built-in quality check, making sure that we never call a project "done" until we feel comfortable telling the world it's out there. The problem was that up until today, we didn't actually have anywhere to publish those posts!]]></description>
            <content:encoded><![CDATA[<p>One of the things we believe as a team is that everything we make should be <a href="https://public.3.basecamp.com/p/toAcDMxu8Fvq2yMfd2azTuaV">sealed with a blog post</a>. Forcing ourselves to write up a short announcement post for every project we work on acts as a built-in quality check, making sure that we never call a project “done” until we feel comfortable telling the world it’s out there.</p><p>The problem was that up until today, we didn’t actually have anywhere to publish those posts!</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="choosing-a-platform"><a href="#choosing-a-platform" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Choosing a platform</span></h2><p>We’re a team of developers so naturally there was no way we could convince ourselves to use something off-the-shelf, and opted to build something simple and custom with <a href="http://nextjs.org">Next.js</a>.</p><p>There are a lot of things to like about Next.js, but the primary reason we decided to use it is that it has great support for <a href="https://mdxjs.com/">MDX</a>, which is the format we wanted to use to author our posts.</p><pre class="language-md"><code class="language-md"><span class="token title important"><span class="token punctuation">#</span> My first MDX post</span>

MDX is a really cool authoring format because it lets
you embed React components right in your markdown:

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">myProp</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{5}</span> <span class="token punctuation">/&gt;</span></span>

How cool is that?</code></pre><p>MDX is really interesting because unlike regular Markdown, you can embed live React components directly in your content. This is exciting because it unlocks a lot of opportunities in how you communicate ideas in your writing. Instead of relying only on images, videos, or code blocks, you can build interactive demos and stick them directly between two paragraphs of content, without throwing away the ergonomics of authoring in Markdown.</p><p>We’re planning to do a redesign and rebuild of the Tailwind CSS documentation site later this year and being able to embed interactive components makes a huge difference in our ability to teach how the framework works, so using our little blog site as a test project made a lot of sense.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="organizing-our-content"><a href="#organizing-our-content" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Organizing our content</span></h2><p>We started by writing posts as simple MDX documents that lived directly in the <code>pages</code> directory. Eventually though we realized that just about every post would also have associated assets, for example an Open Graph image at the bare minimum.</p><p>Having to store those in another folder felt a bit sloppy, so we decided instead to give every post its own folder in the <code>pages</code> directory, and put the post content in an <code>index.mdx</code> file.</p><pre><code>public/
src/
├── components/
├── css/
├── img/
└── pages/
    ├── building-the-tailwindcss-blog/
    │   ├── index.mdx
    │   └── card.jpeg
    ├── introducing-linting-for-tailwindcss-intellisense/
    │   ├── index.mdx
    │   ├── css.png
    │   ├── html.png
    │   └── card.jpeg
    ├── _app.js
    ├── _document.js
    └── index.js
next.config.js
package.json
postcss.config.js
README.md
tailwind.config.js
</code></pre><p>This let us co-locate any assets for that post in the same folder, and leverage webpack’s <a href="https://github.com/tailwindcss/blog/blob/59bd38f2f423f133c0b6157a925ec2875ce880af/next.config.js#L28-L39">file-loader</a> to import those assets directly into the post.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="metadata"><a href="#metadata" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Metadata</span></h2><p>We store metadata about each post in a <code>meta</code> object that we export at the top of each MDX file:</p><pre class="language-js"><code class="language-js"><span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> bradlc <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">&#x27;@/authors&#x27;</span>
<span class="token keyword module">import</span> <span class="token imports">openGraphImage</span> <span class="token keyword module">from</span> <span class="token string">&#x27;./card.jpeg&#x27;</span>

<span class="token keyword module">export</span> <span class="token keyword">const</span> meta <span class="token operator">=</span> <span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token string">&#x27;Introducing linting for Tailwind CSS IntelliSense&#x27;</span><span class="token punctuation">,</span>
  description<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Today we’re releasing a new version of the Tailwind CSS IntelliSense extension for Visual Studio Code that adds Tailwind-specific linting to both your CSS and your markup.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>
  date<span class="token operator">:</span> <span class="token string">&#x27;2020-06-23T18:52:03Z&#x27;</span><span class="token punctuation">,</span>
  authors<span class="token operator">:</span> <span class="token punctuation">[</span>bradlc<span class="token punctuation">]</span><span class="token punctuation">,</span>
  image<span class="token operator">:</span> openGraphImage<span class="token punctuation">,</span>
  discussion<span class="token operator">:</span> <span class="token string">&#x27;https://github.com/tailwindcss/tailwindcss/discussions/1956&#x27;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// Post content goes here</span></code></pre><p>This is where we define the post title (used for the actual <code>h1</code> on the post page and the page title), the description (for Open Graph previews), the publish date, the authors, the Open Graph image, and a link to the GitHub Discussions thread for the post.</p><p>We store all of our authors data in a separate file that just contains each team member’s name, Twitter handle, and avatar.</p><pre class="language-js"><code class="language-js"><span class="token keyword module">import</span> <span class="token imports">adamwathanAvatar</span> <span class="token keyword module">from</span> <span class="token string">&#x27;./img/adamwathan.jpg&#x27;</span>
<span class="token keyword module">import</span> <span class="token imports">bradlcAvatar</span> <span class="token keyword module">from</span> <span class="token string">&#x27;./img/bradlc.jpg&#x27;</span>
<span class="token keyword module">import</span> <span class="token imports">steveschogerAvatar</span> <span class="token keyword module">from</span> <span class="token string">&#x27;./img/steveschoger.jpg&#x27;</span>

<span class="token keyword module">export</span> <span class="token keyword">const</span> adamwathan <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#x27;Adam Wathan&#x27;</span><span class="token punctuation">,</span>
  twitter<span class="token operator">:</span> <span class="token string">&#x27;@adamwathan&#x27;</span><span class="token punctuation">,</span>
  avatar<span class="token operator">:</span> adamwathanAvatar<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword module">export</span> <span class="token keyword">const</span> bradlc <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#x27;Brad Cornes&#x27;</span><span class="token punctuation">,</span>
  twitter<span class="token operator">:</span> <span class="token string">&#x27;@bradlc&#x27;</span><span class="token punctuation">,</span>
  avatar<span class="token operator">:</span> bradlcAvatar<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword module">export</span> <span class="token keyword">const</span> steveschoger <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#x27;Steve Schoger&#x27;</span><span class="token punctuation">,</span>
  twitter<span class="token operator">:</span> <span class="token string">&#x27;@steveschoger&#x27;</span><span class="token punctuation">,</span>
  avatar<span class="token operator">:</span> steveschogerAvatar<span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre><p>The nice thing about actually importing the author object into a post instead of connecting it through some sort of identifier is that we can easily add an author inline if we wanted to:</p><pre class="language-js"><code class="language-js"><span class="token keyword module">export</span> <span class="token keyword">const</span> meta <span class="token operator">=</span> <span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token string">&#x27;An example of a guest post by someone not on the team&#x27;</span><span class="token punctuation">,</span>
  authors<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&#x27;Simon Vrachliotis&#x27;</span><span class="token punctuation">,</span>
      twitter<span class="token operator">:</span> <span class="token string">&#x27;@simonswiss&#x27;</span><span class="token punctuation">,</span>
      avatar<span class="token operator">:</span> <span class="token string">&#x27;https://pbs.twimg.com/profile_images/1160929863/n510426211_274341_6220_400x400.jpg&#x27;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span></code></pre><p>This makes it easy for us to keep author information in sync by giving it a central source of truth, but doesn’t give up any flexibility.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="displaying-post-previews"><a href="#displaying-post-previews" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Displaying post previews</span></h2><p>We wanted to display previews for each post on the homepage, and this turned out to be a surprisingly challenging problem.</p><p>Essentially what we wanted to be able to do was use the <code>getStaticProps</code> feature of Next.js to get a list of all the posts at build-time, extract the information we need, and pass that in to the actual page component to render.</p><p>The challenge is that we wanted to do this without actually importing every single page, because that would mean that our bundle for the homepage would contain every single blog post for the entire site, leading to a much bigger bundle than necessary. Maybe not a big deal right now when we only have a couple of posts, but once you’re up to dozens or hundreds of posts that’s a lot of wasted bytes.</p><p>We tried a few different approaches but the one we settled on was using webpack’s <a href="https://webpack.js.org/configuration/module/#ruleresourcequery">resourceQuery</a> feature combined with a couple of custom loaders to make it possible to load each blog post in two formats:</p><ol role="list"><li>The entire post, used for post pages.</li><li>The post preview, where we load the minimum data needed for the homepage.</li></ol><p>The way we set it up, any time we add a <code>?preview</code> query to the end of an import for an individual post, we get back a much smaller version of that post that just includes the metadata and the preview excerpt, rather than the entire post content.</p><p>Here’s a snippet of what that custom loader looks like:</p><pre class="language-js"><code class="language-js"><span class="token punctuation">{</span>
  resourceQuery<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">preview</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
  use<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token spread operator">...</span>mdx<span class="token punctuation">,</span>
    <span class="token function">createLoader</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>src<span class="token punctuation">.</span><span class="token method function property-access">includes</span><span class="token punctuation">(</span><span class="token string">&#x27;&lt;!--​more​--&gt;&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">[</span>preview<span class="token punctuation">]</span> <span class="token operator">=</span> src<span class="token punctuation">.</span><span class="token method function property-access">split</span><span class="token punctuation">(</span><span class="token string">&#x27;&lt;!--​more​--&gt;&#x27;</span><span class="token punctuation">)</span>
        <span class="token keyword control-flow">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">callback</span><span class="token punctuation">(</span><span class="token keyword null nil">null</span><span class="token punctuation">,</span> preview<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">const</span> <span class="token punctuation">[</span>preview<span class="token punctuation">]</span> <span class="token operator">=</span> src<span class="token punctuation">.</span><span class="token method function property-access">split</span><span class="token punctuation">(</span><span class="token string">&#x27;&lt;!--​/excerpt​--&gt;&#x27;</span><span class="token punctuation">)</span>
      <span class="token keyword control-flow">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">callback</span><span class="token punctuation">(</span><span class="token keyword null nil">null</span><span class="token punctuation">,</span> preview<span class="token punctuation">.</span><span class="token method function property-access">replace</span><span class="token punctuation">(</span><span class="token string">&#x27;&lt;!--​excerpt​--&gt;&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre><p>It lets us define the excerpt for each post either by sticking <code>&lt;!--​more--&gt;</code> after the intro paragraph, or by wrapping the excerpt in a pair of <code>&lt;!--​excerpt--&gt;</code> and <code>&lt;!--​/excerpt--&gt;</code> tags, allowing us to write an excerpt that’s completely independent from the post content.</p><pre><code>export const meta = {
  // ...
}

This is the beginning of the post, and what we&#x27;d like to
show on the homepage.

&lt;!--​more--&gt;

Anything after that is not included in the bundle unless
you are actually viewing that post.
</code></pre><p>Solving this problem in an elegant way was pretty challenging, but ultimately it was cool to come up with a solution that let us keep everything in one file instead of using a separate file for the preview and the actual post content.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="generating-next-previous-post-links"><a href="#generating-next-previous-post-links" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Generating next/previous post links</span></h2><p>The last challenge we had when building this simple site was being able to include links to the next and previous post whenever you’re viewing an individual post.</p><p>At its core, what we needed to do was load up all of the posts (ideally at build-time), find the current post in that list, then grab the post that came before and the post that came after so we could pass those through to the page component as props.</p><p>This ended up being harder than we expected, because it turns out that MDX doesn’t currently support <code>getStaticProps</code> the way you’d normally use it. You can’t actually export it directly from your MDX files, instead you have to store your code in a separate file and re-export it from there.</p><p>We didn’t want to load this extra code when just importing our post <em>previews</em> on the homepage, and we also didn’t want to have to repeat this code in every single post, so we decided to prepend this export to the beginning of each post using another custom loader:</p><pre class="language-js"><code class="language-js"><span class="token punctuation">{</span>
  use<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token spread operator">...</span>mdx<span class="token punctuation">,</span>
    <span class="token function">createLoader</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token string">&#x27;import Post from &quot;@/components/Post&quot;&#x27;</span><span class="token punctuation">,</span>
        <span class="token string">&#x27;export { getStaticProps } from &quot;@/getStaticProps&quot;&#x27;</span><span class="token punctuation">,</span>
        src<span class="token punctuation">,</span>
        <span class="token string">&#x27;export default (props) =&gt; &lt;Post meta={meta} {...props} /&gt;&#x27;</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token method function property-access">join</span><span class="token punctuation">(</span><span class="token string">&#x27;\n&#x27;</span><span class="token punctuation">)</span>

      <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token method function property-access">includes</span><span class="token punctuation">(</span><span class="token string">&#x27;&lt;!--​more--&gt;&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword control-flow">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">callback</span><span class="token punctuation">(</span><span class="token keyword null nil">null</span><span class="token punctuation">,</span> content<span class="token punctuation">.</span><span class="token method function property-access">split</span><span class="token punctuation">(</span><span class="token string">&#x27;&lt;!--​more--&gt;&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">join</span><span class="token punctuation">(</span><span class="token string">&#x27;\n&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token keyword control-flow">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">callback</span><span class="token punctuation">(</span><span class="token keyword null nil">null</span><span class="token punctuation">,</span> content<span class="token punctuation">.</span><span class="token method function property-access">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;!--​excerpt--&gt;<span class="token charclass class-name">.</span><span class="token quantifier number">*</span>&lt;!--<span class="token escape">\/</span>excerpt--&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">s</span></span><span class="token punctuation">,</span> <span class="token string">&#x27;&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre><p>We also needed to use this custom loader to actually pass those static props to our <code>Post</code> component, so we appended that extra export you see above as well.</p><p>This wasn’t the only issue though. It turns out <code>getStaticProps</code> doesn’t give you any information about the current page being rendered, so we had no way of knowing what post we were looking at when trying to determine the next and previous posts. I suspect this is solvable, but due to time constraints we opted to do more of that work on the client and less at build time, so we could actually see what the current route was when trying to figure out which links we needed.</p><p>We load up all of the posts in <code>getStaticProps</code>, and map them to very lightweight objects that just contain the URL for the post, and the post title:</p><pre class="language-js"><code class="language-js"><span class="token keyword module">import</span> <span class="token imports">getAllPostPreviews</span> <span class="token keyword module">from</span> <span class="token string">&#x27;@/getAllPostPreviews&#x27;</span>

<span class="token keyword module">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getStaticProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword control-flow">return</span> <span class="token punctuation">{</span>
    props<span class="token operator">:</span> <span class="token punctuation">{</span>
      posts<span class="token operator">:</span> <span class="token function">getAllPostPreviews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        title<span class="token operator">:</span> post<span class="token punctuation">.</span><span class="token property-access">module</span><span class="token punctuation">.</span><span class="token property-access">meta</span><span class="token punctuation">.</span><span class="token property-access">title</span><span class="token punctuation">,</span>
        link<span class="token operator">:</span> post<span class="token punctuation">.</span><span class="token property-access">link</span><span class="token punctuation">.</span><span class="token method function property-access">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre><p>Then in our actual <code>Post</code> layout component, we use the current route to determine the next and previous posts:</p><pre class="language-js"><code class="language-js"><span class="token keyword module">export</span> <span class="token keyword module">default</span> <span class="token keyword">function</span> <span class="token function"><span class="token maybe-class-name">Post</span></span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> meta<span class="token punctuation">,</span> children<span class="token punctuation">,</span> posts <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> postIndex <span class="token operator">=</span> posts<span class="token punctuation">.</span><span class="token method function property-access">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> post<span class="token punctuation">.</span><span class="token property-access">link</span> <span class="token operator">===</span> router<span class="token punctuation">.</span><span class="token property-access">pathname</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> previous <span class="token operator">=</span> posts<span class="token punctuation">[</span>postIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> next <span class="token operator">=</span> posts<span class="token punctuation">[</span>postIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>

  <span class="token comment">// ...</span>
<span class="token punctuation">}</span></code></pre><p>This works well enough for now, but again long-term I’d like to figure out a simpler solution that lets us load only the next and previous posts in <code>getStaticProps</code> instead of the entire thing.</p><p>There’s an interesting library by Hashicorp designed to make it possible to treat MDX files like a data source called <a href="https://github.com/hashicorp/next-mdx-remote">Next MDX Remote</a> that we will probably explore in the future. It should let us switch to dynamic slug-based routing which would give us access to the current pathname in <code>getStaticProps</code> and give us a lot more power.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="wrapping-up"><a href="#wrapping-up" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Wrapping up</span></h2><p>Overall, building this little site with Next.js was a fun learning experience. I’m always surprised at how complicated seemingly simple things end up being with a lot of these tools, but I’m very bullish on the future of Next.js and looking forward to building the next iteration of <a href="https://tailwindcss.com">tailwindcss.com</a> with it in the months to come.</p><p>If you’re interested in checking out the codebase for this blog or even submitting a pull request to simplify any of the things I mentioned above, <a href="https://github.com/tailwindcss/blog">check out the repository on GitHub</a>.</p><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/1987">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/building-the-tailwind-blog">Building the Tailwind Blog with Next.js</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.6b306ea9e681bca8927e8c0e9835c6a4.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Introducing linting for Tailwind CSS IntelliSense]]></title>
            <link>https://tailwindcss.com/blog/introducing-linting-for-tailwindcss-intellisense</link>
            <guid>Introducing linting for Tailwind CSS IntelliSense</guid>
            <pubDate>Tue, 23 Jun 2020 18:52:03 GMT</pubDate>
            <description><![CDATA[Today we’re releasing a new version of the Tailwind CSS IntelliSense extension for Visual Studio Code that adds Tailwind-specific linting to both your CSS and your markup.]]></description>
            <content:encoded><![CDATA[<p>Today we’re releasing a new version of the <a href="https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss">Tailwind CSS IntelliSense extension for Visual Studio Code</a> that adds Tailwind-specific linting to both your CSS and your markup.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="detecting-errors-in-your-css"><a href="#detecting-errors-in-your-css" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Detecting errors in your CSS</span></h2><p>Tailwind already detects CSS errors, for example when you mistype a screen name in the <code>@screen</code> directive. The linting feature for Tailwind CSS IntelliSense surfaces these errors and displays them in context, directly inside your editor. The linter will validate your <code>@tailwind</code>, <code>@screen</code>, <code>@variants</code> and <code>@apply</code> directives, as well as any <code>theme</code> function calls:</p><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img width="1524" height="857" alt="Screen capture showing CSS linting in action" src="/_next/static/media/css.1c94800df78bf7f2a127fc72fd051bec.png" srcSet="/_next/static/media/css.1c94800df78bf7f2a127fc72fd051bec.png 762w, /_next/static/media/css@2x.8715956a40a9d01f13c9d228b399fb55.png 1524w" sizes="(min-width: 1280px) 51rem, (min-width: 768px) 45rem, (min-width: 640px) calc(100vw - 3rem), calc(100vw - 2rem)"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="catching-conflicts-in-your-html"><a href="#catching-conflicts-in-your-html" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Catching conflicts in your HTML</span></h2><p>There is one more lint rule which analyses class lists in your template files and highlights any instances where utilities seem to be in conflict. For example you probably didn’t intend to have <code>mt-4</code> and <code>mt-6</code> in the same class list!</p><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img width="1524" height="857" alt="Screen capture showing markup linting in action" src="/_next/static/media/html.48e11ba393158483fda665f492208e21.png" srcSet="/_next/static/media/html.48e11ba393158483fda665f492208e21.png 762w, /_next/static/media/html@2x.eb2640e704aec4da92dfc8bde37eb0b5.png 1524w" sizes="(min-width: 1280px) 51rem, (min-width: 768px) 45rem, (min-width: 640px) calc(100vw - 3rem), calc(100vw - 2rem)"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="quick-fixes-included"><a href="#quick-fixes-included" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Quick fixes included</span></h2><p>To make it as easy as possible to fix any issues, all of the lint rules have their own “quick fixes” which can be triggered directly within Visual Studio Code. If you accidentally typed <code>@screen small</code> instead of <code>@screen sm</code>, the editor can automatically replace <code>small</code> with <code>sm</code> for you!</p><p>As well as simple text replacements there’s also some more interesting quick fixes for the more complex lint rules. Take a look at how the extension can automatically refactor an invalid <code>@apply</code> directive:</p><video src="/_next/static/media/apply-quick-fix.d0f06b738270fa8fbcbe68ff4d1a6301.mp4" width="1600" height="900" controls=""></video><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="configuration"><a href="#configuration" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Configuration</span></h2><p>We think you’ll love the new lint feature, but if you don’t, or you just want to tweak some behavior, we’ve got you covered. You can decide how each rule violation is treated: is it an <code>error</code>, or just a <code>warning</code>, or do you want to <code>ignore</code> the rule altogether? If you really want to you can disable linting entirely using the new <code>tailwindCSS.validate</code> setting.</p><p>Check out the <a href="https://github.com/tailwindcss/intellisense#tailwindcssvalidate">extension readme</a> for more details about configuring the lint rules to suit your workflow.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="conclusion"><a href="#conclusion" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Conclusion</span></h2><p>Linting is available now in <code>v0.4.0</code> of Tailwind CSS IntelliSense! If you already have the extension you may need to reload Visual Studio Code to get the update, and if you don’t you can install it via the <a href="https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss">extension marketplace</a>.</p><p>This is the very first iteration of this feature, and we’d love to hear your feedback! Do you have an idea for a new lint rule? Let us know!</p><p class="border-t border-gray-200 mt-8 pt-6">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/1956">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://tailwindcss.com/blog/introducing-linting-for-tailwindcss-intellisense">Introducing linting for Tailwind CSS IntelliSense</a> appeared first on <a href="https://tailwindcss.com/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://tailwindcss.com/_next/static/media/card.262b5275faf5c62c85ee862fb640715e.jpg" length="0" type="image/jpg"/>
        </item>
    </channel>
</rss>